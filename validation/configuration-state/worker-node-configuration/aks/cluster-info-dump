{
    "kind": "NodeList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/nodes",
        "resourceVersion": "257934"
    },
    "items": []
}
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/kube-system/events",
        "resourceVersion": "257935"
    },
    "items": []
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/kube-system/replicationcontrollers",
        "resourceVersion": "257935"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/kube-system/services",
        "resourceVersion": "257936"
    },
    "items": [
        {
            "metadata": {
                "name": "addon-http-application-routing-default-http-backend",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/services/addon-http-application-routing-default-http-backend",
                "uid": "ae0c8e24-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "311",
                "creationTimestamp": "2019-03-25T17:59:05Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "app": "addon-http-application-routing-default-http-backend",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app\":\"addon-http-application-routing-default-http-backend\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"addon-http-application-routing-default-http-backend\",\"namespace\":\"kube-system\"},\"spec\":{\"ports\":[{\"port\":80,\"targetPort\":8080}],\"selector\":{\"app\":\"addon-http-application-routing-default-http-backend\"}}}\n"
                }
            },
            "spec": {
                "ports": [
                    {
                        "protocol": "TCP",
                        "port": 80,
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "app": "addon-http-application-routing-default-http-backend"
                },
                "clusterIP": "10.0.5.239",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "addon-http-application-routing-nginx-ingress",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/services/addon-http-application-routing-nginx-ingress",
                "uid": "ae591a98-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "614",
                "creationTimestamp": "2019-03-25T17:59:05Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "app": "addon-http-application-routing-nginx-ingress",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app\":\"addon-http-application-routing-nginx-ingress\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"addon-http-application-routing-nginx-ingress\",\"namespace\":\"kube-system\"},\"spec\":{\"externalTrafficPolicy\":\"Local\",\"ports\":[{\"name\":\"http\",\"port\":80,\"targetPort\":\"http\"},{\"name\":\"https\",\"port\":443,\"targetPort\":\"https\"}],\"selector\":{\"app\":\"addon-http-application-routing-nginx-ingress\"},\"type\":\"LoadBalancer\"}}\n"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "http",
                        "protocol": "TCP",
                        "port": 80,
                        "targetPort": "http",
                        "nodePort": 31931
                    },
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": "https",
                        "nodePort": 30097
                    }
                ],
                "selector": {
                    "app": "addon-http-application-routing-nginx-ingress"
                },
                "clusterIP": "10.0.2.80",
                "type": "LoadBalancer",
                "sessionAffinity": "None",
                "externalTrafficPolicy": "Local",
                "healthCheckNodePort": 30031
            },
            "status": {
                "loadBalancer": {
                    "ingress": [
                        {
                            "ip": "52.168.169.65"
                        }
                    ]
                }
            }
        },
        {
            "metadata": {
                "name": "heapster",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/services/heapster",
                "uid": "adc366cf-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "285",
                "creationTimestamp": "2019-03-25T17:59:04Z",
                "labels": {
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "Heapster"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"Heapster\"},\"name\":\"heapster\",\"namespace\":\"kube-system\"},\"spec\":{\"ports\":[{\"port\":80,\"targetPort\":8082}],\"selector\":{\"k8s-app\":\"heapster\"}}}\n"
                }
            },
            "spec": {
                "ports": [
                    {
                        "protocol": "TCP",
                        "port": 80,
                        "targetPort": 8082
                    }
                ],
                "selector": {
                    "k8s-app": "heapster"
                },
                "clusterIP": "10.0.146.121",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "kube-dns",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/services/kube-dns",
                "uid": "ae79eb6b-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "371",
                "creationTimestamp": "2019-03-25T17:59:06Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "KubeDNS"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"kube-dns\",\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"KubeDNS\"},\"name\":\"kube-dns\",\"namespace\":\"kube-system\"},\"spec\":{\"clusterIP\":\"10.0.0.10\",\"ports\":[{\"name\":\"dns\",\"port\":53,\"protocol\":\"UDP\"},{\"name\":\"dns-tcp\",\"port\":53,\"protocol\":\"TCP\"}],\"selector\":{\"k8s-app\":\"kube-dns\"}}}\n"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "dns",
                        "protocol": "UDP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "dns-tcp",
                        "protocol": "TCP",
                        "port": 53,
                        "targetPort": 53
                    }
                ],
                "selector": {
                    "k8s-app": "kube-dns"
                },
                "clusterIP": "10.0.0.10",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "kubernetes-dashboard",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/services/kubernetes-dashboard",
                "uid": "af5fa3c8-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "439",
                "creationTimestamp": "2019-03-25T17:59:07Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "kubernetes-dashboard",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"kubernetes-dashboard\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"kubernetes-dashboard\",\"namespace\":\"kube-system\"},\"spec\":{\"ports\":[{\"port\":80,\"targetPort\":\"http\"}],\"selector\":{\"k8s-app\":\"kubernetes-dashboard\"},\"type\":\"ClusterIP\"}}\n"
                }
            },
            "spec": {
                "ports": [
                    {
                        "protocol": "TCP",
                        "port": 80,
                        "targetPort": "http"
                    }
                ],
                "selector": {
                    "k8s-app": "kubernetes-dashboard"
                },
                "clusterIP": "10.0.190.255",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "metrics-server",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/services/metrics-server",
                "uid": "aeb1e7b1-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "397",
                "creationTimestamp": "2019-03-25T17:59:06Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "Metrics-server"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"Metrics-server\"},\"name\":\"metrics-server\",\"namespace\":\"kube-system\"},\"spec\":{\"ports\":[{\"port\":443,\"protocol\":\"TCP\",\"targetPort\":443}],\"selector\":{\"k8s-app\":\"metrics-server\"}}}\n"
                }
            },
            "spec": {
                "ports": [
                    {
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": 443
                    }
                ],
                "selector": {
                    "k8s-app": "metrics-server"
                },
                "clusterIP": "10.0.2.68",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/kube-system/daemonsets",
        "resourceVersion": "257936"
    },
    "items": [
        {
            "metadata": {
                "name": "kube-proxy",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/daemonsets/kube-proxy",
                "uid": "aed21c15-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "413",
                "generation": 1,
                "creationTimestamp": "2019-03-25T17:59:06Z",
                "labels": {
                    "component": "kube-proxy",
                    "kubernetes.io/cluster-service": "true",
                    "tier": "node"
                },
                "annotations": {
                    "aks.microsoft.com/release-time": "seconds:1553536722 nanos:945054893 ",
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"extensions/v1beta1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{\"aks.microsoft.com/release-time\":\"seconds:1553536722 nanos:945054893 \"},\"labels\":{\"component\":\"kube-proxy\",\"kubernetes.io/cluster-service\":\"true\",\"tier\":\"node\"},\"name\":\"kube-proxy\",\"namespace\":\"kube-system\"},\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"aks.microsoft.com/release-time\":\"seconds:1553536722 nanos:945054893 \"},\"labels\":{\"component\":\"kube-proxy\",\"tier\":\"node\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"labelSelector\":null,\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"}]}]}}},\"containers\":[{\"command\":[\"/hyperkube\",\"proxy\",\"--kubeconfig=/var/lib/kubelet/kubeconfig\",\"--cluster-cidr=10.244.0.0/16\",\"--feature-gates=ExperimentalCriticalPodAnnotation=true\"],\"image\":\"k8s.gcr.io/hyperkube-amd64:v1.11.7\",\"name\":\"kube-proxy\",\"resources\":{\"requests\":{\"cpu\":\"100m\"}},\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/var/lib/kubelet\",\"name\":\"kubeconfig\",\"readOnly\":true},{\"mountPath\":\"/etc/kubernetes/certs\",\"name\":\"certificates\",\"readOnly\":true}]}],\"hostNetwork\":true,\"nodeSelector\":{\"beta.kubernetes.io/os\":\"linux\"},\"priorityClassName\":\"high-priority\",\"serviceAccountName\":\"kube-proxy\",\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\",\"operator\":\"Equal\",\"value\":\"true\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/var/lib/kubelet\"},\"name\":\"kubeconfig\"},{\"hostPath\":{\"path\":\"/etc/kubernetes/certs\"},\"name\":\"certificates\"}]}},\"updateStrategy\":{\"rollingUpdate\":{\"maxUnavailable\":1},\"type\":\"RollingUpdate\"}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "component": "kube-proxy",
                        "tier": "node"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "component": "kube-proxy",
                            "tier": "node"
                        },
                        "annotations": {
                            "aks.microsoft.com/release-time": "seconds:1553536722 nanos:945054893 "
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "kubeconfig",
                                "hostPath": {
                                    "path": "/var/lib/kubelet",
                                    "type": ""
                                }
                            },
                            {
                                "name": "certificates",
                                "hostPath": {
                                    "path": "/etc/kubernetes/certs",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "kube-proxy",
                                "image": "k8s.gcr.io/hyperkube-amd64:v1.11.7",
                                "command": [
                                    "/hyperkube",
                                    "proxy",
                                    "--kubeconfig=/var/lib/kubelet/kubeconfig",
                                    "--cluster-cidr=10.244.0.0/16",
                                    "--feature-gates=ExperimentalCriticalPodAnnotation=true"
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "100m"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "kubeconfig",
                                        "readOnly": true,
                                        "mountPath": "/var/lib/kubelet"
                                    },
                                    {
                                        "name": "certificates",
                                        "readOnly": true,
                                        "mountPath": "/etc/kubernetes/certs"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "beta.kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "kube-proxy",
                        "serviceAccount": "kube-proxy",
                        "hostNetwork": true,
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "node-role.kubernetes.io/master",
                                "operator": "Equal",
                                "value": "true",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "high-priority"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 0,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 0,
                "numberReady": 0,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "kube-svc-redirect",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/daemonsets/kube-svc-redirect",
                "uid": "af388cde-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "428",
                "generation": 1,
                "creationTimestamp": "2019-03-25T17:59:07Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "component": "kube-svc-redirect",
                    "kubernetes.io/cluster-service": "true",
                    "tier": "node"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"extensions/v1beta1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"component\":\"kube-svc-redirect\",\"kubernetes.io/cluster-service\":\"true\",\"tier\":\"node\"},\"name\":\"kube-svc-redirect\",\"namespace\":\"kube-system\"},\"spec\":{\"template\":{\"metadata\":{\"labels\":{\"component\":\"kube-svc-redirect\",\"tier\":\"node\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"labelSelector\":null,\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"}]}]}}},\"containers\":[{\"env\":[{\"name\":\"KUBERNETES_SVC_IP\",\"value\":\"10.0.0.1\"},{\"name\":\"KUBE_SVC_REDIRECTOR_PROXY_IP\",\"value\":\"127.0.0.1:14612\"}],\"image\":\"docker.io/deis/kube-svc-redirect:v1.0.2\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"redirector\",\"resources\":{\"requests\":{\"cpu\":\"5m\",\"memory\":\"2Mi\"}},\"securityContext\":{\"capabilities\":{\"add\":[\"NET_ADMIN\"]}}},{\"image\":\"nginx:1.13.12-alpine\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"azureproxy\",\"ports\":[{\"containerPort\":14612,\"protocol\":\"TCP\"}],\"resources\":{\"requests\":{\"cpu\":\"5m\",\"memory\":\"32Mi\"}},\"volumeMounts\":[{\"mountPath\":\"/etc/nginx/nginx.conf\",\"name\":\"azureproxy-nginx\",\"readOnly\":true,\"subPath\":\"nginx.conf\"},{\"mountPath\":\"/etc/nginx/conf.d\",\"name\":\"azureproxy-configs\",\"readOnly\":true},{\"mountPath\":\"/etc/nginx/certs\",\"name\":\"azureproxy-certs\",\"readOnly\":true}]}],\"hostNetwork\":true,\"nodeSelector\":{\"beta.kubernetes.io/os\":\"linux\"},\"priorityClassName\":\"high-priority\",\"serviceAccountName\":\"kube-svc-redirector\",\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\",\"operator\":\"Equal\",\"value\":\"true\"}],\"volumes\":[{\"configMap\":{\"name\":\"azureproxy-nginx\"},\"name\":\"azureproxy-nginx\"},{\"configMap\":{\"name\":\"azureproxy-config\"},\"name\":\"azureproxy-configs\"},{\"name\":\"azureproxy-certs\",\"secret\":{\"secretName\":\"azureproxy-certs\"}}]}},\"updateStrategy\":{\"rollingUpdate\":{\"maxUnavailable\":1},\"type\":\"RollingUpdate\"}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "component": "kube-svc-redirect",
                        "tier": "node"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "component": "kube-svc-redirect",
                            "tier": "node"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "azureproxy-nginx",
                                "configMap": {
                                    "name": "azureproxy-nginx",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "azureproxy-configs",
                                "configMap": {
                                    "name": "azureproxy-config",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "azureproxy-certs",
                                "secret": {
                                    "secretName": "azureproxy-certs",
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "redirector",
                                "image": "docker.io/deis/kube-svc-redirect:v1.0.2",
                                "env": [
                                    {
                                        "name": "KUBERNETES_SVC_IP",
                                        "value": "10.0.0.1"
                                    },
                                    {
                                        "name": "KUBE_SVC_REDIRECTOR_PROXY_IP",
                                        "value": "127.0.0.1:14612"
                                    }
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "5m",
                                        "memory": "2Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_ADMIN"
                                        ]
                                    }
                                }
                            },
                            {
                                "name": "azureproxy",
                                "image": "nginx:1.13.12-alpine",
                                "ports": [
                                    {
                                        "hostPort": 14612,
                                        "containerPort": 14612,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "5m",
                                        "memory": "32Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "azureproxy-nginx",
                                        "readOnly": true,
                                        "mountPath": "/etc/nginx/nginx.conf",
                                        "subPath": "nginx.conf"
                                    },
                                    {
                                        "name": "azureproxy-configs",
                                        "readOnly": true,
                                        "mountPath": "/etc/nginx/conf.d"
                                    },
                                    {
                                        "name": "azureproxy-certs",
                                        "readOnly": true,
                                        "mountPath": "/etc/nginx/certs"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "beta.kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "kube-svc-redirector",
                        "serviceAccount": "kube-svc-redirector",
                        "hostNetwork": true,
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "node-role.kubernetes.io/master",
                                "operator": "Equal",
                                "value": "true",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "high-priority"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 0,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 0,
                "numberReady": 0,
                "observedGeneration": 1
            }
        }
    ]
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments",
        "resourceVersion": "257936"
    },
    "items": [
        {
            "metadata": {
                "name": "addon-http-application-routing-default-http-backend",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/addon-http-application-routing-default-http-backend",
                "uid": "ade5b1de-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "609",
                "generation": 1,
                "creationTimestamp": "2019-03-25T17:59:05Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "app": "addon-http-application-routing-default-http-backend",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"extensions/v1beta1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app\":\"addon-http-application-routing-default-http-backend\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"addon-http-application-routing-default-http-backend\",\"namespace\":\"kube-system\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"addon-http-application-routing-default-http-backend\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"addon-http-application-routing-default-http-backend\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"labelSelector\":null,\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"}]}]}}},\"containers\":[{\"image\":\"k8s.gcr.io/defaultbackend:1.4\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/healthz\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":30,\"timeoutSeconds\":5},\"name\":\"addon-http-application-routing-default-http-backend\",\"ports\":[{\"containerPort\":8080}],\"resources\":{\"limits\":{\"cpu\":\"10m\",\"memory\":\"20Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"20Mi\"}}}],\"priorityClassName\":\"addon-priority\",\"terminationGracePeriodSeconds\":60}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "addon-http-application-routing-default-http-backend"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "addon-http-application-routing-default-http-backend"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "addon-http-application-routing-default-http-backend",
                                "image": "k8s.gcr.io/defaultbackend:1.4",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "10m",
                                        "memory": "20Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "20Mi"
                                    }
                                },
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 60,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "priorityClassName": "addon-priority"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 1
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 2147483647
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "unavailableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2019-03-25T17:59:05Z",
                        "lastTransitionTime": "2019-03-25T17:59:05Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "addon-http-application-routing-external-dns",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/addon-http-application-routing-external-dns",
                "uid": "addd64ef-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "605",
                "generation": 1,
                "creationTimestamp": "2019-03-25T17:59:05Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "app": "addon-http-application-routing-external-dns",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"extensions/v1beta1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app\":\"addon-http-application-routing-external-dns\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"addon-http-application-routing-external-dns\",\"namespace\":\"kube-system\"},\"spec\":{\"strategy\":{\"type\":\"Recreate\"},\"template\":{\"metadata\":{\"annotations\":{\"checksum/cloud-provider-config\":\"70abeccb9e49238e42c5016bc82d712e54011d9ddf1a98708790aacf68092db3\"},\"labels\":{\"app\":\"addon-http-application-routing-external-dns\"}},\"spec\":{\"containers\":[{\"args\":[\"--source=service\",\"--source=ingress\",\"--provider=azure\",\"--azure-resource-group=MC_cloud-shell-storage-westeurope_test-9_eastus\",\"--domain-filter=d9809f8c90f5466abc56.eastus.aksapp.io\",\"--annotation-filter=kubernetes.io/ingress.class=addon-http-application-routing\",\"--interval=3m0s\"],\"image\":\"zalan.azureedge.net/teapot/external-dns:v0.4.8\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"addon-http-application-routing-external-dns\",\"volumeMounts\":[{\"mountPath\":\"/etc/kubernetes/azure.json\",\"name\":\"azure-config-file\",\"readOnly\":true}]}],\"priorityClassName\":\"addon-priority\",\"serviceAccountName\":\"addon-http-application-routing-external-dns\",\"volumes\":[{\"hostPath\":{\"path\":\"/etc/kubernetes/azure.json\"},\"name\":\"azure-config-file\"}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "addon-http-application-routing-external-dns"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "addon-http-application-routing-external-dns"
                        },
                        "annotations": {
                            "checksum/cloud-provider-config": "70abeccb9e49238e42c5016bc82d712e54011d9ddf1a98708790aacf68092db3"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "azure-config-file",
                                "hostPath": {
                                    "path": "/etc/kubernetes/azure.json",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "addon-http-application-routing-external-dns",
                                "image": "zalan.azureedge.net/teapot/external-dns:v0.4.8",
                                "args": [
                                    "--source=service",
                                    "--source=ingress",
                                    "--provider=azure",
                                    "--azure-resource-group=MC_cloud-shell-storage-westeurope_test-9_eastus",
                                    "--domain-filter=d9809f8c90f5466abc56.eastus.aksapp.io",
                                    "--annotation-filter=kubernetes.io/ingress.class=addon-http-application-routing",
                                    "--interval=3m0s"
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "azure-config-file",
                                        "readOnly": true,
                                        "mountPath": "/etc/kubernetes/azure.json"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "addon-http-application-routing-external-dns",
                        "serviceAccount": "addon-http-application-routing-external-dns",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "priorityClassName": "addon-priority"
                    }
                },
                "strategy": {
                    "type": "Recreate"
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 2147483647
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "unavailableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "False",
                        "lastUpdateTime": "2019-03-25T17:59:05Z",
                        "lastTransitionTime": "2019-03-25T17:59:05Z",
                        "reason": "MinimumReplicasUnavailable",
                        "message": "Deployment does not have minimum availability."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "addon-http-application-routing-nginx-ingress-controller",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/addon-http-application-routing-nginx-ingress-controller",
                "uid": "ae3e94e8-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "548",
                "generation": 1,
                "creationTimestamp": "2019-03-25T17:59:05Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "app": "addon-http-application-routing-ingress-nginx",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"extensions/v1beta1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app\":\"addon-http-application-routing-ingress-nginx\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"addon-http-application-routing-nginx-ingress-controller\",\"namespace\":\"kube-system\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"addon-http-application-routing-nginx-ingress\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"addon-http-application-routing-nginx-ingress\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"labelSelector\":null,\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"}]}]}}},\"containers\":[{\"args\":[\"/nginx-ingress-controller\",\"--ingress-class=addon-http-application-routing\",\"--default-backend-service=$(POD_NAMESPACE)/addon-http-application-routing-default-http-backend\",\"--configmap=$(POD_NAMESPACE)/addon-http-application-routing-nginx-configuration\",\"--tcp-services-configmap=$(POD_NAMESPACE)/addon-http-application-routing-tcp-services\",\"--udp-services-configmap=$(POD_NAMESPACE)/addon-http-application-routing-udp-services\",\"--annotations-prefix=nginx.ingress.kubernetes.io\",\"--publish-service=$(POD_NAMESPACE)/addon-http-application-routing-nginx-ingress\"],\"env\":[{\"name\":\"POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"quayio.azureedge.net/kubernetes-ingress-controller/nginx-ingress-controller:0.19.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/healthz\",\"port\":10254,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"addon-http-application-routing-nginx-ingress-controller\",\"ports\":[{\"containerPort\":80,\"name\":\"http\"},{\"containerPort\":443,\"name\":\"https\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/healthz\",\"port\":10254,\"scheme\":\"HTTP\"},\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"securityContext\":{\"capabilities\":{\"add\":[\"NET_BIND_SERVICE\"],\"drop\":[\"ALL\"]},\"runAsUser\":33}}],\"priorityClassName\":\"addon-priority\",\"serviceAccountName\":\"addon-http-application-routing-nginx-ingress-serviceaccount\"}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "addon-http-application-routing-nginx-ingress"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "addon-http-application-routing-nginx-ingress"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "addon-http-application-routing-nginx-ingress-controller",
                                "image": "quayio.azureedge.net/kubernetes-ingress-controller/nginx-ingress-controller:0.19.0",
                                "args": [
                                    "/nginx-ingress-controller",
                                    "--ingress-class=addon-http-application-routing",
                                    "--default-backend-service=$(POD_NAMESPACE)/addon-http-application-routing-default-http-backend",
                                    "--configmap=$(POD_NAMESPACE)/addon-http-application-routing-nginx-configuration",
                                    "--tcp-services-configmap=$(POD_NAMESPACE)/addon-http-application-routing-tcp-services",
                                    "--udp-services-configmap=$(POD_NAMESPACE)/addon-http-application-routing-udp-services",
                                    "--annotations-prefix=nginx.ingress.kubernetes.io",
                                    "--publish-service=$(POD_NAMESPACE)/addon-http-application-routing-nginx-ingress"
                                ],
                                "ports": [
                                    {
                                        "name": "http",
                                        "containerPort": 80,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "https",
                                        "containerPort": 443,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "resources": {},
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 10254,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 10254,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsUser": 33
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "addon-http-application-routing-nginx-ingress-serviceaccount",
                        "serviceAccount": "addon-http-application-routing-nginx-ingress-serviceaccount",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "priorityClassName": "addon-priority"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 1
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 2147483647
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "unavailableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2019-03-25T17:59:05Z",
                        "lastTransitionTime": "2019-03-25T17:59:05Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "heapster",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/heapster",
                "uid": "ad149e59-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "588",
                "generation": 1,
                "creationTimestamp": "2019-03-25T17:59:03Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "EnsureExists",
                    "k8s-app": "heapster",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "heapster"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "heapster"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "heapster-config-volume",
                                "configMap": {
                                    "name": "heapster-config",
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "heapster",
                                "image": "k8s.gcr.io/heapster-amd64:v1.5.3",
                                "command": [
                                    "/heapster",
                                    "--source=kubernetes.summary_api:\"\""
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "80m",
                                        "memory": "140Mi"
                                    },
                                    "requests": {
                                        "cpu": "80m",
                                        "memory": "140Mi"
                                    }
                                },
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8082,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 180,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            },
                            {
                                "name": "heapster-nanny",
                                "image": "k8s.gcr.io/addon-resizer:1.8.1",
                                "command": [
                                    "/pod_nanny",
                                    "--config-dir=/etc/config",
                                    "--cpu=80m",
                                    "--extra-cpu=0.5m",
                                    "--memory=140Mi",
                                    "--extra-memory=4Mi",
                                    "--threshold=5",
                                    "--deployment=heapster",
                                    "--container=heapster",
                                    "--poll-period=300000",
                                    "--estimator=exponential"
                                ],
                                "env": [
                                    {
                                        "name": "MY_POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "MY_POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "50m",
                                        "memory": "90Mi"
                                    },
                                    "requests": {
                                        "cpu": "50m",
                                        "memory": "90Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "heapster-config-volume",
                                        "mountPath": "/etc/config"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "beta.kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "heapster",
                        "serviceAccount": "heapster",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "high-priority"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 1
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 2147483647
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "unavailableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2019-03-25T17:59:03Z",
                        "lastTransitionTime": "2019-03-25T17:59:03Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "kube-dns-autoscaler",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/kube-dns-autoscaler",
                "uid": "ae6349a7-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "566",
                "generation": 1,
                "creationTimestamp": "2019-03-25T17:59:05Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "kube-dns-autoscaler",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"extensions/v1beta1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"kube-dns-autoscaler\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"kube-dns-autoscaler\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"kube-dns-autoscaler\"}},\"template\":{\"metadata\":{\"annotations\":{\"scheduler.alpha.kubernetes.io/critical-pod\":\"\",\"seccomp.security.alpha.kubernetes.io/pod\":\"docker/default\"},\"labels\":{\"k8s-app\":\"kube-dns-autoscaler\"}},\"spec\":{\"containers\":[{\"command\":[\"/cluster-proportional-autoscaler\",\"--namespace=kube-system\",\"--configmap=kube-dns-autoscaler\",\"--target=deployment/kube-dns-v20\",\"--default-params={\\\"ladder\\\":{\\\"coresToReplicas\\\":[[1,2],[512,3],[1024,4],[2048,5]],\\\"nodesToReplicas\\\":[[1,2],[8,3],[16,4],[32,5]]}}\",\"--logtostderr=true\",\"--v=2\"],\"image\":\"k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.1.2-r2\",\"name\":\"autoscaler\",\"resources\":{\"requests\":{\"cpu\":\"20m\",\"memory\":\"10Mi\"}}}],\"dnsPolicy\":\"Default\",\"priorityClassName\":\"system-cluster-critical\",\"serviceAccountName\":\"kube-dns-autoscaler\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns-autoscaler"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns-autoscaler"
                        },
                        "annotations": {
                            "scheduler.alpha.kubernetes.io/critical-pod": "",
                            "seccomp.security.alpha.kubernetes.io/pod": "docker/default"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "autoscaler",
                                "image": "k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.1.2-r2",
                                "command": [
                                    "/cluster-proportional-autoscaler",
                                    "--namespace=kube-system",
                                    "--configmap=kube-dns-autoscaler",
                                    "--target=deployment/kube-dns-v20",
                                    "--default-params={\"ladder\":{\"coresToReplicas\":[[1,2],[512,3],[1024,4],[2048,5]],\"nodesToReplicas\":[[1,2],[8,3],[16,4],[32,5]]}}",
                                    "--logtostderr=true",
                                    "--v=2"
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "20m",
                                        "memory": "10Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "kube-dns-autoscaler",
                        "serviceAccount": "kube-dns-autoscaler",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 1
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 2147483647
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "unavailableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2019-03-25T17:59:06Z",
                        "lastTransitionTime": "2019-03-25T17:59:06Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "kube-dns-v20",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/kube-dns-v20",
                "uid": "ae852982-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "424",
                "generation": 1,
                "creationTimestamp": "2019-03-25T17:59:06Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "version": "v20"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"extensions/v1beta1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"kube-dns\",\"kubernetes.io/cluster-service\":\"true\",\"version\":\"v20\"},\"name\":\"kube-dns-v20\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"kube-dns\",\"version\":\"v20\"}},\"template\":{\"metadata\":{\"annotations\":{\"prometheus.io/port\":\"10055\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"k8s-app\":\"kube-dns\",\"kubernetes.io/cluster-service\":\"true\",\"version\":\"v20\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"labelSelector\":null,\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"}]}]}},\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"k8s-app\",\"operator\":\"In\",\"values\":[\"kube-dns\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":100}]}},\"containers\":[{\"args\":[\"--kubecfg-file=/config/kubeconfig\",\"--config-dir=/kube-dns-config\",\"--domain=cluster.local.\",\"--dns-port=10053\",\"--v=2\"],\"env\":[{\"name\":\"PROMETHEUS_PORT\",\"value\":\"10055\"}],\"image\":\"k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.13\",\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/healthz-kubedns\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":60,\"successThreshold\":1,\"timeoutSeconds\":5},\"name\":\"kubedns\",\"ports\":[{\"containerPort\":10053,\"name\":\"dns-local\",\"protocol\":\"UDP\"},{\"containerPort\":10053,\"name\":\"dns-tcp-local\",\"protocol\":\"TCP\"},{\"containerPort\":10055,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/readiness\",\"port\":8081,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":30,\"timeoutSeconds\":5},\"resources\":{\"limits\":{\"memory\":\"170Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"70Mi\"}},\"volumeMounts\":[{\"mountPath\":\"/kube-dns-config\",\"name\":\"kube-dns-config\"},{\"mountPath\":\"/config\",\"name\":\"kubedns-kubecfg\",\"readOnly\":true}]},{\"args\":[\"-v=2\",\"-logtostderr\",\"-configDir=/kube-dns-config\",\"-restartDnsmasq=true\",\"--\",\"-k\",\"--cache-size=1000\",\"--no-resolv\",\"--server=127.0.0.1#10053\",\"--server=/in-addr.arpa/127.0.0.1#10053\",\"--server=/ip6.arpa/127.0.0.1#10053\",\"--log-facility=-\"],\"image\":\"k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64:1.14.10\",\"name\":\"dnsmasq\",\"ports\":[{\"containerPort\":53,\"name\":\"dns\",\"protocol\":\"UDP\"},{\"containerPort\":53,\"name\":\"dns-tcp\",\"protocol\":\"TCP\"}],\"volumeMounts\":[{\"mountPath\":\"/kube-dns-config\",\"name\":\"kube-dns-config\"}]},{\"args\":[\"--cmd=for d in $PROBE_DOMAINS; do nslookup $d 127.0.0.1 \\u003e/dev/null || exit 1; done\",\"--url=/healthz-dnsmasq\",\"--cmd=for d in $PROBE_DOMAINS; do nslookup $d 127.0.0.1:10053 \\u003e/dev/null || exit 1; done\",\"--url=/healthz-kubedns\",\"--port=8080\",\"--quiet\"],\"env\":[{\"name\":\"PROBE_DOMAINS\",\"value\":\"bing.com kubernetes.default.svc.cluster.local\"}],\"image\":\"k8s.gcr.io/exechealthz-amd64:1.2\",\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/healthz-dnsmasq\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":60,\"successThreshold\":1,\"timeoutSeconds\":5},\"name\":\"healthz\",\"ports\":[{\"containerPort\":8080,\"protocol\":\"TCP\"}],\"resources\":{\"limits\":{\"memory\":\"50Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"50Mi\"}}},{\"args\":[\"--v=2\",\"--logtostderr\",\"--probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV\",\"--probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV\"],\"image\":\"k8s.gcr.io/k8s-dns-sidecar-amd64:1.14.10\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/metrics\",\"port\":10054,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":60,\"successThreshold\":1,\"timeoutSeconds\":5},\"name\":\"sidecar\",\"ports\":[{\"containerPort\":10054,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"resources\":{\"requests\":{\"cpu\":\"10m\",\"memory\":\"20Mi\"}}}],\"dnsPolicy\":\"Default\",\"nodeSelector\":{\"beta.kubernetes.io/os\":\"linux\"},\"serviceAccountName\":\"kube-dns\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"}],\"volumes\":[{\"configMap\":{\"name\":\"kube-dns\",\"optional\":true},\"name\":\"kube-dns-config\"},{\"configMap\":{\"name\":\"kubedns-kubecfg\"},\"name\":\"kubedns-kubecfg\"}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns",
                        "version": "v20"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns",
                            "kubernetes.io/cluster-service": "true",
                            "version": "v20"
                        },
                        "annotations": {
                            "prometheus.io/port": "10055",
                            "prometheus.io/scrape": "true"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "kube-dns-config",
                                "configMap": {
                                    "name": "kube-dns",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "kubedns-kubecfg",
                                "configMap": {
                                    "name": "kubedns-kubecfg",
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "kubedns",
                                "image": "k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.13",
                                "args": [
                                    "--kubecfg-file=/config/kubeconfig",
                                    "--config-dir=/kube-dns-config",
                                    "--domain=cluster.local.",
                                    "--dns-port=10053",
                                    "--v=2"
                                ],
                                "ports": [
                                    {
                                        "name": "dns-local",
                                        "containerPort": 10053,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp-local",
                                        "containerPort": 10053,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 10055,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "PROMETHEUS_PORT",
                                        "value": "10055"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "kube-dns-config",
                                        "mountPath": "/kube-dns-config"
                                    },
                                    {
                                        "name": "kubedns-kubecfg",
                                        "readOnly": true,
                                        "mountPath": "/config"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz-kubedns",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/readiness",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            },
                            {
                                "name": "dnsmasq",
                                "image": "k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64:1.14.10",
                                "args": [
                                    "-v=2",
                                    "-logtostderr",
                                    "-configDir=/kube-dns-config",
                                    "-restartDnsmasq=true",
                                    "--",
                                    "-k",
                                    "--cache-size=1000",
                                    "--no-resolv",
                                    "--server=127.0.0.1#10053",
                                    "--server=/in-addr.arpa/127.0.0.1#10053",
                                    "--server=/ip6.arpa/127.0.0.1#10053",
                                    "--log-facility=-"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "kube-dns-config",
                                        "mountPath": "/kube-dns-config"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            },
                            {
                                "name": "healthz",
                                "image": "k8s.gcr.io/exechealthz-amd64:1.2",
                                "args": [
                                    "--cmd=for d in $PROBE_DOMAINS; do nslookup $d 127.0.0.1 \u003e/dev/null || exit 1; done",
                                    "--url=/healthz-dnsmasq",
                                    "--cmd=for d in $PROBE_DOMAINS; do nslookup $d 127.0.0.1:10053 \u003e/dev/null || exit 1; done",
                                    "--url=/healthz-kubedns",
                                    "--port=8080",
                                    "--quiet"
                                ],
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "PROBE_DOMAINS",
                                        "value": "bing.com kubernetes.default.svc.cluster.local"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "50Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "50Mi"
                                    }
                                },
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz-dnsmasq",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            },
                            {
                                "name": "sidecar",
                                "image": "k8s.gcr.io/k8s-dns-sidecar-amd64:1.14.10",
                                "args": [
                                    "--v=2",
                                    "--logtostderr",
                                    "--probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV",
                                    "--probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV"
                                ],
                                "ports": [
                                    {
                                        "name": "metrics",
                                        "containerPort": 10054,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "20Mi"
                                    }
                                },
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/metrics",
                                        "port": 10054,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "beta.kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "kube-dns",
                        "serviceAccount": "kube-dns",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ]
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 1
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 2147483647
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "unavailableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2019-03-25T17:59:06Z",
                        "lastTransitionTime": "2019-03-25T17:59:06Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "kubernetes-dashboard",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/kubernetes-dashboard",
                "uid": "af4e43e8-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "534",
                "generation": 1,
                "creationTimestamp": "2019-03-25T17:59:07Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "kubernetes-dashboard",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"extensions/v1beta1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"kubernetes-dashboard\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"kubernetes-dashboard\",\"namespace\":\"kube-system\"},\"spec\":{\"replicas\":1,\"strategy\":{\"rollingUpdate\":{\"maxSurge\":0,\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"kubernetes-dashboard\",\"kubernetes.io/cluster-service\":\"true\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"labelSelector\":null,\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"}]}]}}},\"containers\":[{\"image\":\"k8s.gcr.io/kubernetes-dashboard-amd64:v1.10.1\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/\",\"port\":9090,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":30,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":30},\"name\":\"main\",\"ports\":[{\"containerPort\":9090,\"name\":\"http\",\"protocol\":\"TCP\"}],\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"300Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"50Mi\"}}}],\"nodeSelector\":{\"beta.kubernetes.io/os\":\"linux\"},\"priorityClassName\":\"addon-priority\",\"serviceAccountName\":\"kubernetes-dashboard\"}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kubernetes-dashboard",
                        "kubernetes.io/cluster-service": "true"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kubernetes-dashboard",
                            "kubernetes.io/cluster-service": "true"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "main",
                                "image": "k8s.gcr.io/kubernetes-dashboard-amd64:v1.10.1",
                                "ports": [
                                    {
                                        "name": "http",
                                        "containerPort": 9090,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "100m",
                                        "memory": "300Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "50Mi"
                                    }
                                },
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/",
                                        "port": 9090,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 30,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "beta.kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "kubernetes-dashboard",
                        "serviceAccount": "kubernetes-dashboard",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "priorityClassName": "addon-priority"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 2147483647
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "unavailableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2019-03-25T17:59:07Z",
                        "lastTransitionTime": "2019-03-25T17:59:07Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "metrics-server",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/metrics-server",
                "uid": "aeb9d54d-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "576",
                "generation": 1,
                "creationTimestamp": "2019-03-25T17:59:06Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "metrics-server",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"extensions/v1beta1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"metrics-server\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"metrics-server\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"metrics-server\"}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"metrics-server\"},\"name\":\"metrics-server\"},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"labelSelector\":null,\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"}]}]}}},\"containers\":[{\"command\":[\"/metrics-server\",\"--source=kubernetes.summary_api:''\"],\"image\":\"k8s.gcr.io/metrics-server-amd64:v0.2.1\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"metrics-server\"}],\"nodeSelector\":{\"beta.kubernetes.io/os\":\"linux\"},\"priorityClassName\":\"high-priority\",\"serviceAccountName\":\"metrics-server\"}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "metrics-server"
                    }
                },
                "template": {
                    "metadata": {
                        "name": "metrics-server",
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "metrics-server"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "metrics-server",
                                "image": "k8s.gcr.io/metrics-server-amd64:v0.2.1",
                                "command": [
                                    "/metrics-server",
                                    "--source=kubernetes.summary_api:''"
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "beta.kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "metrics-server",
                        "serviceAccount": "metrics-server",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "priorityClassName": "high-priority"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 1
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 2147483647
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "unavailableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2019-03-25T17:59:06Z",
                        "lastTransitionTime": "2019-03-25T17:59:06Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "tunnelfront",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/deployments/tunnelfront",
                "uid": "af84e6f2-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "536",
                "generation": 1,
                "creationTimestamp": "2019-03-25T17:59:07Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "component": "tunnel",
                    "kubernetes.io/cluster-service": "true",
                    "tier": "node"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"extensions/v1beta1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"component\":\"tunnel\",\"kubernetes.io/cluster-service\":\"true\",\"tier\":\"node\"},\"name\":\"tunnelfront\",\"namespace\":\"kube-system\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"component\":\"tunnel\"}},\"template\":{\"metadata\":{\"labels\":{\"component\":\"tunnel\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"labelSelector\":null,\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"}]}]}}},\"containers\":[{\"env\":[{\"name\":\"OVERRIDE_TUNNEL_SERVER_NAME\",\"value\":\"t_test-9-dns-ff407966.hcp.eastus.azmk8s.io\"},{\"name\":\"TUNNEL_CLUSTERUSER_NAME\",\"value\":\"58889289\"},{\"name\":\"TUNNELGATEWAY_SERVER_NAME\",\"value\":\"test-9-dns-e43b773f.tun.eastus.azmk8s.io\"},{\"name\":\"TUNNELGATEWAY_SSH_PORT\",\"value\":\"22\"},{\"name\":\"TUNNELGATEWAY_TLS_PORT\",\"value\":\"443\"},{\"name\":\"KUBE_CONFIG\",\"value\":\"/etc/kubernetes/kubeconfig/kubeconfig\"}],\"image\":\"docker.io/deis/hcp-tunnel-front:v1.9.2-v4.0.5\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"exec\":{\"command\":[\"/lib/tunnel-front/check-tunnel-connection.sh\"]},\"failureThreshold\":12,\"initialDelaySeconds\":10,\"periodSeconds\":60},\"name\":\"tunnel-front\",\"resources\":{\"requests\":{\"cpu\":\"10m\",\"memory\":\"64Mi\"}},\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/etc/kubernetes/kubeconfig\",\"name\":\"kubeconfig\",\"readOnly\":true},{\"mountPath\":\"/etc/kubernetes/certs\",\"name\":\"certificates\",\"readOnly\":true}]}],\"dnsPolicy\":\"Default\",\"nodeSelector\":{\"beta.kubernetes.io/os\":\"linux\"},\"priorityClassName\":\"high-priority\",\"serviceAccountName\":\"tunnelfront\",\"volumes\":[{\"configMap\":{\"name\":\"tunnelfront-kubecfg\",\"optional\":true},\"name\":\"kubeconfig\"},{\"hostPath\":{\"path\":\"/etc/kubernetes/certs\"},\"name\":\"certificates\"}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "component": "tunnel"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "component": "tunnel"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "kubeconfig",
                                "configMap": {
                                    "name": "tunnelfront-kubecfg",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "certificates",
                                "hostPath": {
                                    "path": "/etc/kubernetes/certs",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "tunnel-front",
                                "image": "docker.io/deis/hcp-tunnel-front:v1.9.2-v4.0.5",
                                "env": [
                                    {
                                        "name": "OVERRIDE_TUNNEL_SERVER_NAME",
                                        "value": "t_test-9-dns-ff407966.hcp.eastus.azmk8s.io"
                                    },
                                    {
                                        "name": "TUNNEL_CLUSTERUSER_NAME",
                                        "value": "58889289"
                                    },
                                    {
                                        "name": "TUNNELGATEWAY_SERVER_NAME",
                                        "value": "test-9-dns-e43b773f.tun.eastus.azmk8s.io"
                                    },
                                    {
                                        "name": "TUNNELGATEWAY_SSH_PORT",
                                        "value": "22"
                                    },
                                    {
                                        "name": "TUNNELGATEWAY_TLS_PORT",
                                        "value": "443"
                                    },
                                    {
                                        "name": "KUBE_CONFIG",
                                        "value": "/etc/kubernetes/kubeconfig/kubeconfig"
                                    }
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "64Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "kubeconfig",
                                        "readOnly": true,
                                        "mountPath": "/etc/kubernetes/kubeconfig"
                                    },
                                    {
                                        "name": "certificates",
                                        "readOnly": true,
                                        "mountPath": "/etc/kubernetes/certs"
                                    }
                                ],
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/lib/tunnel-front/check-tunnel-connection.sh"
                                        ]
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "failureThreshold": 12
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "beta.kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "tunnelfront",
                        "serviceAccount": "tunnelfront",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "priorityClassName": "high-priority"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 1
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 2147483647
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "unavailableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2019-03-25T17:59:07Z",
                        "lastTransitionTime": "2019-03-25T17:59:07Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets",
        "resourceVersion": "257936"
    },
    "items": [
        {
            "metadata": {
                "name": "addon-http-application-routing-default-http-backend-5ccb955659",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets/addon-http-application-routing-default-http-backend-5ccb955659",
                "uid": "adecfd48-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "607",
                "generation": 1,
                "creationTimestamp": "2019-03-25T17:59:05Z",
                "labels": {
                    "app": "addon-http-application-routing-default-http-backend",
                    "pod-template-hash": "1776511215"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "addon-http-application-routing-default-http-backend",
                        "uid": "ade5b1de-4f27-11e9-9e9d-527bc45b107e",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "addon-http-application-routing-default-http-backend",
                        "pod-template-hash": "1776511215"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "addon-http-application-routing-default-http-backend",
                            "pod-template-hash": "1776511215"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "addon-http-application-routing-default-http-backend",
                                "image": "k8s.gcr.io/defaultbackend:1.4",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "10m",
                                        "memory": "20Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "20Mi"
                                    }
                                },
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 60,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "priorityClassName": "addon-priority"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "addon-http-application-routing-external-dns-68d9f96594",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets/addon-http-application-routing-external-dns-68d9f96594",
                "uid": "ade267aa-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "600",
                "generation": 1,
                "creationTimestamp": "2019-03-25T17:59:05Z",
                "labels": {
                    "app": "addon-http-application-routing-external-dns",
                    "pod-template-hash": "2485952150"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "1",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "addon-http-application-routing-external-dns",
                        "uid": "addd64ef-4f27-11e9-9e9d-527bc45b107e",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "addon-http-application-routing-external-dns",
                        "pod-template-hash": "2485952150"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "addon-http-application-routing-external-dns",
                            "pod-template-hash": "2485952150"
                        },
                        "annotations": {
                            "checksum/cloud-provider-config": "70abeccb9e49238e42c5016bc82d712e54011d9ddf1a98708790aacf68092db3"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "azure-config-file",
                                "hostPath": {
                                    "path": "/etc/kubernetes/azure.json",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "addon-http-application-routing-external-dns",
                                "image": "zalan.azureedge.net/teapot/external-dns:v0.4.8",
                                "args": [
                                    "--source=service",
                                    "--source=ingress",
                                    "--provider=azure",
                                    "--azure-resource-group=MC_cloud-shell-storage-westeurope_test-9_eastus",
                                    "--domain-filter=d9809f8c90f5466abc56.eastus.aksapp.io",
                                    "--annotation-filter=kubernetes.io/ingress.class=addon-http-application-routing",
                                    "--interval=3m0s"
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "azure-config-file",
                                        "readOnly": true,
                                        "mountPath": "/etc/kubernetes/azure.json"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "addon-http-application-routing-external-dns",
                        "serviceAccount": "addon-http-application-routing-external-dns",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "priorityClassName": "addon-priority"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "addon-http-application-routing-nginx-ingress-controller-ff94fd5b7",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets/addon-http-application-routing-nginx-ingress-controller-ff94fd5b7",
                "uid": "ae439d4e-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "547",
                "generation": 1,
                "creationTimestamp": "2019-03-25T17:59:05Z",
                "labels": {
                    "app": "addon-http-application-routing-nginx-ingress",
                    "pod-template-hash": "995098163"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "addon-http-application-routing-nginx-ingress-controller",
                        "uid": "ae3e94e8-4f27-11e9-9e9d-527bc45b107e",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "addon-http-application-routing-nginx-ingress",
                        "pod-template-hash": "995098163"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "addon-http-application-routing-nginx-ingress",
                            "pod-template-hash": "995098163"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "addon-http-application-routing-nginx-ingress-controller",
                                "image": "quayio.azureedge.net/kubernetes-ingress-controller/nginx-ingress-controller:0.19.0",
                                "args": [
                                    "/nginx-ingress-controller",
                                    "--ingress-class=addon-http-application-routing",
                                    "--default-backend-service=$(POD_NAMESPACE)/addon-http-application-routing-default-http-backend",
                                    "--configmap=$(POD_NAMESPACE)/addon-http-application-routing-nginx-configuration",
                                    "--tcp-services-configmap=$(POD_NAMESPACE)/addon-http-application-routing-tcp-services",
                                    "--udp-services-configmap=$(POD_NAMESPACE)/addon-http-application-routing-udp-services",
                                    "--annotations-prefix=nginx.ingress.kubernetes.io",
                                    "--publish-service=$(POD_NAMESPACE)/addon-http-application-routing-nginx-ingress"
                                ],
                                "ports": [
                                    {
                                        "name": "http",
                                        "containerPort": 80,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "https",
                                        "containerPort": 443,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "resources": {},
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 10254,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 10254,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsUser": 33
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "addon-http-application-routing-nginx-ingress-serviceaccount",
                        "serviceAccount": "addon-http-application-routing-nginx-ingress-serviceaccount",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "priorityClassName": "addon-priority"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "heapster-5d6f9b846c",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets/heapster-5d6f9b846c",
                "uid": "ad1fe5bb-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "585",
                "generation": 1,
                "creationTimestamp": "2019-03-25T17:59:03Z",
                "labels": {
                    "k8s-app": "heapster",
                    "pod-template-hash": "1829564027"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "heapster",
                        "uid": "ad149e59-4f27-11e9-9e9d-527bc45b107e",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "heapster",
                        "pod-template-hash": "1829564027"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "heapster",
                            "pod-template-hash": "1829564027"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "heapster-config-volume",
                                "configMap": {
                                    "name": "heapster-config",
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "heapster",
                                "image": "k8s.gcr.io/heapster-amd64:v1.5.3",
                                "command": [
                                    "/heapster",
                                    "--source=kubernetes.summary_api:\"\""
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "80m",
                                        "memory": "140Mi"
                                    },
                                    "requests": {
                                        "cpu": "80m",
                                        "memory": "140Mi"
                                    }
                                },
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8082,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 180,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            },
                            {
                                "name": "heapster-nanny",
                                "image": "k8s.gcr.io/addon-resizer:1.8.1",
                                "command": [
                                    "/pod_nanny",
                                    "--config-dir=/etc/config",
                                    "--cpu=80m",
                                    "--extra-cpu=0.5m",
                                    "--memory=140Mi",
                                    "--extra-memory=4Mi",
                                    "--threshold=5",
                                    "--deployment=heapster",
                                    "--container=heapster",
                                    "--poll-period=300000",
                                    "--estimator=exponential"
                                ],
                                "env": [
                                    {
                                        "name": "MY_POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "MY_POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "50m",
                                        "memory": "90Mi"
                                    },
                                    "requests": {
                                        "cpu": "50m",
                                        "memory": "90Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "heapster-config-volume",
                                        "mountPath": "/etc/config"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "beta.kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "heapster",
                        "serviceAccount": "heapster",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "high-priority"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "kube-dns-autoscaler-746998ccf6",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets/kube-dns-autoscaler-746998ccf6",
                "uid": "ae66fbfa-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "565",
                "generation": 1,
                "creationTimestamp": "2019-03-25T17:59:05Z",
                "labels": {
                    "k8s-app": "kube-dns-autoscaler",
                    "pod-template-hash": "3025547792"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "kube-dns-autoscaler",
                        "uid": "ae6349a7-4f27-11e9-9e9d-527bc45b107e",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns-autoscaler",
                        "pod-template-hash": "3025547792"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns-autoscaler",
                            "pod-template-hash": "3025547792"
                        },
                        "annotations": {
                            "scheduler.alpha.kubernetes.io/critical-pod": "",
                            "seccomp.security.alpha.kubernetes.io/pod": "docker/default"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "autoscaler",
                                "image": "k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.1.2-r2",
                                "command": [
                                    "/cluster-proportional-autoscaler",
                                    "--namespace=kube-system",
                                    "--configmap=kube-dns-autoscaler",
                                    "--target=deployment/kube-dns-v20",
                                    "--default-params={\"ladder\":{\"coresToReplicas\":[[1,2],[512,3],[1024,4],[2048,5]],\"nodesToReplicas\":[[1,2],[8,3],[16,4],[32,5]]}}",
                                    "--logtostderr=true",
                                    "--v=2"
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "20m",
                                        "memory": "10Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "kube-dns-autoscaler",
                        "serviceAccount": "kube-dns-autoscaler",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "kube-dns-v20-7c7d7d4c66",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets/kube-dns-v20-7c7d7d4c66",
                "uid": "ae87bb87-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "423",
                "generation": 1,
                "creationTimestamp": "2019-03-25T17:59:06Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "pod-template-hash": "3738380722",
                    "version": "v20"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "kube-dns-v20",
                        "uid": "ae852982-4f27-11e9-9e9d-527bc45b107e",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "3738380722",
                        "version": "v20"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns",
                            "kubernetes.io/cluster-service": "true",
                            "pod-template-hash": "3738380722",
                            "version": "v20"
                        },
                        "annotations": {
                            "prometheus.io/port": "10055",
                            "prometheus.io/scrape": "true"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "kube-dns-config",
                                "configMap": {
                                    "name": "kube-dns",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "kubedns-kubecfg",
                                "configMap": {
                                    "name": "kubedns-kubecfg",
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "kubedns",
                                "image": "k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.13",
                                "args": [
                                    "--kubecfg-file=/config/kubeconfig",
                                    "--config-dir=/kube-dns-config",
                                    "--domain=cluster.local.",
                                    "--dns-port=10053",
                                    "--v=2"
                                ],
                                "ports": [
                                    {
                                        "name": "dns-local",
                                        "containerPort": 10053,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp-local",
                                        "containerPort": 10053,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 10055,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "PROMETHEUS_PORT",
                                        "value": "10055"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "kube-dns-config",
                                        "mountPath": "/kube-dns-config"
                                    },
                                    {
                                        "name": "kubedns-kubecfg",
                                        "readOnly": true,
                                        "mountPath": "/config"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz-kubedns",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/readiness",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            },
                            {
                                "name": "dnsmasq",
                                "image": "k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64:1.14.10",
                                "args": [
                                    "-v=2",
                                    "-logtostderr",
                                    "-configDir=/kube-dns-config",
                                    "-restartDnsmasq=true",
                                    "--",
                                    "-k",
                                    "--cache-size=1000",
                                    "--no-resolv",
                                    "--server=127.0.0.1#10053",
                                    "--server=/in-addr.arpa/127.0.0.1#10053",
                                    "--server=/ip6.arpa/127.0.0.1#10053",
                                    "--log-facility=-"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "kube-dns-config",
                                        "mountPath": "/kube-dns-config"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            },
                            {
                                "name": "healthz",
                                "image": "k8s.gcr.io/exechealthz-amd64:1.2",
                                "args": [
                                    "--cmd=for d in $PROBE_DOMAINS; do nslookup $d 127.0.0.1 \u003e/dev/null || exit 1; done",
                                    "--url=/healthz-dnsmasq",
                                    "--cmd=for d in $PROBE_DOMAINS; do nslookup $d 127.0.0.1:10053 \u003e/dev/null || exit 1; done",
                                    "--url=/healthz-kubedns",
                                    "--port=8080",
                                    "--quiet"
                                ],
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "PROBE_DOMAINS",
                                        "value": "bing.com kubernetes.default.svc.cluster.local"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "50Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "50Mi"
                                    }
                                },
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz-dnsmasq",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            },
                            {
                                "name": "sidecar",
                                "image": "k8s.gcr.io/k8s-dns-sidecar-amd64:1.14.10",
                                "args": [
                                    "--v=2",
                                    "--logtostderr",
                                    "--probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV",
                                    "--probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV"
                                ],
                                "ports": [
                                    {
                                        "name": "metrics",
                                        "containerPort": 10054,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "20Mi"
                                    }
                                },
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/metrics",
                                        "port": 10054,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "beta.kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "kube-dns",
                        "serviceAccount": "kube-dns",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            }
                        ]
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "kubernetes-dashboard-67bdc65878",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets/kubernetes-dashboard-67bdc65878",
                "uid": "af563fde-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "533",
                "generation": 1,
                "creationTimestamp": "2019-03-25T17:59:07Z",
                "labels": {
                    "k8s-app": "kubernetes-dashboard",
                    "kubernetes.io/cluster-service": "true",
                    "pod-template-hash": "2368721434"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "1",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "kubernetes-dashboard",
                        "uid": "af4e43e8-4f27-11e9-9e9d-527bc45b107e",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kubernetes-dashboard",
                        "kubernetes.io/cluster-service": "true",
                        "pod-template-hash": "2368721434"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kubernetes-dashboard",
                            "kubernetes.io/cluster-service": "true",
                            "pod-template-hash": "2368721434"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "main",
                                "image": "k8s.gcr.io/kubernetes-dashboard-amd64:v1.10.1",
                                "ports": [
                                    {
                                        "name": "http",
                                        "containerPort": 9090,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "100m",
                                        "memory": "300Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "50Mi"
                                    }
                                },
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/",
                                        "port": 9090,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 30,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "beta.kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "kubernetes-dashboard",
                        "serviceAccount": "kubernetes-dashboard",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "priorityClassName": "addon-priority"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "metrics-server-5cbc77f79f",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets/metrics-server-5cbc77f79f",
                "uid": "aebdd95b-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "575",
                "generation": 1,
                "creationTimestamp": "2019-03-25T17:59:06Z",
                "labels": {
                    "k8s-app": "metrics-server",
                    "pod-template-hash": "1767339359"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "metrics-server",
                        "uid": "aeb9d54d-4f27-11e9-9e9d-527bc45b107e",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "metrics-server",
                        "pod-template-hash": "1767339359"
                    }
                },
                "template": {
                    "metadata": {
                        "name": "metrics-server",
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "metrics-server",
                            "pod-template-hash": "1767339359"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "metrics-server",
                                "image": "k8s.gcr.io/metrics-server-amd64:v0.2.1",
                                "command": [
                                    "/metrics-server",
                                    "--source=kubernetes.summary_api:''"
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "beta.kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "metrics-server",
                        "serviceAccount": "metrics-server",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "priorityClassName": "high-priority"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "tunnelfront-7756d984f9",
                "namespace": "kube-system",
                "selfLink": "/apis/apps/v1/namespaces/kube-system/replicasets/tunnelfront-7756d984f9",
                "uid": "af87b4b3-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "535",
                "generation": 1,
                "creationTimestamp": "2019-03-25T17:59:07Z",
                "labels": {
                    "component": "tunnel",
                    "pod-template-hash": "3312854095"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "tunnelfront",
                        "uid": "af84e6f2-4f27-11e9-9e9d-527bc45b107e",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "component": "tunnel",
                        "pod-template-hash": "3312854095"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "component": "tunnel",
                            "pod-template-hash": "3312854095"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "kubeconfig",
                                "configMap": {
                                    "name": "tunnelfront-kubecfg",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "certificates",
                                "hostPath": {
                                    "path": "/etc/kubernetes/certs",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "tunnel-front",
                                "image": "docker.io/deis/hcp-tunnel-front:v1.9.2-v4.0.5",
                                "env": [
                                    {
                                        "name": "OVERRIDE_TUNNEL_SERVER_NAME",
                                        "value": "t_test-9-dns-ff407966.hcp.eastus.azmk8s.io"
                                    },
                                    {
                                        "name": "TUNNEL_CLUSTERUSER_NAME",
                                        "value": "58889289"
                                    },
                                    {
                                        "name": "TUNNELGATEWAY_SERVER_NAME",
                                        "value": "test-9-dns-e43b773f.tun.eastus.azmk8s.io"
                                    },
                                    {
                                        "name": "TUNNELGATEWAY_SSH_PORT",
                                        "value": "22"
                                    },
                                    {
                                        "name": "TUNNELGATEWAY_TLS_PORT",
                                        "value": "443"
                                    },
                                    {
                                        "name": "KUBE_CONFIG",
                                        "value": "/etc/kubernetes/kubeconfig/kubeconfig"
                                    }
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "64Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "kubeconfig",
                                        "readOnly": true,
                                        "mountPath": "/etc/kubernetes/kubeconfig"
                                    },
                                    {
                                        "name": "certificates",
                                        "readOnly": true,
                                        "mountPath": "/etc/kubernetes/certs"
                                    }
                                ],
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/lib/tunnel-front/check-tunnel-connection.sh"
                                        ]
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "failureThreshold": 12
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "beta.kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "tunnelfront",
                        "serviceAccount": "tunnelfront",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "priorityClassName": "high-priority"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "observedGeneration": 1
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/kube-system/pods",
        "resourceVersion": "257936"
    },
    "items": [
        {
            "metadata": {
                "name": "addon-http-application-routing-default-http-backend-5ccb952rqns",
                "generateName": "addon-http-application-routing-default-http-backend-5ccb955659-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/addon-http-application-routing-default-http-backend-5ccb952rqns",
                "uid": "b45fd0a3-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "633",
                "creationTimestamp": "2019-03-25T17:59:16Z",
                "labels": {
                    "app": "addon-http-application-routing-default-http-backend",
                    "pod-template-hash": "1776511215"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "addon-http-application-routing-default-http-backend-5ccb955659",
                        "uid": "adecfd48-4f27-11e9-9e9d-527bc45b107e",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "default-token-kjnvc",
                        "secret": {
                            "secretName": "default-token-kjnvc",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "addon-http-application-routing-default-http-backend",
                        "image": "k8s.gcr.io/defaultbackend:1.4",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "test-9-dns-ff407966.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://test-9-dns-ff407966.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://test-9-dns-ff407966.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "test-9-dns-ff407966.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "10m",
                                "memory": "20Mi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "20Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "default-token-kjnvc",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 60,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/cluster",
                                            "operator": "Exists"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "addon-priority",
                "priority": 999999
            },
            "status": {
                "phase": "Pending",
                "conditions": [
                    {
                        "type": "PodScheduled",
                        "status": "False",
                        "lastProbeTime": "2019-03-25T17:59:20Z",
                        "lastTransitionTime": "2019-03-25T17:59:16Z",
                        "reason": "Unschedulable",
                        "message": "no nodes available to schedule pods"
                    }
                ],
                "qosClass": "Guaranteed"
            }
        },
        {
            "metadata": {
                "name": "addon-http-application-routing-external-dns-68d9f96594-tvmt6",
                "generateName": "addon-http-application-routing-external-dns-68d9f96594-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/addon-http-application-routing-external-dns-68d9f96594-tvmt6",
                "uid": "b44d51ec-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "631",
                "creationTimestamp": "2019-03-25T17:59:15Z",
                "labels": {
                    "app": "addon-http-application-routing-external-dns",
                    "pod-template-hash": "2485952150"
                },
                "annotations": {
                    "checksum/cloud-provider-config": "70abeccb9e49238e42c5016bc82d712e54011d9ddf1a98708790aacf68092db3"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "addon-http-application-routing-external-dns-68d9f96594",
                        "uid": "ade267aa-4f27-11e9-9e9d-527bc45b107e",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "azure-config-file",
                        "hostPath": {
                            "path": "/etc/kubernetes/azure.json",
                            "type": ""
                        }
                    },
                    {
                        "name": "addon-http-application-routing-external-dns-token-5tpbl",
                        "secret": {
                            "secretName": "addon-http-application-routing-external-dns-token-5tpbl",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "addon-http-application-routing-external-dns",
                        "image": "zalan.azureedge.net/teapot/external-dns:v0.4.8",
                        "args": [
                            "--source=service",
                            "--source=ingress",
                            "--provider=azure",
                            "--azure-resource-group=MC_cloud-shell-storage-westeurope_test-9_eastus",
                            "--domain-filter=d9809f8c90f5466abc56.eastus.aksapp.io",
                            "--annotation-filter=kubernetes.io/ingress.class=addon-http-application-routing",
                            "--interval=3m0s"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "test-9-dns-ff407966.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://test-9-dns-ff407966.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://test-9-dns-ff407966.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "test-9-dns-ff407966.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "azure-config-file",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/azure.json"
                            },
                            {
                                "name": "addon-http-application-routing-external-dns-token-5tpbl",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "addon-http-application-routing-external-dns",
                "serviceAccount": "addon-http-application-routing-external-dns",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "addon-priority",
                "priority": 999999
            },
            "status": {
                "phase": "Pending",
                "conditions": [
                    {
                        "type": "PodScheduled",
                        "status": "False",
                        "lastProbeTime": "2019-03-25T17:59:20Z",
                        "lastTransitionTime": "2019-03-25T17:59:15Z",
                        "reason": "Unschedulable",
                        "message": "no nodes available to schedule pods"
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "addon-http-application-routing-nginx-ingress-controller-ffxjzvf",
                "generateName": "addon-http-application-routing-nginx-ingress-controller-ff94fd5b7-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/addon-http-application-routing-nginx-ingress-controller-ffxjzvf",
                "uid": "b1e731c5-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "627",
                "creationTimestamp": "2019-03-25T17:59:11Z",
                "labels": {
                    "app": "addon-http-application-routing-nginx-ingress",
                    "pod-template-hash": "995098163"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "addon-http-application-routing-nginx-ingress-controller-ff94fd5b7",
                        "uid": "ae439d4e-4f27-11e9-9e9d-527bc45b107e",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "addon-http-application-routing-nginx-ingress-serviceaccounk7vz8",
                        "secret": {
                            "secretName": "addon-http-application-routing-nginx-ingress-serviceaccounk7vz8",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "addon-http-application-routing-nginx-ingress-controller",
                        "image": "quayio.azureedge.net/kubernetes-ingress-controller/nginx-ingress-controller:0.19.0",
                        "args": [
                            "/nginx-ingress-controller",
                            "--ingress-class=addon-http-application-routing",
                            "--default-backend-service=$(POD_NAMESPACE)/addon-http-application-routing-default-http-backend",
                            "--configmap=$(POD_NAMESPACE)/addon-http-application-routing-nginx-configuration",
                            "--tcp-services-configmap=$(POD_NAMESPACE)/addon-http-application-routing-tcp-services",
                            "--udp-services-configmap=$(POD_NAMESPACE)/addon-http-application-routing-udp-services",
                            "--annotations-prefix=nginx.ingress.kubernetes.io",
                            "--publish-service=$(POD_NAMESPACE)/addon-http-application-routing-nginx-ingress"
                        ],
                        "ports": [
                            {
                                "name": "http",
                                "containerPort": 80,
                                "protocol": "TCP"
                            },
                            {
                                "name": "https",
                                "containerPort": 443,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "test-9-dns-ff407966.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://test-9-dns-ff407966.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://test-9-dns-ff407966.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "test-9-dns-ff407966.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "addon-http-application-routing-nginx-ingress-serviceaccounk7vz8",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10254,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10254,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "runAsUser": 33
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "addon-http-application-routing-nginx-ingress-serviceaccount",
                "serviceAccount": "addon-http-application-routing-nginx-ingress-serviceaccount",
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/cluster",
                                            "operator": "Exists"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "addon-priority",
                "priority": 999999
            },
            "status": {
                "phase": "Pending",
                "conditions": [
                    {
                        "type": "PodScheduled",
                        "status": "False",
                        "lastProbeTime": "2019-03-25T17:59:20Z",
                        "lastTransitionTime": "2019-03-25T17:59:11Z",
                        "reason": "Unschedulable",
                        "message": "no nodes available to schedule pods"
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "heapster-5d6f9b846c-plhqr",
                "generateName": "heapster-5d6f9b846c-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/heapster-5d6f9b846c-plhqr",
                "uid": "b3a9737e-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "622",
                "creationTimestamp": "2019-03-25T17:59:14Z",
                "labels": {
                    "k8s-app": "heapster",
                    "pod-template-hash": "1829564027"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "heapster-5d6f9b846c",
                        "uid": "ad1fe5bb-4f27-11e9-9e9d-527bc45b107e",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "heapster-config-volume",
                        "configMap": {
                            "name": "heapster-config",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "heapster-token-nt8tz",
                        "secret": {
                            "secretName": "heapster-token-nt8tz",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "heapster",
                        "image": "k8s.gcr.io/heapster-amd64:v1.5.3",
                        "command": [
                            "/heapster",
                            "--source=kubernetes.summary_api:\"\""
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "test-9-dns-ff407966.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://test-9-dns-ff407966.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://test-9-dns-ff407966.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "test-9-dns-ff407966.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "80m",
                                "memory": "140Mi"
                            },
                            "requests": {
                                "cpu": "80m",
                                "memory": "140Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "heapster-token-nt8tz",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 8082,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 180,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    },
                    {
                        "name": "heapster-nanny",
                        "image": "k8s.gcr.io/addon-resizer:1.8.1",
                        "command": [
                            "/pod_nanny",
                            "--config-dir=/etc/config",
                            "--cpu=80m",
                            "--extra-cpu=0.5m",
                            "--memory=140Mi",
                            "--extra-memory=4Mi",
                            "--threshold=5",
                            "--deployment=heapster",
                            "--container=heapster",
                            "--poll-period=300000",
                            "--estimator=exponential"
                        ],
                        "env": [
                            {
                                "name": "MY_POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "MY_POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "test-9-dns-ff407966.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://test-9-dns-ff407966.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://test-9-dns-ff407966.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "test-9-dns-ff407966.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "50m",
                                "memory": "90Mi"
                            },
                            "requests": {
                                "cpu": "50m",
                                "memory": "90Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "heapster-config-volume",
                                "mountPath": "/etc/config"
                            },
                            {
                                "name": "heapster-token-nt8tz",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "beta.kubernetes.io/os": "linux"
                },
                "serviceAccountName": "heapster",
                "serviceAccount": "heapster",
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/cluster",
                                            "operator": "Exists"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "high-priority",
                "priority": 1000000
            },
            "status": {
                "phase": "Pending",
                "conditions": [
                    {
                        "type": "PodScheduled",
                        "status": "False",
                        "lastProbeTime": "2019-03-25T17:59:20Z",
                        "lastTransitionTime": "2019-03-25T17:59:14Z",
                        "reason": "Unschedulable",
                        "message": "no nodes available to schedule pods"
                    }
                ],
                "qosClass": "Guaranteed"
            }
        },
        {
            "metadata": {
                "name": "kube-dns-autoscaler-746998ccf6-kccqm",
                "generateName": "kube-dns-autoscaler-746998ccf6-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/kube-dns-autoscaler-746998ccf6-kccqm",
                "uid": "b24e11b1-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "616",
                "creationTimestamp": "2019-03-25T17:59:12Z",
                "labels": {
                    "k8s-app": "kube-dns-autoscaler",
                    "pod-template-hash": "3025547792"
                },
                "annotations": {
                    "scheduler.alpha.kubernetes.io/critical-pod": "",
                    "seccomp.security.alpha.kubernetes.io/pod": "docker/default"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "kube-dns-autoscaler-746998ccf6",
                        "uid": "ae66fbfa-4f27-11e9-9e9d-527bc45b107e",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-dns-autoscaler-token-hncvj",
                        "secret": {
                            "secretName": "kube-dns-autoscaler-token-hncvj",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "autoscaler",
                        "image": "k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.1.2-r2",
                        "command": [
                            "/cluster-proportional-autoscaler",
                            "--namespace=kube-system",
                            "--configmap=kube-dns-autoscaler",
                            "--target=deployment/kube-dns-v20",
                            "--default-params={\"ladder\":{\"coresToReplicas\":[[1,2],[512,3],[1024,4],[2048,5]],\"nodesToReplicas\":[[1,2],[8,3],[16,4],[32,5]]}}",
                            "--logtostderr=true",
                            "--v=2"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "test-9-dns-ff407966.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://test-9-dns-ff407966.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://test-9-dns-ff407966.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "test-9-dns-ff407966.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "20m",
                                "memory": "10Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "kube-dns-autoscaler-token-hncvj",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "serviceAccountName": "kube-dns-autoscaler",
                "serviceAccount": "kube-dns-autoscaler",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000
            },
            "status": {
                "phase": "Pending",
                "conditions": [
                    {
                        "type": "PodScheduled",
                        "status": "False",
                        "lastProbeTime": "2019-03-25T17:59:20Z",
                        "lastTransitionTime": "2019-03-25T17:59:12Z",
                        "reason": "Unschedulable",
                        "message": "no nodes available to schedule pods"
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-dns-v20-7c7d7d4c66-cd55k",
                "generateName": "kube-dns-v20-7c7d7d4c66-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/kube-dns-v20-7c7d7d4c66-cd55k",
                "uid": "aea6499d-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "636",
                "creationTimestamp": "2019-03-25T17:59:06Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "pod-template-hash": "3738380722",
                    "version": "v20"
                },
                "annotations": {
                    "prometheus.io/port": "10055",
                    "prometheus.io/scrape": "true"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "kube-dns-v20-7c7d7d4c66",
                        "uid": "ae87bb87-4f27-11e9-9e9d-527bc45b107e",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-dns-config",
                        "configMap": {
                            "name": "kube-dns",
                            "defaultMode": 420,
                            "optional": true
                        }
                    },
                    {
                        "name": "kubedns-kubecfg",
                        "configMap": {
                            "name": "kubedns-kubecfg",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-dns-token-dvjwm",
                        "secret": {
                            "secretName": "kube-dns-token-dvjwm",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kubedns",
                        "image": "k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.13",
                        "args": [
                            "--kubecfg-file=/config/kubeconfig",
                            "--config-dir=/kube-dns-config",
                            "--domain=cluster.local.",
                            "--dns-port=10053",
                            "--v=2"
                        ],
                        "ports": [
                            {
                                "name": "dns-local",
                                "containerPort": 10053,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp-local",
                                "containerPort": 10053,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 10055,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "PROMETHEUS_PORT",
                                "value": "10055"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "test-9-dns-ff407966.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://test-9-dns-ff407966.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://test-9-dns-ff407966.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "test-9-dns-ff407966.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "kube-dns-config",
                                "mountPath": "/kube-dns-config"
                            },
                            {
                                "name": "kubedns-kubecfg",
                                "readOnly": true,
                                "mountPath": "/config"
                            },
                            {
                                "name": "kube-dns-token-dvjwm",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz-kubedns",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/readiness",
                                "port": 8081,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    },
                    {
                        "name": "dnsmasq",
                        "image": "k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64:1.14.10",
                        "args": [
                            "-v=2",
                            "-logtostderr",
                            "-configDir=/kube-dns-config",
                            "-restartDnsmasq=true",
                            "--",
                            "-k",
                            "--cache-size=1000",
                            "--no-resolv",
                            "--server=127.0.0.1#10053",
                            "--server=/in-addr.arpa/127.0.0.1#10053",
                            "--server=/ip6.arpa/127.0.0.1#10053",
                            "--log-facility=-"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "test-9-dns-ff407966.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://test-9-dns-ff407966.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://test-9-dns-ff407966.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "test-9-dns-ff407966.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-dns-config",
                                "mountPath": "/kube-dns-config"
                            },
                            {
                                "name": "kube-dns-token-dvjwm",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    },
                    {
                        "name": "healthz",
                        "image": "k8s.gcr.io/exechealthz-amd64:1.2",
                        "args": [
                            "--cmd=for d in $PROBE_DOMAINS; do nslookup $d 127.0.0.1 \u003e/dev/null || exit 1; done",
                            "--url=/healthz-dnsmasq",
                            "--cmd=for d in $PROBE_DOMAINS; do nslookup $d 127.0.0.1:10053 \u003e/dev/null || exit 1; done",
                            "--url=/healthz-kubedns",
                            "--port=8080",
                            "--quiet"
                        ],
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "PROBE_DOMAINS",
                                "value": "bing.com kubernetes.default.svc.cluster.local"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "test-9-dns-ff407966.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://test-9-dns-ff407966.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://test-9-dns-ff407966.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "test-9-dns-ff407966.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "50Mi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "50Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "kube-dns-token-dvjwm",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz-dnsmasq",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    },
                    {
                        "name": "sidecar",
                        "image": "k8s.gcr.io/k8s-dns-sidecar-amd64:1.14.10",
                        "args": [
                            "--v=2",
                            "--logtostderr",
                            "--probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV",
                            "--probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV"
                        ],
                        "ports": [
                            {
                                "name": "metrics",
                                "containerPort": 10054,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "test-9-dns-ff407966.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://test-9-dns-ff407966.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://test-9-dns-ff407966.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "test-9-dns-ff407966.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "10m",
                                "memory": "20Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "kube-dns-token-dvjwm",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/metrics",
                                "port": 10054,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "nodeSelector": {
                    "beta.kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kube-dns",
                "serviceAccount": "kube-dns",
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/cluster",
                                            "operator": "Exists"
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0
            },
            "status": {
                "phase": "Pending",
                "conditions": [
                    {
                        "type": "PodScheduled",
                        "status": "False",
                        "lastProbeTime": "2019-03-25T17:59:20Z",
                        "lastTransitionTime": "2019-03-25T17:59:06Z",
                        "reason": "Unschedulable",
                        "message": "no nodes available to schedule pods"
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kubernetes-dashboard-67bdc65878-tlmjm",
                "generateName": "kubernetes-dashboard-67bdc65878-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/kubernetes-dashboard-67bdc65878-tlmjm",
                "uid": "b170a2e9-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "629",
                "creationTimestamp": "2019-03-25T17:59:11Z",
                "labels": {
                    "k8s-app": "kubernetes-dashboard",
                    "kubernetes.io/cluster-service": "true",
                    "pod-template-hash": "2368721434"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "kubernetes-dashboard-67bdc65878",
                        "uid": "af563fde-4f27-11e9-9e9d-527bc45b107e",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kubernetes-dashboard-token-4pflp",
                        "secret": {
                            "secretName": "kubernetes-dashboard-token-4pflp",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "main",
                        "image": "k8s.gcr.io/kubernetes-dashboard-amd64:v1.10.1",
                        "ports": [
                            {
                                "name": "http",
                                "containerPort": 9090,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "test-9-dns-ff407966.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://test-9-dns-ff407966.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://test-9-dns-ff407966.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "test-9-dns-ff407966.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "300Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "kubernetes-dashboard-token-4pflp",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/",
                                "port": 9090,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "timeoutSeconds": 30,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "beta.kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kubernetes-dashboard",
                "serviceAccount": "kubernetes-dashboard",
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/cluster",
                                            "operator": "Exists"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "addon-priority",
                "priority": 999999
            },
            "status": {
                "phase": "Pending",
                "conditions": [
                    {
                        "type": "PodScheduled",
                        "status": "False",
                        "lastProbeTime": "2019-03-25T17:59:20Z",
                        "lastTransitionTime": "2019-03-25T17:59:11Z",
                        "reason": "Unschedulable",
                        "message": "no nodes available to schedule pods"
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "metrics-server-5cbc77f79f-tzkm9",
                "generateName": "metrics-server-5cbc77f79f-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/metrics-server-5cbc77f79f-tzkm9",
                "uid": "b27b87ea-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "620",
                "creationTimestamp": "2019-03-25T17:59:12Z",
                "labels": {
                    "k8s-app": "metrics-server",
                    "pod-template-hash": "1767339359"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "metrics-server-5cbc77f79f",
                        "uid": "aebdd95b-4f27-11e9-9e9d-527bc45b107e",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "metrics-server-token-8pq8l",
                        "secret": {
                            "secretName": "metrics-server-token-8pq8l",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "metrics-server",
                        "image": "k8s.gcr.io/metrics-server-amd64:v0.2.1",
                        "command": [
                            "/metrics-server",
                            "--source=kubernetes.summary_api:''"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "test-9-dns-ff407966.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://test-9-dns-ff407966.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://test-9-dns-ff407966.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "test-9-dns-ff407966.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "metrics-server-token-8pq8l",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "beta.kubernetes.io/os": "linux"
                },
                "serviceAccountName": "metrics-server",
                "serviceAccount": "metrics-server",
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/cluster",
                                            "operator": "Exists"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "high-priority",
                "priority": 1000000
            },
            "status": {
                "phase": "Pending",
                "conditions": [
                    {
                        "type": "PodScheduled",
                        "status": "False",
                        "lastProbeTime": "2019-03-25T17:59:20Z",
                        "lastTransitionTime": "2019-03-25T17:59:12Z",
                        "reason": "Unschedulable",
                        "message": "no nodes available to schedule pods"
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "tunnelfront-7756d984f9-2cn96",
                "generateName": "tunnelfront-7756d984f9-",
                "namespace": "kube-system",
                "selfLink": "/api/v1/namespaces/kube-system/pods/tunnelfront-7756d984f9-2cn96",
                "uid": "b19ab297-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "618",
                "creationTimestamp": "2019-03-25T17:59:11Z",
                "labels": {
                    "component": "tunnel",
                    "pod-template-hash": "3312854095"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "tunnelfront-7756d984f9",
                        "uid": "af87b4b3-4f27-11e9-9e9d-527bc45b107e",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kubeconfig",
                        "configMap": {
                            "name": "tunnelfront-kubecfg",
                            "defaultMode": 420,
                            "optional": true
                        }
                    },
                    {
                        "name": "certificates",
                        "hostPath": {
                            "path": "/etc/kubernetes/certs",
                            "type": ""
                        }
                    },
                    {
                        "name": "tunnelfront-token-j6xfr",
                        "secret": {
                            "secretName": "tunnelfront-token-j6xfr",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "tunnel-front",
                        "image": "docker.io/deis/hcp-tunnel-front:v1.9.2-v4.0.5",
                        "env": [
                            {
                                "name": "OVERRIDE_TUNNEL_SERVER_NAME",
                                "value": "t_test-9-dns-ff407966.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "TUNNEL_CLUSTERUSER_NAME",
                                "value": "58889289"
                            },
                            {
                                "name": "TUNNELGATEWAY_SERVER_NAME",
                                "value": "test-9-dns-e43b773f.tun.eastus.azmk8s.io"
                            },
                            {
                                "name": "TUNNELGATEWAY_SSH_PORT",
                                "value": "22"
                            },
                            {
                                "name": "TUNNELGATEWAY_TLS_PORT",
                                "value": "443"
                            },
                            {
                                "name": "KUBE_CONFIG",
                                "value": "/etc/kubernetes/kubeconfig/kubeconfig"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "test-9-dns-ff407966.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://test-9-dns-ff407966.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://test-9-dns-ff407966.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "test-9-dns-ff407966.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "10m",
                                "memory": "64Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "kubeconfig",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/kubeconfig"
                            },
                            {
                                "name": "certificates",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/certs"
                            },
                            {
                                "name": "tunnelfront-token-j6xfr",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/lib/tunnel-front/check-tunnel-connection.sh"
                                ]
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 1,
                            "periodSeconds": 60,
                            "successThreshold": 1,
                            "failureThreshold": 12
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "nodeSelector": {
                    "beta.kubernetes.io/os": "linux"
                },
                "serviceAccountName": "tunnelfront",
                "serviceAccount": "tunnelfront",
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/cluster",
                                            "operator": "Exists"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "high-priority",
                "priority": 1000000
            },
            "status": {
                "phase": "Pending",
                "conditions": [
                    {
                        "type": "PodScheduled",
                        "status": "False",
                        "lastProbeTime": "2019-03-25T17:59:20Z",
                        "lastTransitionTime": "2019-03-25T17:59:11Z",
                        "reason": "Unschedulable",
                        "message": "no nodes available to schedule pods"
                    }
                ],
                "qosClass": "Burstable"
            }
        }
    ]
}
==== START logs for container addon-http-application-routing-default-http-backend of pod kube-system/addon-http-application-routing-default-http-backend-5ccb952rqns ====
==== END logs for container addon-http-application-routing-default-http-backend of pod kube-system/addon-http-application-routing-default-http-backend-5ccb952rqns ====
==== START logs for container addon-http-application-routing-external-dns of pod kube-system/addon-http-application-routing-external-dns-68d9f96594-tvmt6 ====
==== END logs for container addon-http-application-routing-external-dns of pod kube-system/addon-http-application-routing-external-dns-68d9f96594-tvmt6 ====
==== START logs for container addon-http-application-routing-nginx-ingress-controller of pod kube-system/addon-http-application-routing-nginx-ingress-controller-ffxjzvf ====
==== END logs for container addon-http-application-routing-nginx-ingress-controller of pod kube-system/addon-http-application-routing-nginx-ingress-controller-ffxjzvf ====
==== START logs for container heapster of pod kube-system/heapster-5d6f9b846c-plhqr ====
==== END logs for container heapster of pod kube-system/heapster-5d6f9b846c-plhqr ====
==== START logs for container heapster-nanny of pod kube-system/heapster-5d6f9b846c-plhqr ====
==== END logs for container heapster-nanny of pod kube-system/heapster-5d6f9b846c-plhqr ====
==== START logs for container autoscaler of pod kube-system/kube-dns-autoscaler-746998ccf6-kccqm ====
==== END logs for container autoscaler of pod kube-system/kube-dns-autoscaler-746998ccf6-kccqm ====
==== START logs for container kubedns of pod kube-system/kube-dns-v20-7c7d7d4c66-cd55k ====
==== END logs for container kubedns of pod kube-system/kube-dns-v20-7c7d7d4c66-cd55k ====
==== START logs for container dnsmasq of pod kube-system/kube-dns-v20-7c7d7d4c66-cd55k ====
==== END logs for container dnsmasq of pod kube-system/kube-dns-v20-7c7d7d4c66-cd55k ====
==== START logs for container healthz of pod kube-system/kube-dns-v20-7c7d7d4c66-cd55k ====
==== END logs for container healthz of pod kube-system/kube-dns-v20-7c7d7d4c66-cd55k ====
==== START logs for container sidecar of pod kube-system/kube-dns-v20-7c7d7d4c66-cd55k ====
==== END logs for container sidecar of pod kube-system/kube-dns-v20-7c7d7d4c66-cd55k ====
==== START logs for container main of pod kube-system/kubernetes-dashboard-67bdc65878-tlmjm ====
==== END logs for container main of pod kube-system/kubernetes-dashboard-67bdc65878-tlmjm ====
==== START logs for container metrics-server of pod kube-system/metrics-server-5cbc77f79f-tzkm9 ====
==== END logs for container metrics-server of pod kube-system/metrics-server-5cbc77f79f-tzkm9 ====
==== START logs for container tunnel-front of pod kube-system/tunnelfront-7756d984f9-2cn96 ====
==== END logs for container tunnel-front of pod kube-system/tunnelfront-7756d984f9-2cn96 ====
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/default/events",
        "resourceVersion": "257939"
    },
    "items": []
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/default/replicationcontrollers",
        "resourceVersion": "257939"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/default/services",
        "resourceVersion": "257939"
    },
    "items": [
        {
            "metadata": {
                "name": "kubernetes",
                "namespace": "default",
                "selfLink": "/api/v1/namespaces/default/services/kubernetes",
                "uid": "95553bdf-4f27-11e9-9e9d-527bc45b107e",
                "resourceVersion": "31",
                "creationTimestamp": "2019-03-25T17:58:23Z",
                "labels": {
                    "component": "apiserver",
                    "provider": "kubernetes"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": 443
                    }
                ],
                "clusterIP": "10.0.0.1",
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/default/daemonsets",
        "resourceVersion": "257939"
    },
    "items": []
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/default/deployments",
        "resourceVersion": "257939"
    },
    "items": []
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "selfLink": "/apis/apps/v1/namespaces/default/replicasets",
        "resourceVersion": "257939"
    },
    "items": []
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "selfLink": "/api/v1/namespaces/default/pods",
        "resourceVersion": "257939"
    },
    "items": []
}
Cluster info dumped to standard output
