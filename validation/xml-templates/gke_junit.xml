<?xml version="1.0" encoding="UTF-8"?>
  <testsuite tests="60" failures="3" time="5448.784495054">
      <testcase name="[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Services should be able to change the type from ExternalName to NodePort" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-auth] [Feature:NodeAuthorizer] Getting an existing configmap should exit with the Forbidden error" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Services should release NodePorts on delete" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cluster-lifecycle] gpu Upgrade [Feature:GPUUpgrade] master upgrade should NOT disrupt gpu pod [Feature:GPUMasterUpgrade]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] DaemonRestart [Disruptive] Controller Manager should not create/delete replicas across restart" classname="Kubernetes e2e suite" time="28.556031269">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [Feature:Example] [k8s.io] Hazelcast should create and scale hazelcast" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] DNS should provide DNS for pods for Hostname and Subdomain" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] SchedulerPreemption [Serial] validates pod anti-affinity works in preemption" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfs] should support non-existent path" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Networking IPerf IPv6 [Experimental] [Feature:Networking-IPv6] [Slow] [Feature:Networking-Performance] should transfer ~ 1GB onto the service endpoint 1 servers (maximum of 1 clients)" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] AdmissionWebhook Should not be able to prevent deleting validating-webhook-configurations or mutating-webhook-configurations" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] GenericPersistentVolume[Disruptive] When kubelet restarts Should test that a file written to the mount before kubelet restart is readable after restart." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] PrivilegedPod [NodeConformance] should enable privileged commands" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Loadbalancing: L7 GCE [Slow] [Feature:kubemci] should conform to Ingress spec" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl Port forwarding [k8s.io] With a server listening on 0.0.0.0 [k8s.io] that expects a client request should support a client that connects, sends DATA, and disconnects" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Pod Disks detach in a disrupted environment [Slow] [Disruptive] when node&#39;s API object is deleted" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gluster] should fail if subpath with backstepping is outside the volume [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Kubectl taint [Serial] should remove all the taints with the same key off a node" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPartitioned] should support existing directories when readOnly specified in the volumeSource" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-auth] [Feature:NodeAuthorizer] A node shouldn&#39;t be able to delete another node" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow]" classname="Kubernetes e2e suite" time="348.547758245"></testcase>
      <testcase name="[sig-apps] ReplicationController should serve a basic image on each replica with a private image" classname="Kubernetes e2e suite" time="6.483551858">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: gce-localssd-scsi-fs] [Serial] Set fsGroup for local volume should set same fsGroup for two pods simultaneously" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPathSymlink] should support restarting containers using directory as subpath [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  Local volume that cannot be mounted [Slow] should fail due to wrong node" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-auth] PodSecurityPolicy should enforce the restricted extensions.PodSecurityPolicy" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cluster-lifecycle] gpu Upgrade [Feature:GPUUpgrade] cluster downgrade should be able to run gpu pod after downgrade [Feature:GPUClusterDowngrade]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] Network Partition [Disruptive] [Slow] [k8s.io] [ReplicationController] should recreate pods scheduled on the unreachable node AND allow scheduling of pods on a node after it rejoins the cluster" classname="Kubernetes e2e suite" time="6.474581418">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes:vsphere should test that deleting the PV before the pod does not cause pod deletion to fail on vspehre volume detach" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Loadbalancing: L7 Scalability GCE [Slow] [Serial] [Feature:IngressScale] Creating and updating ingresses should happen promptly with small/medium/large amount of ingresses" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] DNS should provide DNS for ExternalName services" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Garbage collector should support orphan deletion of custom resources" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl Port forwarding [k8s.io] With a server listening on localhost [k8s.io] that expects a client request should support a client that connects, sends DATA, and disconnects" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-instrumentation] Kibana Logging Instances Is Alive [Feature:Elasticsearch] should check that the Kibana logging instance is alive" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] SchedulerPredicates [Serial] validates that taints-tolerations is respected if not matching" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cluster-lifecycle] gpu Upgrade [Feature:GPUUpgrade] cluster upgrade should be able to run gpu pod after upgrade [Feature:GPUClusterUpgrade]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volume Attach Verify [Feature:vsphere][Serial][Disruptive] verify volume remains attached after master kubelet restart" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: dir-link] Set fsGroup for local volume should not set different fsGroups for two pods simultaneously" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] Should scale down GPU pool from 1 [GpuType:nvidia-tesla-p100] [Feature:ClusterSizeAutoscalingGpu]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] [Serial] Volume metrics PVController should create unbound pvc count metrics for pvc controller after creating pvc only" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones" classname="Kubernetes e2e suite" time="11.418742374"></testcase>
      <testcase name="[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota" classname="Kubernetes e2e suite" time="7.654852205"></testcase>
      <testcase name="[sig-auth] PodSecurityPolicy should allow pods under the privileged policy.PodSecurityPolicy" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Kubectl run deployment should create a deployment from an image  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-instrumentation] Stackdriver Monitoring should run Custom Metrics - Stackdriver Adapter for new resource model [Feature:StackdriverCustomMetrics]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-auth] PodSecurityPolicy should forbid pod creation when no PSP is available" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gluster] should support existing directories when readOnly specified in the volumeSource" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scalability] Density [Feature:ManualPerformance] should allow starting 30 pods per node using {extensions Deployment} with 2 secrets, 0 configmaps and 0 daemons" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] DaemonRestart [Disruptive] Kubelet should not restart containers across restart" classname="Kubernetes e2e suite" time="38.485069495">
          <failure type="Failure">/workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/daemon_restart.go:297&#xA;Expected error:&#xA;    &lt;*errors.errorString | 0xc4217d6ad0&gt;: {&#xA;        s: &#34;error getting signer for provider local: &#39;error reading SSH key /root/.ssh/id_rsa: &#39;open /root/.ssh/id_rsa: no such file or directory&#39;&#39;&#34;,&#xA;    }&#xA;    error getting signer for provider local: &#39;error reading SSH key /root/.ssh/id_rsa: &#39;open /root/.ssh/id_rsa: no such file or directory&#39;&#39;&#xA;not to have occurred&#xA;/workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/daemon_restart.go:96</failure>
          <system-out>[BeforeEach] [sig-apps] DaemonRestart [Disruptive]&#xA;  /workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:141&#xA;STEP: Creating a kubernetes client&#xA;Jun 27 10:08:41.080: INFO: &gt;&gt;&gt; kubeConfig: /tmp/kubeconfig-583934977&#xA;STEP: Building a namespace api object&#xA;STEP: Waiting for a default service account to be provisioned in namespace&#xA;[BeforeEach] [sig-apps] DaemonRestart [Disruptive]&#xA;  /workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/daemon_restart.go:194&#xA;STEP: creating replication controller daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d in namespace e2e-tests-daemonrestart-cd6lc&#xA;[It] Kubelet should not restart containers across restart&#xA;  /workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/daemon_restart.go:297&#xA;Jun 27 10:08:51.830: INFO: WARNING: SSH through the restart config might not work on local&#xA;Jun 27 10:08:51.830: INFO: Checking if Daemon kubelet on node 35.232.42.152 is up by polling for a 200 on its /healthz endpoint&#xA;Jun 27 10:08:56.831: INFO: Unexpected error occurred: error getting signer for provider local: &#39;error reading SSH key /root/.ssh/id_rsa: &#39;open /root/.ssh/id_rsa: no such file or directory&#39;&#39;&#xA;[AfterEach] [sig-apps] DaemonRestart [Disruptive]&#xA;  /workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:142&#xA;STEP: Collecting events from namespace &#34;e2e-tests-daemonrestart-cd6lc&#34;.&#xA;STEP: Found 50 events.&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:41 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d: {replication-controller } SuccessfulCreate: Created pod: daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-82g9s&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:41 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d: {replication-controller } SuccessfulCreate: Created pod: daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-ggm5l&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:41 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d: {replication-controller } SuccessfulCreate: Created pod: daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-cqw6l&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:41 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-82g9s: {default-scheduler } Scheduled: Successfully assigned e2e-tests-daemonrestart-cd6lc/daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-82g9s to gke-standard-cluster-1-default-pool-04796f61-dmzx&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:41 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-ggm5l: {default-scheduler } Scheduled: Successfully assigned e2e-tests-daemonrestart-cd6lc/daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-ggm5l to gke-standard-cluster-1-default-pool-04796f61-2br3&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:42 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d: {replication-controller } SuccessfulCreate: Created pod: daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-9ncz9&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:42 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d: {replication-controller } SuccessfulCreate: Created pod: daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-ncg97&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:42 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d: {replication-controller } SuccessfulCreate: Created pod: daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-n5zw4&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:42 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d: {replication-controller } SuccessfulCreate: Created pod: daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-hdwcw&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:42 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d: {replication-controller } SuccessfulCreate: Created pod: daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-fj64k&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:42 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d: {replication-controller } SuccessfulCreate: Created pod: daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-fjvqg&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:42 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d: {replication-controller } SuccessfulCreate: (combined from similar events): Created pod: daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-wbj9l&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:42 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-82g9s: {kubelet gke-standard-cluster-1-default-pool-04796f61-dmzx} Started: Started container&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:42 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-82g9s: {kubelet gke-standard-cluster-1-default-pool-04796f61-dmzx} Created: Created container&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:42 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-82g9s: {kubelet gke-standard-cluster-1-default-pool-04796f61-dmzx} Pulled: Container image &#34;k8s.gcr.io/pause:3.1&#34; already present on machine&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:42 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-9ncz9: {kubelet gke-standard-cluster-1-default-pool-04796f61-rr33} Pulled: Container image &#34;k8s.gcr.io/pause:3.1&#34; already present on machine&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:42 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-9ncz9: {default-scheduler } Scheduled: Successfully assigned e2e-tests-daemonrestart-cd6lc/daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-9ncz9 to gke-standard-cluster-1-default-pool-04796f61-rr33&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:42 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-9ncz9: {kubelet gke-standard-cluster-1-default-pool-04796f61-rr33} Created: Created container&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:42 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-cqw6l: {default-scheduler } Scheduled: Successfully assigned e2e-tests-daemonrestart-cd6lc/daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-cqw6l to gke-standard-cluster-1-default-pool-04796f61-sx27&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:42 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-cqw6l: {kubelet gke-standard-cluster-1-default-pool-04796f61-sx27} Created: Created container&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:42 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-cqw6l: {kubelet gke-standard-cluster-1-default-pool-04796f61-sx27} Pulled: Container image &#34;k8s.gcr.io/pause:3.1&#34; already present on machine&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:42 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-fj64k: {kubelet gke-standard-cluster-1-default-pool-04796f61-2br3} Pulled: Container image &#34;k8s.gcr.io/pause:3.1&#34; already present on machine&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:42 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-fj64k: {default-scheduler } Scheduled: Successfully assigned e2e-tests-daemonrestart-cd6lc/daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-fj64k to gke-standard-cluster-1-default-pool-04796f61-2br3&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:42 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-fj64k: {kubelet gke-standard-cluster-1-default-pool-04796f61-2br3} Started: Started container&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:42 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-fj64k: {kubelet gke-standard-cluster-1-default-pool-04796f61-2br3} Created: Created container&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:42 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-fjvqg: {default-scheduler } Scheduled: Successfully assigned e2e-tests-daemonrestart-cd6lc/daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-fjvqg to gke-standard-cluster-1-default-pool-04796f61-rr33&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:42 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-ggm5l: {kubelet gke-standard-cluster-1-default-pool-04796f61-2br3} Pulled: Container image &#34;k8s.gcr.io/pause:3.1&#34; already present on machine&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:42 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-ggm5l: {kubelet gke-standard-cluster-1-default-pool-04796f61-2br3} Started: Started container&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:42 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-ggm5l: {kubelet gke-standard-cluster-1-default-pool-04796f61-2br3} Created: Created container&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:42 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-hdwcw: {default-scheduler } Scheduled: Successfully assigned e2e-tests-daemonrestart-cd6lc/daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-hdwcw to gke-standard-cluster-1-default-pool-04796f61-sx27&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:42 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-n5zw4: {default-scheduler } Scheduled: Successfully assigned e2e-tests-daemonrestart-cd6lc/daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-n5zw4 to gke-standard-cluster-1-default-pool-04796f61-dmzx&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:42 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-n5zw4: {kubelet gke-standard-cluster-1-default-pool-04796f61-dmzx} Pulled: Container image &#34;k8s.gcr.io/pause:3.1&#34; already present on machine&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:42 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-ncg97: {kubelet gke-standard-cluster-1-default-pool-04796f61-dmzx} Pulled: Container image &#34;k8s.gcr.io/pause:3.1&#34; already present on machine&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:42 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-ncg97: {kubelet gke-standard-cluster-1-default-pool-04796f61-dmzx} Created: Created container&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:42 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-ncg97: {default-scheduler } Scheduled: Successfully assigned e2e-tests-daemonrestart-cd6lc/daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-ncg97 to gke-standard-cluster-1-default-pool-04796f61-dmzx&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:42 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-wbj9l: {default-scheduler } Scheduled: Successfully assigned e2e-tests-daemonrestart-cd6lc/daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-wbj9l to gke-standard-cluster-1-default-pool-04796f61-2br3&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:43 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-9ncz9: {kubelet gke-standard-cluster-1-default-pool-04796f61-rr33} Started: Started container&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:43 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-cqw6l: {kubelet gke-standard-cluster-1-default-pool-04796f61-sx27} Started: Started container&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:43 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-fjvqg: {kubelet gke-standard-cluster-1-default-pool-04796f61-rr33} Pulled: Container image &#34;k8s.gcr.io/pause:3.1&#34; already present on machine&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:43 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-fjvqg: {kubelet gke-standard-cluster-1-default-pool-04796f61-rr33} Started: Started container&#xA;Jun 27 10:08:56.844: INFO: At 2019-06-27 10:08:43 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-fjvqg: {kubelet gke-standard-cluster-1-default-pool-04796f61-rr33} Created: Created container&#xA;Jun 27 10:08:56.845: INFO: At 2019-06-27 10:08:43 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-hdwcw: {kubelet gke-standard-cluster-1-default-pool-04796f61-sx27} Started: Started container&#xA;Jun 27 10:08:56.845: INFO: At 2019-06-27 10:08:43 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-hdwcw: {kubelet gke-standard-cluster-1-default-pool-04796f61-sx27} Created: Created container&#xA;Jun 27 10:08:56.845: INFO: At 2019-06-27 10:08:43 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-hdwcw: {kubelet gke-standard-cluster-1-default-pool-04796f61-sx27} Pulled: Container image &#34;k8s.gcr.io/pause:3.1&#34; already present on machine&#xA;Jun 27 10:08:56.845: INFO: At 2019-06-27 10:08:43 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-n5zw4: {kubelet gke-standard-cluster-1-default-pool-04796f61-dmzx} Started: Started container&#xA;Jun 27 10:08:56.845: INFO: At 2019-06-27 10:08:43 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-n5zw4: {kubelet gke-standard-cluster-1-default-pool-04796f61-dmzx} Created: Created container&#xA;Jun 27 10:08:56.845: INFO: At 2019-06-27 10:08:43 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-ncg97: {kubelet gke-standard-cluster-1-default-pool-04796f61-dmzx} Started: Started container&#xA;Jun 27 10:08:56.845: INFO: At 2019-06-27 10:08:43 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-wbj9l: {kubelet gke-standard-cluster-1-default-pool-04796f61-2br3} Started: Started container&#xA;Jun 27 10:08:56.845: INFO: At 2019-06-27 10:08:43 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-wbj9l: {kubelet gke-standard-cluster-1-default-pool-04796f61-2br3} Created: Created container&#xA;Jun 27 10:08:56.845: INFO: At 2019-06-27 10:08:43 +0000 UTC - event for daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-wbj9l: {kubelet gke-standard-cluster-1-default-pool-04796f61-2br3} Pulled: Container image &#34;k8s.gcr.io/pause:3.1&#34; already present on machine&#xA;Jun 27 10:08:56.873: INFO: POD                                                           NODE                                               PHASE    GRACE  CONDITIONS&#xA;Jun 27 10:08:56.873: INFO: daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-82g9s    gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:08:41 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:08:44 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:08:41 +0000 UTC  }]&#xA;Jun 27 10:08:56.873: INFO: daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-9ncz9    gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:08:42 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:08:43 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:08:42 +0000 UTC  }]&#xA;Jun 27 10:08:56.873: INFO: daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-cqw6l    gke-standard-cluster-1-default-pool-04796f61-sx27  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:08:41 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:08:43 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:08:41 +0000 UTC  }]&#xA;Jun 27 10:08:56.873: INFO: daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-fj64k    gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:08:42 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:08:43 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:08:42 +0000 UTC  }]&#xA;Jun 27 10:08:56.873: INFO: daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-fjvqg    gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:08:42 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:08:44 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:08:42 +0000 UTC  }]&#xA;Jun 27 10:08:56.873: INFO: daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-ggm5l    gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:08:41 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:08:43 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:08:41 +0000 UTC  }]&#xA;Jun 27 10:08:56.873: INFO: daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-hdwcw    gke-standard-cluster-1-default-pool-04796f61-sx27  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:08:42 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:08:43 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:08:42 +0000 UTC  }]&#xA;Jun 27 10:08:56.873: INFO: daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-n5zw4    gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:08:42 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:08:44 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:08:42 +0000 UTC  }]&#xA;Jun 27 10:08:56.873: INFO: daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-ncg97    gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:08:42 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:08:43 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:08:42 +0000 UTC  }]&#xA;Jun 27 10:08:56.873: INFO: daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-wbj9l    gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:08:42 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:08:44 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:08:42 +0000 UTC  }]&#xA;Jun 27 10:08:56.873: INFO: sonobuoy                                                      gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:18 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:18 +0000 UTC  }]&#xA;Jun 27 10:08:56.873: INFO: sonobuoy-e2e-job-3f201e2f061345e7                             gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:02:00 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  }]&#xA;Jun 27 10:08:56.873: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-28cmn       gke-standard-cluster-1-default-pool-04796f61-sx27  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:49 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  }]&#xA;Jun 27 10:08:56.873: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-44pmg       gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:45 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  }]&#xA;Jun 27 10:08:56.873: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-rmqrw       gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:49 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  }]&#xA;Jun 27 10:08:56.873: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-xk7gb       gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:02:00 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  }]&#xA;Jun 27 10:08:56.873: INFO: event-exporter-v0.2.4-5c57bb7478-xtjl2                        gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:12 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 10:08:56.873: INFO: fluentd-gcp-scaler-5b5bf8b99f-vkg4s                           gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:12 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 10:08:56.873: INFO: fluentd-gcp-v3.2.0-2hkh9                                      gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:35 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  }]&#xA;Jun 27 10:08:56.873: INFO: fluentd-gcp-v3.2.0-j677d                                      gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:35 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  }]&#xA;Jun 27 10:08:56.873: INFO: fluentd-gcp-v3.2.0-jb9xn                                      gke-standard-cluster-1-default-pool-04796f61-sx27  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:35 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  }]&#xA;Jun 27 10:08:56.873: INFO: fluentd-gcp-v3.2.0-k8m8z                                      gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:36 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  }]&#xA;Jun 27 10:08:56.873: INFO: heapster-v1.6.0-beta.1-5dcd447597-kkgnc                       gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:24 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:26 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:24 +0000 UTC  }]&#xA;Jun 27 10:08:56.873: INFO: kube-dns-76dbb796c5-4ndph                                     gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:22 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 10:08:56.874: INFO: kube-dns-76dbb796c5-6qg5f                                     gke-standard-cluster-1-default-pool-04796f61-sx27  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:07 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:20 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:07 +0000 UTC  }]&#xA;Jun 27 10:08:56.874: INFO: kube-dns-autoscaler-67c97c87fb-4j4kd                          gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:12 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 10:08:56.874: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-2br3  gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:06 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 10:08:56.874: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-dmzx  gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:06 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 10:08:56.874: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-rr33  gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:04 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:12 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:04 +0000 UTC  }]&#xA;Jun 27 10:08:56.874: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-sx27  gke-standard-cluster-1-default-pool-04796f61-sx27  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:06 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 10:08:56.874: INFO: l7-default-backend-7ff48cffd7-g8pnv                           gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:20 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 10:08:56.874: INFO: metrics-server-v0.2.1-fd596d746-mnb77                         gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:11 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:14 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:11 +0000 UTC  }]&#xA;Jun 27 10:08:56.874: INFO: prometheus-to-sd-28w8p                                        gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:45 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:56 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:45 +0000 UTC  }]&#xA;Jun 27 10:08:56.874: INFO: prometheus-to-sd-2qsz9                                        gke-standard-cluster-1-default-pool-04796f61-sx27  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:46 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:55 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:46 +0000 UTC  }]&#xA;Jun 27 10:08:56.874: INFO: prometheus-to-sd-529s6                                        gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:46 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:51 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:46 +0000 UTC  }]&#xA;Jun 27 10:08:56.874: INFO: prometheus-to-sd-q6mwq                                        gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:45 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:53 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:45 +0000 UTC  }]&#xA;Jun 27 10:08:56.874: INFO: &#xA;Jun 27 10:08:56.886: INFO: &#xA;Logging node info for node gke-standard-cluster-1-default-pool-04796f61-2br3&#xA;Jun 27 10:08:56.893: INFO: Node Info: &amp;Node{ObjectMeta:k8s_io_apimachinery_pkg_apis_meta_v1.ObjectMeta{Name:gke-standard-cluster-1-default-pool-04796f61-2br3,GenerateName:,Namespace:,SelfLink:/api/v1/nodes/gke-standard-cluster-1-default-pool-04796f61-2br3,UID:55ee085e-98c0-11e9-93fd-42010a800028,ResourceVersion:7051,Generation:0,CreationTimestamp:2019-06-27 09:45:45 +0000 UTC,DeletionTimestamp:&lt;nil&gt;,DeletionGracePeriodSeconds:nil,Labels:map[string]string{beta.kubernetes.io/arch: amd64,beta.kubernetes.io/fluentd-ds-ready: true,beta.kubernetes.io/instance-type: n1-standard-4,beta.kubernetes.io/os: linux,cloud.google.com/gke-nodepool: default-pool,cloud.google.com/gke-os-distribution: cos,failure-domain.beta.kubernetes.io/region: us-central1,failure-domain.beta.kubernetes.io/zone: us-central1-a,kubernetes.io/hostname: gke-standard-cluster-1-default-pool-04796f61-2br3,},Annotations:map[string]string{container.googleapis.com/instance_id: 5263861497271497046,node.alpha.kubernetes.io/ttl: 0,volumes.kubernetes.io/controller-managed-attach-detach: true,},OwnerReferences:[],Finalizers:[],ClusterName:,Initializers:nil,},Spec:NodeSpec{PodCIDR:10.8.2.0/24,DoNotUse_ExternalID:,ProviderID:gce://sinuous-tuner-235209/us-central1-a/gke-standard-cluster-1-default-pool-04796f61-2br3,Unschedulable:false,Taints:[],ConfigSource:nil,},Status:NodeStatus{Capacity:ResourceList{cpu: {{4 0} {&lt;nil&gt;} 4 DecimalSI},ephemeral-storage: {{101241290752 0} {&lt;nil&gt;}  BinarySI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{15768948736 0} {&lt;nil&gt;} 15399364Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Allocatable:ResourceList{cpu: {{3920 -3} {&lt;nil&gt;} 3920m DecimalSI},ephemeral-storage: {{47093746742 0} {&lt;nil&gt;} 47093746742 DecimalSI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{13004902400 0} {&lt;nil&gt;} 12700100Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Phase:,Conditions:[{FrequentUnregisterNetDevice False 2019-06-27 10:08:17 +0000 UTC 2019-06-27 09:49:03 +0000 UTC UnregisterNetDevice node is functioning properly} {FrequentKubeletRestart False 2019-06-27 10:08:17 +0000 UTC 2019-06-27 09:49:03 +0000 UTC FrequentKubeletRestart kubelet is functioning properly} {FrequentDockerRestart False 2019-06-27 10:08:17 +0000 UTC 2019-06-27 09:49:04 +0000 UTC FrequentDockerRestart docker is functioning properly} {FrequentContainerdRestart False 2019-06-27 10:08:17 +0000 UTC 2019-06-27 09:49:05 +0000 UTC FrequentContainerdRestart containerd is functioning properly} {KernelDeadlock False 2019-06-27 10:08:17 +0000 UTC 2019-06-27 09:44:02 +0000 UTC KernelHasNoDeadlock kernel has no deadlock} {ReadonlyFilesystem False 2019-06-27 10:08:17 +0000 UTC 2019-06-27 09:44:02 +0000 UTC FilesystemIsNotReadOnly Filesystem is not read-only} {CorruptDockerOverlay2 False 2019-06-27 10:08:17 +0000 UTC 2019-06-27 09:49:03 +0000 UTC CorruptDockerOverlay2 docker overlay2 is functioning properly} {NetworkUnavailable False 2019-06-27 09:45:46 +0000 UTC 2019-06-27 09:45:46 +0000 UTC RouteCreated NodeController create implicit route} {OutOfDisk False 2019-06-27 10:08:50 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientDisk kubelet has sufficient disk space available} {MemoryPressure False 2019-06-27 10:08:50 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientMemory kubelet has sufficient memory available} {DiskPressure False 2019-06-27 10:08:50 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasNoDiskPressure kubelet has no disk pressure} {PIDPressure False 2019-06-27 10:08:50 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientPID kubelet has sufficient PID available} {Ready True 2019-06-27 10:08:50 +0000 UTC 2019-06-27 09:46:05 +0000 UTC KubeletReady kubelet is posting ready status. AppArmor enabled}],Addresses:[{InternalIP 10.128.0.42} {ExternalIP 35.232.42.152} {Hostname gke-standard-cluster-1-default-pool-04796f61-2br3}],DaemonEndpoints:NodeDaemonEndpoints{KubeletEndpoint:DaemonEndpoint{Port:10250,},},NodeInfo:NodeSystemInfo{MachineID:4ed4f0f644ff78a293f5a14239e1dc93,SystemUUID:4ED4F0F6-44FF-78A2-93F5-A14239E1DC93,BootID:df50bfdc-3ecb-4ada-a245-3c7fd247294f,KernelVersion:4.14.119+,OSImage:Container-Optimized OS from Google,ContainerRuntimeVersion:docker://17.3.2,KubeletVersion:v1.11.10-gke.4,KubeProxyVersion:v1.11.10-gke.4,OperatingSystem:linux,Architecture:amd64,},Images:[{[gcr.io/heptio-images/sonobuoy-plugin-systemd-logs@sha256:58e077ba773ff5d7b6bba90771fad72217f0d10b913bb66bb0afb387c9552788 gcr.io/heptio-images/sonobuoy-plugin-systemd-logs:latest] 290890605} {[k8s.gcr.io/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e9eb2b k8s.gcr.io/node-problem-detector:v0.4.1] 286572743} {[gcr.io/stackdriver-agents/stackdriver-logging-agent@sha256:f8d5231b67b9c53f60068b535a11811d29d1b3efd53d2b79f2a2591ea338e4f2 gcr.io/stackdriver-agents/stackdriver-logging-agent:0.6-1.6.0-1] 223242132} {[k8s.gcr.io/fluentd-elasticsearch@sha256:b8c94527b489fb61d3d81ce5ad7f3ddbb7be71e9620a3a36e2bede2f2e487d73 k8s.gcr.io/fluentd-elasticsearch:v2.0.4] 135716379} {[k8s.gcr.io/nginx-slim-amd64@sha256:6654db6d4028756062edac466454ee5c9cf9b20ef79e35a81e3c840031eb1e2b k8s.gcr.io/nginx-slim-amd64:0.20] 103591055} {[k8s.gcr.io/kubernetes-dashboard-amd64@sha256:dc4026c1b595435ef5527ca598e1e9c4343076926d7d62b365c44831395adbd0 k8s.gcr.io/kubernetes-dashboard-amd64:v1.8.3] 102319441} {[gcr.io/google_containers/kube-proxy:v1.11.10-gke.4 k8s.gcr.io/kube-proxy:v1.11.10-gke.4] 102279340} {[gcr.io/heptio-images/sonobuoy@sha256:d6d530b1ede4b82e9989aa1ba7ae4cd4fac09c6f7cb6a7c4f9270fff241e72c7 gcr.io/heptio-images/sonobuoy:v0.14.3] 89896078} {[k8s.gcr.io/fluentd-gcp-scaler@sha256:a5ace7506d393c4ed65eb2cbb6312c64ab357fcea16dff76b9055bc6e498e5ff k8s.gcr.io/fluentd-gcp-scaler:0.5.1] 86637208} {[k8s.gcr.io/heapster-amd64@sha256:9fae0af136ce0cf4f88393b3670f7139ffc464692060c374d2ae748e13144521 k8s.gcr.io/heapster-amd64:v1.6.0-beta.1] 76016169} {[k8s.gcr.io/ingress-gce-glbc-amd64@sha256:31d36bbd9c44caffa135fc78cf0737266fcf25e3cf0cd1c2fcbfbc4f7309cc52 k8s.gcr.io/ingress-gce-glbc-amd64:v1.1.1] 67801919} {[k8s.gcr.io/kube-addon-manager@sha256:d53486c3a0b49ebee019932878dc44232735d5622a51dbbdcec7124199020d09 k8s.gcr.io/kube-addon-manager:v8.7] 63322109} {[k8s.gcr.io/cpvpa-amd64@sha256:cfe7b0a11c9c8e18c87b1eb34fef9a7cbb8480a8da11fc2657f78dbf4739f869 k8s.gcr.io/cpvpa-amd64:v0.6.0] 51785854} {[k8s.gcr.io/cluster-proportional-autoscaler-amd64@sha256:003f98d9f411ddfa6ff6d539196355e03ddd69fa4ed38c7ffb8fec6f729afe2d k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.1.2-r2] 49648481} {[k8s.gcr.io/ip-masq-agent-amd64@sha256:1ffda57d87901bc01324c82ceb2145fe6a0448d3f0dd9cb65aa76a867cd62103 k8s.gcr.io/ip-masq-agent-amd64:v2.1.1] 49612505} {[k8s.gcr.io/k8s-dns-kube-dns-amd64@sha256:b99fc3eee2a9f052f7eb4cc00f15eb12fc405fa41019baa2d6b79847ae7284a8 k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.10] 49549457} {[k8s.gcr.io/rescheduler@sha256:156cfbfd05a5a815206fd2eeb6cbdaf1596d71ea4b415d3a6c43071dd7b99450 k8s.gcr.io/rescheduler:v0.4.0] 48973149} {[k8s.gcr.io/event-exporter@sha256:16ca66e2b5dc7a1ce6a5aafcb21d0885828b75cdfc08135430480f7ad2364adc k8s.gcr.io/event-exporter:v0.2.4] 47261019} {[k8s.gcr.io/coredns@sha256:db2bf53126ed1c761d5a41f24a1b82a461c85f736ff6e90542e9522be4757848 k8s.gcr.io/coredns:1.1.3] 45587362} {[k8s.gcr.io/metrics-server-amd64@sha256:49a9f12f7067d11f42c803dbe61ed2c1299959ad85cb315b25ff7eef8e6b8892 k8s.gcr.io/metrics-server-amd64:v0.2.1] 42541759} {[k8s.gcr.io/prometheus-to-sd@sha256:14666989f40bb7c896c3e775a93c6873e2b791d65bc65579f58a078b7f9a764e k8s.gcr.io/prometheus-to-sd:v0.5.0] 41861013} {[k8s.gcr.io/k8s-dns-sidecar-amd64@sha256:4f1ab957f87b94a5ec1edc26fae50da2175461f00afecf68940c4aa079bd08a4 k8s.gcr.io/k8s-dns-sidecar-amd64:1.14.10] 41635309} {[k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64@sha256:bbb2a290a568125b3b996028958eb773f33b5b87a6b37bf38a28f8b62dddb3c8 k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64:1.14.10] 40372149} {[k8s.gcr.io/addon-resizer@sha256:dcec9a5c2e20b8df19f3e9eeb87d9054a9e94e71479b935d5cfdbede9ce15895 k8s.gcr.io/addon-resizer:1.7] 38983736} {[k8s.gcr.io/addon-resizer@sha256:507aa9845ecce1fdde4d61f530c802f4dc2974c700ce0db7730866e442db958d k8s.gcr.io/addon-resizer:1.8.1] 32968591}],VolumesInUse:[kubernetes.io/gce-pd/gke-standard-cluster-1-pvc-804259ed-98c2-11e9-93fd-42010a800028],VolumesAttached:[{kubernetes.io/gce-pd/gke-standard-cluster-1-pvc-804259ed-98c2-11e9-93fd-42010a800028 /dev/disk/by-id/google-gke-standard-cluster-1-pvc-804259ed-98c2-11e9-93fd-42010a800028}],Config:nil,},}&#xA;Jun 27 10:08:56.893: INFO: &#xA;Logging kubelet events for node gke-standard-cluster-1-default-pool-04796f61-2br3&#xA;Jun 27 10:08:56.911: INFO: &#xA;Logging pods the kubelet thinks is on node gke-standard-cluster-1-default-pool-04796f61-2br3&#xA;Jun 27 10:08:56.968: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-44pmg started at 2019-06-27 10:01:32 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 10:08:56.968: INFO: &#x9;Container sonobuoy-worker ready: true, restart count 0&#xA;Jun 27 10:08:56.968: INFO: &#x9;Container systemd-logs ready: true, restart count 0&#xA;Jun 27 10:08:56.968: INFO: daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-fj64k started at 2019-06-27 10:08:42 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 10:08:56.968: INFO: &#x9;Container daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d ready: true, restart count 0&#xA;Jun 27 10:08:56.968: INFO: fluentd-gcp-v3.2.0-2hkh9 started at 2019-06-27 09:46:25 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 10:08:56.968: INFO: &#x9;Container fluentd-gcp ready: true, restart count 0&#xA;Jun 27 10:08:56.968: INFO: &#x9;Container prometheus-to-sd-exporter ready: true, restart count 0&#xA;Jun 27 10:08:56.968: INFO: sonobuoy started at 2019-06-27 10:01:18 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 10:08:56.968: INFO: &#x9;Container kube-sonobuoy ready: true, restart count 0&#xA;Jun 27 10:08:56.968: INFO: daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-ggm5l started at 2019-06-27 10:08:41 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 10:08:56.968: INFO: &#x9;Container daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d ready: true, restart count 0&#xA;Jun 27 10:08:56.968: INFO: daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-wbj9l started at 2019-06-27 10:08:42 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 10:08:56.968: INFO: &#x9;Container daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d ready: true, restart count 0&#xA;Jun 27 10:08:56.968: INFO: heapster-v1.6.0-beta.1-5dcd447597-kkgnc started at 2019-06-27 09:46:24 +0000 UTC (0+3 container statuses recorded)&#xA;Jun 27 10:08:56.968: INFO: &#x9;Container heapster ready: true, restart count 0&#xA;Jun 27 10:08:56.968: INFO: &#x9;Container heapster-nanny ready: true, restart count 0&#xA;Jun 27 10:08:56.968: INFO: &#x9;Container prom-to-sd ready: true, restart count 0&#xA;Jun 27 10:08:56.968: INFO: prometheus-to-sd-q6mwq started at 2019-06-27 09:45:45 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 10:08:56.968: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 10:08:56.968: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-2br3 started at &lt;nil&gt; (0+0 container statuses recorded)&#xA;Jun 27 10:08:57.001: INFO: &#xA;Latency metrics for node gke-standard-cluster-1-default-pool-04796f61-2br3&#xA;Jun 27 10:08:57.001: INFO: {Operation: Method:pod_start_latency_microseconds Quantile:0.99 Latency:12.726961s}&#xA;Jun 27 10:08:57.002: INFO: &#xA;Logging node info for node gke-standard-cluster-1-default-pool-04796f61-dmzx&#xA;Jun 27 10:08:57.006: INFO: Node Info: &amp;Node{ObjectMeta:k8s_io_apimachinery_pkg_apis_meta_v1.ObjectMeta{Name:gke-standard-cluster-1-default-pool-04796f61-dmzx,GenerateName:,Namespace:,SelfLink:/api/v1/nodes/gke-standard-cluster-1-default-pool-04796f61-dmzx,UID:563a4f0e-98c0-11e9-93fd-42010a800028,ResourceVersion:7054,Generation:0,CreationTimestamp:2019-06-27 09:45:45 +0000 UTC,DeletionTimestamp:&lt;nil&gt;,DeletionGracePeriodSeconds:nil,Labels:map[string]string{beta.kubernetes.io/arch: amd64,beta.kubernetes.io/fluentd-ds-ready: true,beta.kubernetes.io/instance-type: n1-standard-4,beta.kubernetes.io/os: linux,cloud.google.com/gke-nodepool: default-pool,cloud.google.com/gke-os-distribution: cos,failure-domain.beta.kubernetes.io/region: us-central1,failure-domain.beta.kubernetes.io/zone: us-central1-a,kubernetes.io/hostname: gke-standard-cluster-1-default-pool-04796f61-dmzx,},Annotations:map[string]string{container.googleapis.com/instance_id: 8240935979917586774,node.alpha.kubernetes.io/ttl: 0,volumes.kubernetes.io/controller-managed-attach-detach: true,},OwnerReferences:[],Finalizers:[],ClusterName:,Initializers:nil,},Spec:NodeSpec{PodCIDR:10.8.4.0/24,DoNotUse_ExternalID:,ProviderID:gce://sinuous-tuner-235209/us-central1-a/gke-standard-cluster-1-default-pool-04796f61-dmzx,Unschedulable:false,Taints:[],ConfigSource:nil,},Status:NodeStatus{Capacity:ResourceList{cpu: {{4 0} {&lt;nil&gt;} 4 DecimalSI},ephemeral-storage: {{101241290752 0} {&lt;nil&gt;}  BinarySI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{15768940544 0} {&lt;nil&gt;} 15399356Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Allocatable:ResourceList{cpu: {{3920 -3} {&lt;nil&gt;} 3920m DecimalSI},ephemeral-storage: {{47093746742 0} {&lt;nil&gt;} 47093746742 DecimalSI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{13004894208 0} {&lt;nil&gt;} 12700092Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Phase:,Conditions:[{ReadonlyFilesystem False 2019-06-27 10:08:16 +0000 UTC 2019-06-27 09:44:03 +0000 UTC FilesystemIsNotReadOnly Filesystem is not read-only} {FrequentUnregisterNetDevice False 2019-06-27 10:08:16 +0000 UTC 2019-06-27 09:49:04 +0000 UTC UnregisterNetDevice node is functioning properly} {FrequentKubeletRestart False 2019-06-27 10:08:16 +0000 UTC 2019-06-27 09:49:04 +0000 UTC FrequentKubeletRestart kubelet is functioning properly} {FrequentDockerRestart False 2019-06-27 10:08:16 +0000 UTC 2019-06-27 09:49:05 +0000 UTC FrequentDockerRestart docker is functioning properly} {FrequentContainerdRestart False 2019-06-27 10:08:16 +0000 UTC 2019-06-27 09:49:06 +0000 UTC FrequentContainerdRestart containerd is functioning properly} {CorruptDockerOverlay2 False 2019-06-27 10:08:16 +0000 UTC 2019-06-27 09:49:04 +0000 UTC CorruptDockerOverlay2 docker overlay2 is functioning properly} {KernelDeadlock False 2019-06-27 10:08:16 +0000 UTC 2019-06-27 09:44:03 +0000 UTC KernelHasNoDeadlock kernel has no deadlock} {NetworkUnavailable False 2019-06-27 09:45:46 +0000 UTC 2019-06-27 09:45:46 +0000 UTC RouteCreated NodeController create implicit route} {OutOfDisk False 2019-06-27 10:08:50 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientDisk kubelet has sufficient disk space available} {MemoryPressure False 2019-06-27 10:08:50 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientMemory kubelet has sufficient memory available} {DiskPressure False 2019-06-27 10:08:50 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasNoDiskPressure kubelet has no disk pressure} {PIDPressure False 2019-06-27 10:08:50 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientPID kubelet has sufficient PID available} {Ready True 2019-06-27 10:08:50 +0000 UTC 2019-06-27 09:46:06 +0000 UTC KubeletReady kubelet is posting ready status. AppArmor enabled}],Addresses:[{InternalIP 10.128.0.45} {ExternalIP 34.67.69.128} {Hostname gke-standard-cluster-1-default-pool-04796f61-dmzx}],DaemonEndpoints:NodeDaemonEndpoints{KubeletEndpoint:DaemonEndpoint{Port:10250,},},NodeInfo:NodeSystemInfo{MachineID:1e2b8bee3c68760edea50ec32bebc9c7,SystemUUID:1E2B8BEE-3C68-760E-DEA5-0EC32BEBC9C7,BootID:cca2dcb1-4058-446f-b35a-be81be4bdd91,KernelVersion:4.14.119+,OSImage:Container-Optimized OS from Google,ContainerRuntimeVersion:docker://17.3.2,KubeletVersion:v1.11.10-gke.4,KubeProxyVersion:v1.11.10-gke.4,OperatingSystem:linux,Architecture:amd64,},Images:[{[gcr.io/heptio-images/kube-conformance@sha256:e208e87718fee7fe922ad69f740ca23e5843d05faa014ef23a37cdd017944946 gcr.io/heptio-images/kube-conformance:v1.11] 532217543} {[gcr.io/heptio-images/sonobuoy-plugin-systemd-logs@sha256:58e077ba773ff5d7b6bba90771fad72217f0d10b913bb66bb0afb387c9552788 gcr.io/heptio-images/sonobuoy-plugin-systemd-logs:latest] 290890605} {[k8s.gcr.io/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e9eb2b k8s.gcr.io/node-problem-detector:v0.4.1] 286572743} {[gcr.io/stackdriver-agents/stackdriver-logging-agent@sha256:f8d5231b67b9c53f60068b535a11811d29d1b3efd53d2b79f2a2591ea338e4f2 gcr.io/stackdriver-agents/stackdriver-logging-agent:0.6-1.6.0-1] 223242132} {[k8s.gcr.io/fluentd-elasticsearch@sha256:b8c94527b489fb61d3d81ce5ad7f3ddbb7be71e9620a3a36e2bede2f2e487d73 k8s.gcr.io/fluentd-elasticsearch:v2.0.4] 135716379} {[k8s.gcr.io/nginx-slim-amd64@sha256:6654db6d4028756062edac466454ee5c9cf9b20ef79e35a81e3c840031eb1e2b k8s.gcr.io/nginx-slim-amd64:0.20] 103591055} {[k8s.gcr.io/kubernetes-dashboard-amd64@sha256:dc4026c1b595435ef5527ca598e1e9c4343076926d7d62b365c44831395adbd0 k8s.gcr.io/kubernetes-dashboard-amd64:v1.8.3] 102319441} {[gcr.io/google_containers/kube-proxy:v1.11.10-gke.4 k8s.gcr.io/kube-proxy:v1.11.10-gke.4] 102279340} {[gcr.io/heptio-images/sonobuoy@sha256:d6d530b1ede4b82e9989aa1ba7ae4cd4fac09c6f7cb6a7c4f9270fff241e72c7 gcr.io/heptio-images/sonobuoy:v0.14.3] 89896078} {[k8s.gcr.io/fluentd-gcp-scaler@sha256:a5ace7506d393c4ed65eb2cbb6312c64ab357fcea16dff76b9055bc6e498e5ff k8s.gcr.io/fluentd-gcp-scaler:0.5.1] 86637208} {[k8s.gcr.io/heapster-amd64@sha256:9fae0af136ce0cf4f88393b3670f7139ffc464692060c374d2ae748e13144521 k8s.gcr.io/heapster-amd64:v1.6.0-beta.1] 76016169} {[k8s.gcr.io/ingress-gce-glbc-amd64@sha256:31d36bbd9c44caffa135fc78cf0737266fcf25e3cf0cd1c2fcbfbc4f7309cc52 k8s.gcr.io/ingress-gce-glbc-amd64:v1.1.1] 67801919} {[k8s.gcr.io/kube-addon-manager@sha256:d53486c3a0b49ebee019932878dc44232735d5622a51dbbdcec7124199020d09 k8s.gcr.io/kube-addon-manager:v8.7] 63322109} {[k8s.gcr.io/cpvpa-amd64@sha256:cfe7b0a11c9c8e18c87b1eb34fef9a7cbb8480a8da11fc2657f78dbf4739f869 k8s.gcr.io/cpvpa-amd64:v0.6.0] 51785854} {[k8s.gcr.io/cluster-proportional-autoscaler-amd64@sha256:003f98d9f411ddfa6ff6d539196355e03ddd69fa4ed38c7ffb8fec6f729afe2d k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.1.2-r2] 49648481} {[k8s.gcr.io/ip-masq-agent-amd64@sha256:1ffda57d87901bc01324c82ceb2145fe6a0448d3f0dd9cb65aa76a867cd62103 k8s.gcr.io/ip-masq-agent-amd64:v2.1.1] 49612505} {[k8s.gcr.io/k8s-dns-kube-dns-amd64@sha256:b99fc3eee2a9f052f7eb4cc00f15eb12fc405fa41019baa2d6b79847ae7284a8 k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.10] 49549457} {[k8s.gcr.io/rescheduler@sha256:156cfbfd05a5a815206fd2eeb6cbdaf1596d71ea4b415d3a6c43071dd7b99450 k8s.gcr.io/rescheduler:v0.4.0] 48973149} {[k8s.gcr.io/event-exporter@sha256:16ca66e2b5dc7a1ce6a5aafcb21d0885828b75cdfc08135430480f7ad2364adc k8s.gcr.io/event-exporter:v0.2.4] 47261019} {[k8s.gcr.io/coredns@sha256:db2bf53126ed1c761d5a41f24a1b82a461c85f736ff6e90542e9522be4757848 k8s.gcr.io/coredns:1.1.3] 45587362} {[k8s.gcr.io/metrics-server-amd64@sha256:49a9f12f7067d11f42c803dbe61ed2c1299959ad85cb315b25ff7eef8e6b8892 k8s.gcr.io/metrics-server-amd64:v0.2.1] 42541759} {[k8s.gcr.io/prometheus-to-sd@sha256:14666989f40bb7c896c3e775a93c6873e2b791d65bc65579f58a078b7f9a764e k8s.gcr.io/prometheus-to-sd:v0.5.0] 41861013} {[k8s.gcr.io/k8s-dns-sidecar-amd64@sha256:4f1ab957f87b94a5ec1edc26fae50da2175461f00afecf68940c4aa079bd08a4 k8s.gcr.io/k8s-dns-sidecar-amd64:1.14.10] 41635309} {[k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64@sha256:bbb2a290a568125b3b996028958eb773f33b5b87a6b37bf38a28f8b62dddb3c8 k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64:1.14.10] 40372149} {[k8s.gcr.io/addon-resizer@sha256:dcec9a5c2e20b8df19f3e9eeb87d9054a9e94e71479b935d5cfdbede9ce15895 k8s.gcr.io/addon-resizer:1.7] 38983736}],VolumesInUse:[],VolumesAttached:[],Config:nil,},}&#xA;Jun 27 10:08:57.006: INFO: &#xA;Logging kubelet events for node gke-standard-cluster-1-default-pool-04796f61-dmzx&#xA;Jun 27 10:08:57.015: INFO: &#xA;Logging pods the kubelet thinks is on node gke-standard-cluster-1-default-pool-04796f61-dmzx&#xA;Jun 27 10:08:57.068: INFO: daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-ncg97 started at 2019-06-27 10:08:42 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 10:08:57.068: INFO: &#x9;Container daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d ready: true, restart count 0&#xA;Jun 27 10:08:57.068: INFO: daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-n5zw4 started at 2019-06-27 10:08:42 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 10:08:57.068: INFO: &#x9;Container daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d ready: true, restart count 0&#xA;Jun 27 10:08:57.068: INFO: metrics-server-v0.2.1-fd596d746-mnb77 started at 2019-06-27 09:46:11 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 10:08:57.068: INFO: &#x9;Container metrics-server ready: true, restart count 0&#xA;Jun 27 10:08:57.068: INFO: &#x9;Container metrics-server-nanny ready: true, restart count 0&#xA;Jun 27 10:08:57.068: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-dmzx started at &lt;nil&gt; (0+0 container statuses recorded)&#xA;Jun 27 10:08:57.068: INFO: sonobuoy-e2e-job-3f201e2f061345e7 started at 2019-06-27 10:01:32 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 10:08:57.068: INFO: &#x9;Container e2e ready: true, restart count 0&#xA;Jun 27 10:08:57.068: INFO: &#x9;Container sonobuoy-worker ready: true, restart count 0&#xA;Jun 27 10:08:57.068: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-xk7gb started at 2019-06-27 10:01:32 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 10:08:57.068: INFO: &#x9;Container sonobuoy-worker ready: true, restart count 0&#xA;Jun 27 10:08:57.068: INFO: &#x9;Container systemd-logs ready: true, restart count 0&#xA;Jun 27 10:08:57.068: INFO: daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-82g9s started at 2019-06-27 10:08:41 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 10:08:57.068: INFO: &#x9;Container daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d ready: true, restart count 0&#xA;Jun 27 10:08:57.068: INFO: prometheus-to-sd-529s6 started at 2019-06-27 09:45:46 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 10:08:57.068: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 10:08:57.068: INFO: fluentd-gcp-v3.2.0-j677d started at 2019-06-27 09:46:25 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 10:08:57.068: INFO: &#x9;Container fluentd-gcp ready: true, restart count 0&#xA;Jun 27 10:08:57.068: INFO: &#x9;Container prometheus-to-sd-exporter ready: true, restart count 0&#xA;Jun 27 10:08:57.098: INFO: &#xA;Latency metrics for node gke-standard-cluster-1-default-pool-04796f61-dmzx&#xA;Jun 27 10:08:57.098: INFO: {Operation: Method:pod_start_latency_microseconds Quantile:0.99 Latency:27.354564s}&#xA;Jun 27 10:08:57.098: INFO: {Operation:pull_image Method:docker_operations_latency_microseconds Quantile:0.99 Latency:10.96853s}&#xA;Jun 27 10:08:57.098: INFO: {Operation:pull_image Method:docker_operations_latency_microseconds Quantile:0.9 Latency:10.96853s}&#xA;Jun 27 10:08:57.098: INFO: &#xA;Logging node info for node gke-standard-cluster-1-default-pool-04796f61-rr33&#xA;Jun 27 10:08:57.105: INFO: Node Info: &amp;Node{ObjectMeta:k8s_io_apimachinery_pkg_apis_meta_v1.ObjectMeta{Name:gke-standard-cluster-1-default-pool-04796f61-rr33,GenerateName:,Namespace:,SelfLink:/api/v1/nodes/gke-standard-cluster-1-default-pool-04796f61-rr33,UID:55b363e1-98c0-11e9-93fd-42010a800028,ResourceVersion:7048,Generation:0,CreationTimestamp:2019-06-27 09:45:45 +0000 UTC,DeletionTimestamp:&lt;nil&gt;,DeletionGracePeriodSeconds:nil,Labels:map[string]string{beta.kubernetes.io/arch: amd64,beta.kubernetes.io/fluentd-ds-ready: true,beta.kubernetes.io/instance-type: n1-standard-4,beta.kubernetes.io/os: linux,cloud.google.com/gke-nodepool: default-pool,cloud.google.com/gke-os-distribution: cos,failure-domain.beta.kubernetes.io/region: us-central1,failure-domain.beta.kubernetes.io/zone: us-central1-a,kubernetes.io/hostname: gke-standard-cluster-1-default-pool-04796f61-rr33,},Annotations:map[string]string{container.googleapis.com/instance_id: 4128615952046174550,node.alpha.kubernetes.io/ttl: 0,volumes.kubernetes.io/controller-managed-attach-detach: true,},OwnerReferences:[],Finalizers:[],ClusterName:,Initializers:nil,},Spec:NodeSpec{PodCIDR:10.8.1.0/24,DoNotUse_ExternalID:,ProviderID:gce://sinuous-tuner-235209/us-central1-a/gke-standard-cluster-1-default-pool-04796f61-rr33,Unschedulable:false,Taints:[],ConfigSource:nil,},Status:NodeStatus{Capacity:ResourceList{cpu: {{4 0} {&lt;nil&gt;} 4 DecimalSI},ephemeral-storage: {{101241290752 0} {&lt;nil&gt;}  BinarySI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{15768948736 0} {&lt;nil&gt;} 15399364Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Allocatable:ResourceList{cpu: {{3920 -3} {&lt;nil&gt;} 3920m DecimalSI},ephemeral-storage: {{47093746742 0} {&lt;nil&gt;} 47093746742 DecimalSI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{13004902400 0} {&lt;nil&gt;} 12700100Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Phase:,Conditions:[{FrequentKubeletRestart False 2019-06-27 10:08:18 +0000 UTC 2019-06-27 09:49:03 +0000 UTC FrequentKubeletRestart kubelet is functioning properly} {FrequentDockerRestart False 2019-06-27 10:08:18 +0000 UTC 2019-06-27 09:49:04 +0000 UTC FrequentDockerRestart docker is functioning properly} {FrequentContainerdRestart False 2019-06-27 10:08:18 +0000 UTC 2019-06-27 09:49:05 +0000 UTC FrequentContainerdRestart containerd is functioning properly} {CorruptDockerOverlay2 False 2019-06-27 10:08:18 +0000 UTC 2019-06-27 09:49:03 +0000 UTC CorruptDockerOverlay2 docker overlay2 is functioning properly} {FrequentUnregisterNetDevice False 2019-06-27 10:08:18 +0000 UTC 2019-06-27 09:49:03 +0000 UTC UnregisterNetDevice node is functioning properly} {KernelDeadlock False 2019-06-27 10:08:18 +0000 UTC 2019-06-27 09:44:02 +0000 UTC KernelHasNoDeadlock kernel has no deadlock} {ReadonlyFilesystem False 2019-06-27 10:08:18 +0000 UTC 2019-06-27 09:44:02 +0000 UTC FilesystemIsNotReadOnly Filesystem is not read-only} {NetworkUnavailable False 2019-06-27 09:45:45 +0000 UTC 2019-06-27 09:45:45 +0000 UTC RouteCreated NodeController create implicit route} {OutOfDisk False 2019-06-27 10:08:49 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientDisk kubelet has sufficient disk space available} {MemoryPressure False 2019-06-27 10:08:49 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientMemory kubelet has sufficient memory available} {DiskPressure False 2019-06-27 10:08:49 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasNoDiskPressure kubelet has no disk pressure} {PIDPressure False 2019-06-27 10:08:49 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientPID kubelet has sufficient PID available} {Ready True 2019-06-27 10:08:49 +0000 UTC 2019-06-27 09:46:05 +0000 UTC KubeletReady kubelet is posting ready status. AppArmor enabled}],Addresses:[{InternalIP 10.128.0.44} {ExternalIP 35.226.22.222} {Hostname gke-standard-cluster-1-default-pool-04796f61-rr33}],DaemonEndpoints:NodeDaemonEndpoints{KubeletEndpoint:DaemonEndpoint{Port:10250,},},NodeInfo:NodeSystemInfo{MachineID:46f905cfd94d81d48ea29f40cb3028b5,SystemUUID:46F905CF-D94D-81D4-8EA2-9F40CB3028B5,BootID:1a132385-80e1-4ef8-8613-100779f1bf54,KernelVersion:4.14.119+,OSImage:Container-Optimized OS from Google,ContainerRuntimeVersion:docker://17.3.2,KubeletVersion:v1.11.10-gke.4,KubeProxyVersion:v1.11.10-gke.4,OperatingSystem:linux,Architecture:amd64,},Images:[{[gcr.io/heptio-images/sonobuoy-plugin-systemd-logs@sha256:58e077ba773ff5d7b6bba90771fad72217f0d10b913bb66bb0afb387c9552788 gcr.io/heptio-images/sonobuoy-plugin-systemd-logs:latest] 290890605} {[k8s.gcr.io/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e9eb2b k8s.gcr.io/node-problem-detector:v0.4.1] 286572743} {[gcr.io/stackdriver-agents/stackdriver-logging-agent@sha256:f8d5231b67b9c53f60068b535a11811d29d1b3efd53d2b79f2a2591ea338e4f2 gcr.io/stackdriver-agents/stackdriver-logging-agent:0.6-1.6.0-1] 223242132} {[k8s.gcr.io/fluentd-elasticsearch@sha256:b8c94527b489fb61d3d81ce5ad7f3ddbb7be71e9620a3a36e2bede2f2e487d73 k8s.gcr.io/fluentd-elasticsearch:v2.0.4] 135716379} {[k8s.gcr.io/kubernetes-dashboard-amd64@sha256:dc4026c1b595435ef5527ca598e1e9c4343076926d7d62b365c44831395adbd0 k8s.gcr.io/kubernetes-dashboard-amd64:v1.8.3] 102319441} {[gcr.io/google_containers/kube-proxy:v1.11.10-gke.4 k8s.gcr.io/kube-proxy:v1.11.10-gke.4] 102279340} {[gcr.io/heptio-images/sonobuoy@sha256:d6d530b1ede4b82e9989aa1ba7ae4cd4fac09c6f7cb6a7c4f9270fff241e72c7 gcr.io/heptio-images/sonobuoy:v0.14.3] 89896078} {[k8s.gcr.io/fluentd-gcp-scaler@sha256:a5ace7506d393c4ed65eb2cbb6312c64ab357fcea16dff76b9055bc6e498e5ff k8s.gcr.io/fluentd-gcp-scaler:0.5.1] 86637208} {[k8s.gcr.io/heapster-amd64@sha256:9fae0af136ce0cf4f88393b3670f7139ffc464692060c374d2ae748e13144521 k8s.gcr.io/heapster-amd64:v1.6.0-beta.1] 76016169} {[k8s.gcr.io/ingress-gce-glbc-amd64@sha256:31d36bbd9c44caffa135fc78cf0737266fcf25e3cf0cd1c2fcbfbc4f7309cc52 k8s.gcr.io/ingress-gce-glbc-amd64:v1.1.1] 67801919} {[k8s.gcr.io/kube-addon-manager@sha256:d53486c3a0b49ebee019932878dc44232735d5622a51dbbdcec7124199020d09 k8s.gcr.io/kube-addon-manager:v8.7] 63322109} {[k8s.gcr.io/cpvpa-amd64@sha256:cfe7b0a11c9c8e18c87b1eb34fef9a7cbb8480a8da11fc2657f78dbf4739f869 k8s.gcr.io/cpvpa-amd64:v0.6.0] 51785854} {[k8s.gcr.io/k8s-dns-kube-dns-amd64@sha256:618a82fa66cf0c75e4753369a6999032372be7308866fc9afb381789b1e5ad52 k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.13] 51157394} {[k8s.gcr.io/cluster-proportional-autoscaler-amd64@sha256:003f98d9f411ddfa6ff6d539196355e03ddd69fa4ed38c7ffb8fec6f729afe2d k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.1.2-r2] 49648481} {[k8s.gcr.io/ip-masq-agent-amd64@sha256:1ffda57d87901bc01324c82ceb2145fe6a0448d3f0dd9cb65aa76a867cd62103 k8s.gcr.io/ip-masq-agent-amd64:v2.1.1] 49612505} {[k8s.gcr.io/k8s-dns-kube-dns-amd64@sha256:b99fc3eee2a9f052f7eb4cc00f15eb12fc405fa41019baa2d6b79847ae7284a8 k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.10] 49549457} {[k8s.gcr.io/rescheduler@sha256:156cfbfd05a5a815206fd2eeb6cbdaf1596d71ea4b415d3a6c43071dd7b99450 k8s.gcr.io/rescheduler:v0.4.0] 48973149} {[k8s.gcr.io/event-exporter@sha256:16ca66e2b5dc7a1ce6a5aafcb21d0885828b75cdfc08135430480f7ad2364adc k8s.gcr.io/event-exporter:v0.2.4] 47261019} {[k8s.gcr.io/coredns@sha256:db2bf53126ed1c761d5a41f24a1b82a461c85f736ff6e90542e9522be4757848 k8s.gcr.io/coredns:1.1.3] 45587362} {[k8s.gcr.io/k8s-dns-sidecar-amd64@sha256:cedc8fe2098dffc26d17f64061296b7aa54258a31513b6c52df271a98bb522b3 k8s.gcr.io/k8s-dns-sidecar-amd64:1.14.13] 42852039} {[k8s.gcr.io/metrics-server-amd64@sha256:49a9f12f7067d11f42c803dbe61ed2c1299959ad85cb315b25ff7eef8e6b8892 k8s.gcr.io/metrics-server-amd64:v0.2.1] 42541759} {[k8s.gcr.io/prometheus-to-sd@sha256:14666989f40bb7c896c3e775a93c6873e2b791d65bc65579f58a078b7f9a764e k8s.gcr.io/prometheus-to-sd:v0.5.0] 41861013} {[k8s.gcr.io/prometheus-to-sd@sha256:aca8ef83a7fae83f1f8583e978dd4d1ff655b9f2ca0a76bda5edce6d8965bdf2 k8s.gcr.io/prometheus-to-sd:v0.4.2] 41861013} {[k8s.gcr.io/k8s-dns-sidecar-amd64@sha256:4f1ab957f87b94a5ec1edc26fae50da2175461f00afecf68940c4aa079bd08a4 k8s.gcr.io/k8s-dns-sidecar-amd64:1.14.10] 41635309} {[k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64@sha256:45df3e8e0c551bd0c79cdba48ae6677f817971dcbd1eeed7fd1f9a35118410e4 k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64:1.14.13] 41372492}],VolumesInUse:[],VolumesAttached:[],Config:nil,},}&#xA;Jun 27 10:08:57.105: INFO: &#xA;Logging kubelet events for node gke-standard-cluster-1-default-pool-04796f61-rr33&#xA;Jun 27 10:08:57.115: INFO: &#xA;Logging pods the kubelet thinks is on node gke-standard-cluster-1-default-pool-04796f61-rr33&#xA;Jun 27 10:08:57.147: INFO: event-exporter-v0.2.4-5c57bb7478-xtjl2 started at 2019-06-27 09:46:05 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 10:08:57.147: INFO: &#x9;Container event-exporter ready: true, restart count 0&#xA;Jun 27 10:08:57.147: INFO: &#x9;Container prometheus-to-sd-exporter ready: true, restart count 0&#xA;Jun 27 10:08:57.147: INFO: l7-default-backend-7ff48cffd7-g8pnv started at 2019-06-27 09:46:05 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 10:08:57.147: INFO: &#x9;Container default-http-backend ready: true, restart count 0&#xA;Jun 27 10:08:57.147: INFO: fluentd-gcp-v3.2.0-k8m8z started at 2019-06-27 09:46:25 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 10:08:57.147: INFO: &#x9;Container fluentd-gcp ready: true, restart count 0&#xA;Jun 27 10:08:57.147: INFO: &#x9;Container prometheus-to-sd-exporter ready: true, restart count 0&#xA;Jun 27 10:08:57.147: INFO: daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-fjvqg started at 2019-06-27 10:08:42 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 10:08:57.147: INFO: &#x9;Container daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d ready: true, restart count 0&#xA;Jun 27 10:08:57.147: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-rr33 started at &lt;nil&gt; (0+0 container statuses recorded)&#xA;Jun 27 10:08:57.147: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-rmqrw started at 2019-06-27 10:01:32 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 10:08:57.147: INFO: &#x9;Container sonobuoy-worker ready: true, restart count 0&#xA;Jun 27 10:08:57.147: INFO: &#x9;Container systemd-logs ready: true, restart count 0&#xA;Jun 27 10:08:57.147: INFO: kube-dns-autoscaler-67c97c87fb-4j4kd started at 2019-06-27 09:46:05 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 10:08:57.147: INFO: &#x9;Container autoscaler ready: true, restart count 0&#xA;Jun 27 10:08:57.147: INFO: kube-dns-76dbb796c5-4ndph started at 2019-06-27 09:46:05 +0000 UTC (0+4 container statuses recorded)&#xA;Jun 27 10:08:57.147: INFO: &#x9;Container dnsmasq ready: true, restart count 0&#xA;Jun 27 10:08:57.147: INFO: &#x9;Container kubedns ready: true, restart count 0&#xA;Jun 27 10:08:57.147: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 10:08:57.147: INFO: &#x9;Container sidecar ready: true, restart count 0&#xA;Jun 27 10:08:57.147: INFO: fluentd-gcp-scaler-5b5bf8b99f-vkg4s started at 2019-06-27 09:46:05 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 10:08:57.147: INFO: &#x9;Container fluentd-gcp-scaler ready: true, restart count 0&#xA;Jun 27 10:08:57.147: INFO: daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-9ncz9 started at 2019-06-27 10:08:42 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 10:08:57.147: INFO: &#x9;Container daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d ready: true, restart count 0&#xA;Jun 27 10:08:57.147: INFO: prometheus-to-sd-28w8p started at 2019-06-27 09:45:45 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 10:08:57.147: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 10:08:57.195: INFO: &#xA;Latency metrics for node gke-standard-cluster-1-default-pool-04796f61-rr33&#xA;Jun 27 10:08:57.195: INFO: &#xA;Logging node info for node gke-standard-cluster-1-default-pool-04796f61-sx27&#xA;Jun 27 10:08:57.200: INFO: Node Info: &amp;Node{ObjectMeta:k8s_io_apimachinery_pkg_apis_meta_v1.ObjectMeta{Name:gke-standard-cluster-1-default-pool-04796f61-sx27,GenerateName:,Namespace:,SelfLink:/api/v1/nodes/gke-standard-cluster-1-default-pool-04796f61-sx27,UID:560b3037-98c0-11e9-93fd-42010a800028,ResourceVersion:7055,Generation:0,CreationTimestamp:2019-06-27 09:45:45 +0000 UTC,DeletionTimestamp:&lt;nil&gt;,DeletionGracePeriodSeconds:nil,Labels:map[string]string{beta.kubernetes.io/arch: amd64,beta.kubernetes.io/fluentd-ds-ready: true,beta.kubernetes.io/instance-type: n1-standard-4,beta.kubernetes.io/os: linux,cloud.google.com/gke-nodepool: default-pool,cloud.google.com/gke-os-distribution: cos,failure-domain.beta.kubernetes.io/region: us-central1,failure-domain.beta.kubernetes.io/zone: us-central1-a,kubernetes.io/hostname: gke-standard-cluster-1-default-pool-04796f61-sx27,},Annotations:map[string]string{container.googleapis.com/instance_id: 7591417305628225878,node.alpha.kubernetes.io/ttl: 0,volumes.kubernetes.io/controller-managed-attach-detach: true,},OwnerReferences:[],Finalizers:[],ClusterName:,Initializers:nil,},Spec:NodeSpec{PodCIDR:10.8.0.0/24,DoNotUse_ExternalID:,ProviderID:gce://sinuous-tuner-235209/us-central1-a/gke-standard-cluster-1-default-pool-04796f61-sx27,Unschedulable:false,Taints:[],ConfigSource:nil,},Status:NodeStatus{Capacity:ResourceList{cpu: {{4 0} {&lt;nil&gt;} 4 DecimalSI},ephemeral-storage: {{101241290752 0} {&lt;nil&gt;}  BinarySI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{15768948736 0} {&lt;nil&gt;} 15399364Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Allocatable:ResourceList{cpu: {{3920 -3} {&lt;nil&gt;} 3920m DecimalSI},ephemeral-storage: {{47093746742 0} {&lt;nil&gt;} 47093746742 DecimalSI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{13004902400 0} {&lt;nil&gt;} 12700100Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Phase:,Conditions:[{KernelDeadlock False 2019-06-27 10:08:16 +0000 UTC 2019-06-27 09:44:02 +0000 UTC KernelHasNoDeadlock kernel has no deadlock} {ReadonlyFilesystem False 2019-06-27 10:08:16 +0000 UTC 2019-06-27 09:44:02 +0000 UTC FilesystemIsNotReadOnly Filesystem is not read-only} {CorruptDockerOverlay2 False 2019-06-27 10:08:16 +0000 UTC 2019-06-27 09:49:03 +0000 UTC CorruptDockerOverlay2 docker overlay2 is functioning properly} {FrequentUnregisterNetDevice False 2019-06-27 10:08:16 +0000 UTC 2019-06-27 09:49:03 +0000 UTC UnregisterNetDevice node is functioning properly} {FrequentKubeletRestart False 2019-06-27 10:08:16 +0000 UTC 2019-06-27 09:49:03 +0000 UTC FrequentKubeletRestart kubelet is functioning properly} {FrequentDockerRestart False 2019-06-27 10:08:16 +0000 UTC 2019-06-27 09:49:04 +0000 UTC FrequentDockerRestart docker is functioning properly} {FrequentContainerdRestart False 2019-06-27 10:08:16 +0000 UTC 2019-06-27 09:49:05 +0000 UTC FrequentContainerdRestart containerd is functioning properly} {NetworkUnavailable False 2019-06-27 09:45:46 +0000 UTC 2019-06-27 09:45:46 +0000 UTC RouteCreated NodeController create implicit route} {OutOfDisk False 2019-06-27 10:08:50 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientDisk kubelet has sufficient disk space available} {MemoryPressure False 2019-06-27 10:08:50 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientMemory kubelet has sufficient memory available} {DiskPressure False 2019-06-27 10:08:50 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasNoDiskPressure kubelet has no disk pressure} {PIDPressure False 2019-06-27 10:08:50 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientPID kubelet has sufficient PID available} {Ready True 2019-06-27 10:08:50 +0000 UTC 2019-06-27 09:46:06 +0000 UTC KubeletReady kubelet is posting ready status. AppArmor enabled}],Addresses:[{InternalIP 10.128.0.41} {ExternalIP 34.67.223.57} {Hostname gke-standard-cluster-1-default-pool-04796f61-sx27}],DaemonEndpoints:NodeDaemonEndpoints{KubeletEndpoint:DaemonEndpoint{Port:10250,},},NodeInfo:NodeSystemInfo{MachineID:ae4216d32aefe90029e9232dc77c1eda,SystemUUID:AE4216D3-2AEF-E900-29E9-232DC77C1EDA,BootID:75bdcdda-ed72-4df2-bb2c-68fbb20cc027,KernelVersion:4.14.119+,OSImage:Container-Optimized OS from Google,ContainerRuntimeVersion:docker://17.3.2,KubeletVersion:v1.11.10-gke.4,KubeProxyVersion:v1.11.10-gke.4,OperatingSystem:linux,Architecture:amd64,},Images:[{[gcr.io/heptio-images/sonobuoy-plugin-systemd-logs@sha256:58e077ba773ff5d7b6bba90771fad72217f0d10b913bb66bb0afb387c9552788 gcr.io/heptio-images/sonobuoy-plugin-systemd-logs:latest] 290890605} {[k8s.gcr.io/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e9eb2b k8s.gcr.io/node-problem-detector:v0.4.1] 286572743} {[gcr.io/stackdriver-agents/stackdriver-logging-agent@sha256:f8d5231b67b9c53f60068b535a11811d29d1b3efd53d2b79f2a2591ea338e4f2 gcr.io/stackdriver-agents/stackdriver-logging-agent:0.6-1.6.0-1] 223242132} {[k8s.gcr.io/fluentd-elasticsearch@sha256:b8c94527b489fb61d3d81ce5ad7f3ddbb7be71e9620a3a36e2bede2f2e487d73 k8s.gcr.io/fluentd-elasticsearch:v2.0.4] 135716379} {[k8s.gcr.io/kubernetes-dashboard-amd64@sha256:dc4026c1b595435ef5527ca598e1e9c4343076926d7d62b365c44831395adbd0 k8s.gcr.io/kubernetes-dashboard-amd64:v1.8.3] 102319441} {[gcr.io/google_containers/kube-proxy:v1.11.10-gke.4 k8s.gcr.io/kube-proxy:v1.11.10-gke.4] 102279340} {[gcr.io/heptio-images/sonobuoy@sha256:d6d530b1ede4b82e9989aa1ba7ae4cd4fac09c6f7cb6a7c4f9270fff241e72c7 gcr.io/heptio-images/sonobuoy:v0.14.3] 89896078} {[k8s.gcr.io/fluentd-gcp-scaler@sha256:a5ace7506d393c4ed65eb2cbb6312c64ab357fcea16dff76b9055bc6e498e5ff k8s.gcr.io/fluentd-gcp-scaler:0.5.1] 86637208} {[k8s.gcr.io/heapster-amd64@sha256:9fae0af136ce0cf4f88393b3670f7139ffc464692060c374d2ae748e13144521 k8s.gcr.io/heapster-amd64:v1.6.0-beta.1] 76016169} {[k8s.gcr.io/ingress-gce-glbc-amd64@sha256:31d36bbd9c44caffa135fc78cf0737266fcf25e3cf0cd1c2fcbfbc4f7309cc52 k8s.gcr.io/ingress-gce-glbc-amd64:v1.1.1] 67801919} {[k8s.gcr.io/kube-addon-manager@sha256:d53486c3a0b49ebee019932878dc44232735d5622a51dbbdcec7124199020d09 k8s.gcr.io/kube-addon-manager:v8.7] 63322109} {[k8s.gcr.io/cpvpa-amd64@sha256:cfe7b0a11c9c8e18c87b1eb34fef9a7cbb8480a8da11fc2657f78dbf4739f869 k8s.gcr.io/cpvpa-amd64:v0.6.0] 51785854} {[k8s.gcr.io/k8s-dns-kube-dns-amd64@sha256:618a82fa66cf0c75e4753369a6999032372be7308866fc9afb381789b1e5ad52 k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.13] 51157394} {[k8s.gcr.io/cluster-proportional-autoscaler-amd64@sha256:003f98d9f411ddfa6ff6d539196355e03ddd69fa4ed38c7ffb8fec6f729afe2d k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.1.2-r2] 49648481} {[k8s.gcr.io/ip-masq-agent-amd64@sha256:1ffda57d87901bc01324c82ceb2145fe6a0448d3f0dd9cb65aa76a867cd62103 k8s.gcr.io/ip-masq-agent-amd64:v2.1.1] 49612505} {[k8s.gcr.io/k8s-dns-kube-dns-amd64@sha256:b99fc3eee2a9f052f7eb4cc00f15eb12fc405fa41019baa2d6b79847ae7284a8 k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.10] 49549457} {[k8s.gcr.io/rescheduler@sha256:156cfbfd05a5a815206fd2eeb6cbdaf1596d71ea4b415d3a6c43071dd7b99450 k8s.gcr.io/rescheduler:v0.4.0] 48973149} {[k8s.gcr.io/event-exporter@sha256:16ca66e2b5dc7a1ce6a5aafcb21d0885828b75cdfc08135430480f7ad2364adc k8s.gcr.io/event-exporter:v0.2.4] 47261019} {[k8s.gcr.io/coredns@sha256:db2bf53126ed1c761d5a41f24a1b82a461c85f736ff6e90542e9522be4757848 k8s.gcr.io/coredns:1.1.3] 45587362} {[k8s.gcr.io/k8s-dns-sidecar-amd64@sha256:cedc8fe2098dffc26d17f64061296b7aa54258a31513b6c52df271a98bb522b3 k8s.gcr.io/k8s-dns-sidecar-amd64:1.14.13] 42852039} {[k8s.gcr.io/metrics-server-amd64@sha256:49a9f12f7067d11f42c803dbe61ed2c1299959ad85cb315b25ff7eef8e6b8892 k8s.gcr.io/metrics-server-amd64:v0.2.1] 42541759} {[k8s.gcr.io/prometheus-to-sd@sha256:14666989f40bb7c896c3e775a93c6873e2b791d65bc65579f58a078b7f9a764e k8s.gcr.io/prometheus-to-sd:v0.5.0] 41861013} {[k8s.gcr.io/prometheus-to-sd@sha256:aca8ef83a7fae83f1f8583e978dd4d1ff655b9f2ca0a76bda5edce6d8965bdf2 k8s.gcr.io/prometheus-to-sd:v0.4.2] 41861013} {[k8s.gcr.io/k8s-dns-sidecar-amd64@sha256:4f1ab957f87b94a5ec1edc26fae50da2175461f00afecf68940c4aa079bd08a4 k8s.gcr.io/k8s-dns-sidecar-amd64:1.14.10] 41635309} {[k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64@sha256:45df3e8e0c551bd0c79cdba48ae6677f817971dcbd1eeed7fd1f9a35118410e4 k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64:1.14.13] 41372492}],VolumesInUse:[],VolumesAttached:[],Config:nil,},}&#xA;Jun 27 10:08:57.201: INFO: &#xA;Logging kubelet events for node gke-standard-cluster-1-default-pool-04796f61-sx27&#xA;Jun 27 10:08:57.213: INFO: &#xA;Logging pods the kubelet thinks is on node gke-standard-cluster-1-default-pool-04796f61-sx27&#xA;Jun 27 10:08:57.247: INFO: prometheus-to-sd-2qsz9 started at 2019-06-27 09:45:46 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 10:08:57.247: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 10:08:57.247: INFO: fluentd-gcp-v3.2.0-jb9xn started at 2019-06-27 09:46:25 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 10:08:57.247: INFO: &#x9;Container fluentd-gcp ready: true, restart count 0&#xA;Jun 27 10:08:57.247: INFO: &#x9;Container prometheus-to-sd-exporter ready: true, restart count 0&#xA;Jun 27 10:08:57.247: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-sx27 started at &lt;nil&gt; (0+0 container statuses recorded)&#xA;Jun 27 10:08:57.247: INFO: kube-dns-76dbb796c5-6qg5f started at 2019-06-27 09:46:07 +0000 UTC (0+4 container statuses recorded)&#xA;Jun 27 10:08:57.247: INFO: &#x9;Container dnsmasq ready: true, restart count 0&#xA;Jun 27 10:08:57.247: INFO: &#x9;Container kubedns ready: true, restart count 0&#xA;Jun 27 10:08:57.247: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 10:08:57.247: INFO: &#x9;Container sidecar ready: true, restart count 0&#xA;Jun 27 10:08:57.247: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-28cmn started at 2019-06-27 10:01:32 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 10:08:57.247: INFO: &#x9;Container sonobuoy-worker ready: true, restart count 0&#xA;Jun 27 10:08:57.247: INFO: &#x9;Container systemd-logs ready: true, restart count 0&#xA;Jun 27 10:08:57.247: INFO: daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-cqw6l started at 2019-06-27 10:08:41 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 10:08:57.247: INFO: &#x9;Container daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d ready: true, restart count 0&#xA;Jun 27 10:08:57.247: INFO: daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d-hdwcw started at 2019-06-27 10:08:42 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 10:08:57.247: INFO: &#x9;Container daemonrestart10-95c0c714-98c2-11e9-ad63-aad45135813d ready: true, restart count 0&#xA;Jun 27 10:08:57.333: INFO: &#xA;Latency metrics for node gke-standard-cluster-1-default-pool-04796f61-sx27&#xA;STEP: Dumping a list of prepulled images on each node to file /tmp/results/image-puller.txt&#xA;Jun 27 10:08:57.339: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready&#xA;STEP: Destroying namespace &#34;e2e-tests-daemonrestart-cd6lc&#34; for this suite.&#xA;Jun 27 10:09:19.357: INFO: Waiting up to 30s for server preferred namespaced resources to be successfully discovered&#xA;Jun 27 10:09:19.494: INFO: namespace: e2e-tests-daemonrestart-cd6lc, resource: bindings, ignored listing per whitelist&#xA;Jun 27 10:09:19.565: INFO: namespace e2e-tests-daemonrestart-cd6lc deletion completed in 22.221469477s&#xA;[AfterEach] [sig-apps] DaemonRestart [Disruptive]&#xA;  /workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/daemon_restart.go:244&#xA;</system-out>
      </testcase>
      <testcase name="[sig-storage] Pod Disks schedule pods each with a PD, delete pod and verify detach [Slow] for RW PD with pod delete grace period of &#34;immediate (0s)&#34;" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-instrumentation] Stackdriver Monitoring should run Custom Metrics - Stackdriver Adapter for external metrics [Feature:StackdriverExternalMetrics]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfsPVC] should support file as subpath" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPartitioned] should support non-existent path" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify VSAN storage capability with valid hostFailuresToTolerate and cacheReservation values is honored for dynamically provisioned pvc using storageclass" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volume Provisioning On Clustered Datastore [Feature:vsphere] verify dynamic provision with spbm policy on clustered datastore" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] DisruptionController evictions: too few pods, replicaSet, percentage =&gt; should not allow an eviction" classname="Kubernetes e2e suite" time="108.637051435"></testcase>
      <testcase name="[sig-storage] GenericPersistentVolume[Disruptive] When kubelet restarts Should test that a volume mounted to a pod that is force deleted while the kubelet is down unmounts when the kubelet returns." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volume Placement test back to back pod creation and deletion with different volume sources on the same worker node" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] [HPA] Horizontal pod autoscaling (scale resource: CPU) [sig-autoscaling] ReplicationController light Should scale from 1 pod to 2 pods" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Dynamic Provisioning DynamicProvisioner should provision storage with mount options" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfsPVC] should support existing directory" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Services should prevent NodePort collisions" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Projected should update labels on modification [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] ResourceQuota should create a ResourceQuota and capture the life of a persistent volume claim with a storage class. [sig-storage]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] [HPA] Horizontal pod autoscaling (scale resource: Custom Metrics from Stackdriver) should scale down with Custom Metric of type Pod from Stackdriver [Feature:CustomMetricsAutoscaling]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [Feature:Example] [k8s.io] RethinkDB should create and stop rethinkdb servers" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] DNS horizontal autoscaling [Serial] [Slow] kube-dns-autoscaler should scale kube-dns pods when cluster size changed" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-instrumentation] Cadvisor should be healthy on every node." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Networking Granular Checks: Services [Slow] should update nodePort: http [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPVC] should support existing directories when readOnly specified in the volumeSource" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scalability] Density [Feature:ManualPerformance] should allow starting 30 pods per node using {extensions Deployment} with 0 secrets, 0 configmaps and 0 daemons" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPath] should fail if non-existent subpath is outside the volume [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPVC] should support existing directory" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Services should only allow access from service loadbalancer source ranges [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Services should be able to update NodePorts with two same port numbers but different protocols" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scalability] Density [Feature:ManualPerformance] should allow starting 30 pods per node using {batch Job} with 0 secrets, 0 configmaps and 0 daemons" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Sysctls [NodeFeature:Sysctls] should reject invalid sysctls" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Services should be able to switch session affinity for service with type clusterIP" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-auth] [Feature:NodeAuthorizer] Getting a non-existent configmap should exit with the Forbidden error, not a NotFound error" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Flexvolumes [Disruptive] should be mountable when attachable" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Servers with support for Table transformation should return chunks of table results for list calls" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Garbage collector should orphan pods created by rc if deleteOptions.OrphanDependents is nil" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfs] should unmount if pod is gracefully deleted while kubelet is down [Disruptive][Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should not deadlock when a pod&#39;s predecessor fails" classname="Kubernetes e2e suite" time="117.412686233"></testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPathSymlink] should support readOnly file specified in the volumeMount" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Projected optional updates should be reflected in volume [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Kubectl expose should create services for rc  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Downward API volume should provide container&#39;s memory request [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [sig-node] Security Context [Feature:SecurityContext] should support seccomp alpha runtime/default annotation [Feature:Seccomp]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] should increase cluster size if pending pods are small and there is another node pool that is not autoscaled [Feature:ClusterSizeAutoscalingScaleUp]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cluster-lifecycle] [Feature:BootstrapTokens] should not delete the token secret when the secret is not expired" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] shouldn&#39;t be able to scale down when rescheduling a pod is required, but pdb doesn&#39;t allow drain[Feature:ClusterSizeAutoscalingScaleDown]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Loadbalancing: L7 GCE [Slow] [Feature:NEG] should be able to switch between IG and NEG modes" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] SchedulerPredicates [Serial] validates MaxPods limit number of pods that are allowed to run [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-instrumentation] [Feature:PrometheusMonitoring] Prometheus should scrape metrics from annotated pods." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] [HPA] Horizontal pod autoscaling (scale resource: Custom Metrics from Stackdriver) should scale up with two metrics of type Pod from Stackdriver [Feature:CustomMetricsAutoscaling]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: gce-localssd-scsi-fs] [Serial] Set fsGroup for local volume should set different fsGroup for second pod if first pod is deleted" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] shouldn&#39;t scale up when expendable pod is preempted [Feature:ClusterSizeAutoscalingScaleUp]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPath] should support restarting containers using directory as subpath [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Kubectl create quota should reject quota with invalid scopes" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] should increase cluster size if pods are pending due to host port conflict [Feature:ClusterSizeAutoscalingScaleUp]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] Job should delete a job" classname="Kubernetes e2e suite" time="46.477435179"></testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: dir-link] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [sig-node] Security Context [Feature:SecurityContext] should support seccomp default which is unconfined [Feature:Seccomp]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volume Provisioning On Clustered Datastore [Feature:vsphere] verify static provisioning on clustered datastore" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Services should serve a basic endpoint from pods  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Downward API volume should provide podname as non-root with fsgroup and defaultMode [NodeFeature:FSGroup]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] ESIPP [Slow] [DisabledForLargeClusters] should only target nodes with endpoints" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Projected should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted" classname="Kubernetes e2e suite" time="12.696026009"></testcase>
      <testcase name="[sig-storage] Subpath [Volume type: emptyDir] should fail if non-existent subpath is outside the volume [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] ConfigMap should be consumable from pods in volume as non-root with defaultMode and fsGroup set [NodeFeature:FSGroup]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [sig-node] Security Context [Feature:SecurityContext] should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [Feature:RunAsGroup]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] ResourceQuota should verify ResourceQuota with best effort scope." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] ResourceQuota should create a ResourceQuota and capture the life of a replication controller." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volume Disk Size [Feature:vsphere] verify dynamically provisioned pv using storageclass with an invalid disk size fails" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [sig-node] Security Context [Feature:SecurityContext] should support pod.Spec.SecurityContext.SupplementalGroups" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-instrumentation] Monitoring should verify monitoring pods and all cluster nodes are available on influxdb using heapster [Feature:InfluxdbMonitoring]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPathSymlink] should support existing directories when readOnly specified in the volumeSource" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cluster-lifecycle] Downgrade [Feature:Downgrade] cluster downgrade should maintain a functioning cluster [Feature:ClusterDowngrade]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] EmptyDir volumes should support (non-root,0777,default) [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPartitioned] should unmount if pod is gracefully deleted while kubelet is down [Disruptive][Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Kubectl patch should add annotations for pods in rc  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Services should be able to create an internal type load balancer [Slow] [DisabledForLargeClusters]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cluster-lifecycle] Nodes [Disruptive] Resize [Slow] should be able to delete nodes" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volume FStype [Feature:vsphere] verify fstype - ext3 formatted volume" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPath] should support existing directories when readOnly specified in the volumeSource" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPath] should fail for new directories when readOnly specified in the volumeSource" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should provide basic identity" classname="Kubernetes e2e suite" time="194.851875428"></testcase>
      <testcase name="[sig-storage] EmptyDir volumes should support (non-root,0666,default) [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [Feature:Example] [k8s.io] Cassandra should create and scale cassandra" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify if a SPBM policy is not honored on a non-compatible datastore for dynamically provisioned pvc using storageclass" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Dynamic Provisioning Block volume provisioning [Feature:BlockVolume] should create and delete block persistent volumes" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scalability] Load capacity [Feature:ManualPerformance] should be able to handle 30 pods per node { Random} with 0 secrets, 0 configmaps and 0 daemons" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Services should create endpoints for unready pods" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Services should be able to change the type and ports of a service [Slow] [DisabledForLargeClusters]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Downward API [Serial] [Disruptive] [NodeFeature:EphemeralStorage] Downward API tests for local ephemeral storage should provide default limits.ephemeral-storage from node allocatable" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] DisruptionController evictions: too few pods, absolute =&gt; should not allow an eviction" classname="Kubernetes e2e suite" time="106.65673373999999"></testcase>
      <testcase name="[sig-api-machinery] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]" classname="Kubernetes e2e suite" time="16.606020856"></testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gluster] should support creating multiple subpath from same volumes [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPVC] should fail if subpath file is outside the volume [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPartitioned] should support existing single file" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Projected should update annotations on modification [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] should be able to scale down by draining multiple pods one by one as dictated by pdb[Feature:ClusterSizeAutoscalingScaleDown]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] Set fsGroup for local volume should not set different fsGroups for two pods simultaneously" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] [HPA] Horizontal pod autoscaling (scale resource: CPU) [sig-autoscaling] [Serial] [Slow] ReplicaSet Should scale from 5 pods to 3 pods and from 3 to 1" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volume Placement should create and delete pod with the same volume source on the same worker node" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes NFS with multiple PVs and PVCs all in same ns should create 2 PVs and 4 PVCs: test write access" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] NFSPersistentVolumes[Disruptive][Flaky] when kubelet restarts Should test that a volume mounted to a pod that is deleted while the kubelet is down unmounts when the kubelet returns." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Projected should set mode on item file [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scalability] Density [Feature:ManualPerformance] should allow starting 30 pods per node using {extensions Deployment} with 0 secrets, 2 configmaps and 0 daemons" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [sig-node] Events should be sent by kubelets and the scheduler about pods scheduling and running  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfs] should fail if subpath with backstepping is outside the volume [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: blockfs] Set fsGroup for local volume should not set different fsGroups for two pods simultaneously" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Cluster size autoscaler scalability [Slow] should scale down empty nodes [Feature:ClusterAutoscalerScalability3]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] NetworkPolicy NetworkPolicy between server and client should enforce policy based on PodSelector [Feature:NetworkPolicy]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Regional PD RegionalPD should failover to a different zone when all nodes in one zone become unreachable [Slow] [Disruptive]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scalability] Density [Feature:ManualPerformance] should allow starting 100 pods per node using { ReplicationController} with 0 secrets, 0 configmaps and 0 daemons" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volume Operations Storm [Feature:vsphere] should create pod with many volumes and verify no attach call fails" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [Feature:Example] [k8s.io] Secret should create a pod that reads a secret" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfs] should support restarting containers using directory as subpath [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: dir] Set fsGroup for local volume should set same fsGroup for two pods simultaneously" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Loadbalancing: L7 GCE [Slow] [Feature:Ingress] should create ingress with given static-ip" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] should increase cluster size if pod requesting EmptyDir volume is pending [Feature:ClusterSizeAutoscalingScaleUp]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: dir] One pod requesting one prebound PVC should be able to mount volume and write from pod1" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]" classname="Kubernetes e2e suite" time="19.149684136"></testcase>
      <testcase name="[sig-network] DNS configMap nameserver Change stubDomain should be able to change stubDomain configuration [Slow][Serial]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  Stress with local volume provisioner [Serial] should use be able to process many pods and reuse local volumes" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfs] should support existing directory" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl Port forwarding [k8s.io] With a server listening on localhost should support forwarding over websockets" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Garbage collector should delete jobs and pods created by cronjob" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [sig-node] Security Context [Feature:SecurityContext] should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [Feature:RunAsGroup]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl Port forwarding [k8s.io] With a server listening on 0.0.0.0 [k8s.io] that expects NO client request should support a client that connects, sends DATA, and disconnects" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Projected should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] DNS horizontal autoscaling [DisabledForLargeClusters] kube-dns-autoscaler should scale kube-dns pods in both nonfaulty and faulty scenarios" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify VSAN storage capability with invalid capability name objectSpaceReserve is not honored for dynamically provisioned pvc using storageclass" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-instrumentation] Stackdriver Monitoring should run Stackdriver Metadata Agent [Feature:StackdriverMetadataAgent]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gluster] should support readOnly file specified in the volumeMount" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Kubectl run pod should create a pod from an image when restart is Never  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: dir] One pod requesting one prebound PVC should be able to mount volume and read from pod1" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cluster-lifecycle] Nodes [Disruptive] Resize [Slow] should be able to add nodes" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Kubectl run job should create a job from an image when restart is OnFailure  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  Pod with node different from PV&#39;s NodeAffinity should fail scheduling due to different NodeSelector" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Loadbalancing: L7 GCE [Slow] [Feature:Ingress] should conform to Ingress spec" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfsPVC] should support readOnly file specified in the volumeMount" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] AdmissionWebhook Should be able to deny custom resource creation" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] SchedulerPredicates [Serial] validates that required NodeAffinity setting is respected if matching" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Kubectl cluster-info should check if Kubernetes master services is included in cluster-info  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-instrumentation] Cluster level logging implemented by Stackdriver [Feature:StackdriverLogging] [Soak] should ingest logs from applications running for a prolonged amount of time" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPathSymlink] should unmount if pod is force deleted while kubelet is down [Disruptive][Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] ResourceQuota [Feature:Initializers] should create a ResourceQuota and capture the life of an uninitialized pod." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] GenericPersistentVolume[Disruptive] When kubelet restarts Should test that a volume mounted to a pod that is deleted while the kubelet is down unmounts when the kubelet returns." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPathSymlink] should unmount if pod is gracefully deleted while kubelet is down [Disruptive][Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Node Unregister [Feature:vsphere] [Slow] [Disruptive] node unregister" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Projected should provide container&#39;s cpu request [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Loadbalancing: L7 GCE [Slow] [Feature:Ingress] multicluster ingress should get instance group annotation" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cluster-lifecycle] [Feature:BootstrapTokens] should delete the signed bootstrap tokens from clusterInfo ConfigMap when bootstrap token is deleted" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Dynamic Provisioning DynamicProvisioner should provision storage with non-default reclaim policy Retain" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Guestbook application should create and stop a working application  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Kubectl apply apply set/view last-applied" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] CronJob should replace jobs when ReplaceConcurrent" classname="Kubernetes e2e suite" time="124.682969686"></testcase>
      <testcase name="[sig-storage] PersistentVolumes GCEPD should test that deleting a PVC before the pod does not cause pod deletion to fail on PD detach" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes [Feature:ReclaimPolicy] [sig-storage] persistentvolumereclaim:vsphere should retain persistent volume when reclaimPolicy set to retain when associated claim is deleted" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cluster-lifecycle] Reboot [Disruptive] [Feature:Reboot] each node by triggering kernel panic and ensure they function upon restart" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] HostPath should support r/w [NodeConformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfsPVC] should support restarting containers using directory as subpath [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] DisruptionController evictions: no PDB =&gt; should allow an eviction" classname="Kubernetes e2e suite" time="8.534492499"></testcase>
      <testcase name="[sig-cli] Kubectl Port forwarding [k8s.io] With a server listening on localhost [k8s.io] that expects NO client request should support a client that connects, sends DATA, and disconnects" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfs] should support readOnly file specified in the volumeMount" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  Local volume provisioner [Serial] should not create local persistent volume for filesystem volume that was not bind mounted" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] Set fsGroup for local volume should set same fsGroup for two pods simultaneously" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Networking should provide Internet connection for containers [Feature:Networking-IPv6][Experimental]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gluster] should support non-existent path" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] EquivalenceCache [Serial] validates pod affinity works properly when new replica pod is scheduled" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] ResourceQuota should create a ResourceQuota and capture the life of a replica set." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Downward API volume should set DefaultMode on files [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Conformance]" classname="Kubernetes e2e suite" time="78.540644364"></testcase>
      <testcase name="[sig-storage] Projected should provide podname only [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Proxy server should support proxy with --port 0  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Kubectl run rc should create an rc from an image  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] EmptyDir volumes should support (root,0777,default) [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfsPVC] should unmount if pod is gracefully deleted while kubelet is down [Disruptive][Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Services should have session affinity work for service with type clusterIP" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] CronJob should schedule multiple jobs concurrently" classname="Kubernetes e2e suite" time="167.330263824"></testcase>
      <testcase name="[sig-network] Networking Granular Checks: Services [Slow] should update endpoints: udp" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] Deployment deployment should support proportional scaling" classname="Kubernetes e2e suite" time="14.86250634"></testcase>
      <testcase name="[sig-autoscaling] [HPA] Horizontal pod autoscaling (scale resource: CPU) [sig-autoscaling] [Serial] [Slow] ReplicaSet Should scale from 1 pod to 3 pods and from 3 to 5" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volume Placement should create and delete pod with multiple volumes from different datastore" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Projected updates should be reflected in volume [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Aggregator Should be able to support the 1.7 Sample API Server using the current Aggregator" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] [Feature:ClusterSizeAutoscalingScaleUp] [Slow] Autoscaling [sig-autoscaling] Autoscaling a service from 1 pod and 3 nodes to 8 pods and &gt;=4 nodes takes less than 15 minutes" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Node Poweroff [Feature:vsphere] [Slow] [Disruptive] verify volume status after node power off" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] DNS should provide DNS for the cluster  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cluster-lifecycle] Reboot [Disruptive] [Feature:Reboot] each node by switching off the network interface and ensure they function upon switch on" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] PodPriorityResolution [Serial] [Feature:PodPreemption] validates critical system priorities are created and resolved" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Downward API volume should provide container&#39;s cpu limit [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scalability] Load capacity [Feature:ManualPerformance] should be able to handle 30 pods per node {batch Job} with 0 secrets, 0 configmaps and 0 daemons" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: emptyDir] should unmount if pod is force deleted while kubelet is down [Disruptive][Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPartitioned] should support restarting containers using directory as subpath [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cluster-lifecycle] [Feature:BootstrapTokens] should sign the new added bootstrap tokens" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scalability] Density [Feature:Performance] should allow starting 30 pods per node using { ReplicationController} with 0 secrets, 0 configmaps and 0 daemons" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]" classname="Kubernetes e2e suite" time="16.941937188"></testcase>
      <testcase name="[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify an if a SPBM policy and VSAN capabilities cannot be honored for dynamically provisioned pvc using storageclass" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volumes CephFS [Feature:Volumes] should be mountable" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] SchedulerPredicates [Serial] validates local ephemeral storage resource limits of pods that are allowed to run [Feature:LocalStorageCapacityIsolation]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Pods should be submitted and removed [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volumes vsphere [Feature:Volumes] should be mountable" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] NFSPersistentVolumes[Disruptive][Flaky] when kubelet restarts Should test that a file written to the mount before kubelet restart is readable after restart." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfsPVC] should support readOnly directory specified in the volumeMount" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Service endpoints latency should not be very high  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Sysctls [NodeFeature:Sysctls] should support unsafe sysctls which are actually whitelisted" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] DNS configMap federations should be able to change federation configuration [Slow][Serial]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] DNS configMap nameserver Forward external name lookup should forward externalname lookup to upstream nameserver [Slow][Serial]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPVC] should support readOnly directory specified in the volumeMount" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-instrumentation] Stackdriver Monitoring should run Custom Metrics - Stackdriver Adapter for old resource model [Feature:StackdriverCustomMetrics]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPVC] should fail if subpath directory is outside the volume [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [sig-node] Security Context [Feature:SecurityContext] should support volume SELinux relabeling when using hostPID" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Variable Expansion should fail substituting values in a volume subpath with absolute path [Feature:VolumeSubpathEnvExpansion][NodeAlphaFeature:VolumeSubpathEnvExpansion][Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: gce-localssd-scsi-fs] [Serial] One pod requesting one prebound PVC should be able to mount volume and read from pod1" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] SchedulerPredicates [Serial] validates that there is no conflict between pods with same hostPort but different hostIP and protocol" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Update Demo should create and stop a replication controller  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Loadbalancing: L7 GCE [Slow] [Feature:Ingress] should support multiple TLS certs" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPathSymlink] should support restarting containers using file as subpath [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfsPVC] should support existing directories when readOnly specified in the volumeSource" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cluster-lifecycle] kube-proxy migration [Feature:KubeProxyDaemonSetMigration] Upgrade kube-proxy from static pods to a DaemonSet should maintain a functioning cluster [Feature:KubeProxyDaemonSetUpgrade]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes [Feature:LabelSelector] [sig-storage] Selector-Label Volume Binding:vsphere should bind volume with claim for given label" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Projected should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Pod Disks schedule pods each with a PD, delete pod and verify detach [Slow] for read-only PD with pod delete grace period of &#34;immediate (0s)&#34;" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] AdmissionWebhook Should mutate configmap" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] ReplicationController should adopt matching pods on creation" classname="Kubernetes e2e suite" time="30.381310672"></testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfs] should fail if subpath directory is outside the volume [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfsPVC] should unmount if pod is force deleted while kubelet is down [Disruptive][Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] [HPA] Horizontal pod autoscaling (scale resource: Custom Metrics from Stackdriver) should scale down with Custom Metric of type Object from Stackdriver [Feature:CustomMetricsAutoscaling]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [sig-node] Pod garbage collector [Feature:PodGarbageCollector] [Slow] should handle the creation of 1000 pods" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] should scale down when expendable pod is running [Feature:ClusterSizeAutoscalingScaleDown]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Kubectl logs should be able to retrieve and filter logs  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volumes NFS should be mountable" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] ESIPP [Slow] [DisabledForLargeClusters] should handle updates to ExternalTrafficPolicy field" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Networking Granular Checks: Services [Slow] should function for endpoint-Service: udp" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-instrumentation] Logging soak [Performance] [Slow] [Disruptive] should survive logging 1KB every 1s seconds, for a duration of 2m0s, scaling up to 1 pods per node" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] Should not scale GPU pool up if pod does not require GPUs [GpuType:nvidia-tesla-k80] [Feature:ClusterSizeAutoscalingGpu]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Docker Containers should be able to override the image&#39;s default command and arguments [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-auth] ServiceAccounts should ensure a single API token exists" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Pods should get a host IP [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] should be able to scale down by draining system pods with pdb[Feature:ClusterSizeAutoscalingScaleDown]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify VSAN storage capability with invalid hostFailuresToTolerate value is not honored for dynamically provisioned pvc using storageclass" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] shouldn&#39;t increase cluster size if pending pod is too large [Feature:ClusterSizeAutoscalingScaleUp]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Projected should provide container&#39;s memory limit [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] ServiceLoadBalancer [Feature:ServiceLoadBalancer] should support simple GET on Ingress ips" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scalability] Density [Feature:ManualPerformance] should allow starting 50 pods per node using { ReplicationController} with 0 secrets, 0 configmaps and 0 daemons" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Projected should provide podname as non-root with fsgroup [NodeFeature:FSGroup]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Namespaces [Serial] should delete fast enough (90 percent of 100 namespaces in 150 seconds)" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] HostPath should support existing single file subPath" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Servers with support for Table transformation should return generic metadata details across all namespaces for nodes" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Initializers [Feature:Initializers] should dynamically register and apply initializers to pods [Serial]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify VSAN storage capability with invalid diskStripes value is not honored for dynamically provisioned pvc using storageclass" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage should allow deletion of pod with invalid volume : secret" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  StatefulSet with pod anti-affinity should use volumes spread across nodes" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes:vsphere should test that deleting the Namespace of a PVC and Pod causes the successful detach of vsphere volume" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Dynamic Provisioning DynamicProvisioner should test that deleting a claim before the volume is provisioned deletes the volume." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: emptyDir] should support existing single file" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] Should be able to scale a node group down to 0[Feature:ClusterSizeAutoscalingScaleDown]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfsPVC] should support restarting containers using file as subpath [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfs] should support existing single file" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volume Placement should create and delete pod with multiple volumes from same datastore" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPVC] should fail if subpath with backstepping is outside the volume [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] AdmissionWebhook Should unconditionally reject operations on fail closed webhook" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] [Serial] Volume metrics PVController should create bound pv/pvc count metrics for pvc controller after creating both pv and pvc" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] Deployment iterative rollouts should eventually progress" classname="Kubernetes e2e suite" time="43.704914393"></testcase>
      <testcase name="[sig-api-machinery] Secrets should be consumable via the environment [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] NoSNAT [Feature:NoSNAT] [Slow] Should be able to send traffic between Pods without SNAT" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] Rescheduler [Serial] should ensure that critical pod is scheduled in case there is no resources available" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPVC] should support readOnly file specified in the volumeMount" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volumes iSCSI [Feature:Volumes] should be mountable" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: dir-link] Set fsGroup for local volume should set fsGroup for one pod" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPathSymlink] should fail if subpath directory is outside the volume [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods" classname="Kubernetes e2e suite" time="28.765536076"></testcase>
      <testcase name="[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] CSI Volumes CSI plugin test using CSI driver: [Feature: GCE PD CSI Plugin] gcePD should provision storage" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Pod Disks schedule a pod w/ RW PD(s) mounted to 1 or more containers, write to PD, verify content, delete pod, and repeat in rapid succession [Slow] using 4 containers and 1 PDs" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] StatefulSet [k8s.io] Deploy clustered applications [Feature:StatefulSet] [Slow] should creating a working redis cluster" classname="Kubernetes e2e suite" time="637.66064456">
          <failure type="Failure">/workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:946&#xA;Jun 27 10:38:16.174: Failed waiting for pods to enter running: timed out waiting for the condition&#xA;/workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/statefulset_utils.go:323</failure>
          <system-out>[BeforeEach] [sig-apps] StatefulSet&#xA;  /workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:141&#xA;STEP: Creating a kubernetes client&#xA;Jun 27 10:28:15.802: INFO: &gt;&gt;&gt; kubeConfig: /tmp/kubeconfig-583934977&#xA;STEP: Building a namespace api object&#xA;STEP: Waiting for a default service account to be provisioned in namespace&#xA;[BeforeEach] [sig-apps] StatefulSet&#xA;  /workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:57&#xA;[BeforeEach] [k8s.io] Deploy clustered applications [Feature:StatefulSet] [Slow]&#xA;  /workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:924&#xA;[It] should creating a working redis cluster&#xA;  /workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:946&#xA;STEP: Deploying redis: master/slave&#xA;Jun 27 10:28:16.110: INFO: Parsing statefulset from test/e2e/testing-manifests/statefulset/redis/statefulset.yaml&#xA;Jun 27 10:28:16.116: INFO: Parsing service from test/e2e/testing-manifests/statefulset/redis/service.yaml&#xA;Jun 27 10:28:16.117: INFO: creating rd service&#xA;Jun 27 10:28:16.135: INFO: creating statefulset e2e-tests-statefulset-btlxp/rd with 3 replicas and selector &amp;LabelSelector{MatchLabels:map[string]string{app: redis,},MatchExpressions:[],}&#xA;Jun 27 10:28:16.158: INFO: Found 0 stateful pods, waiting for 3&#xA;Jun 27 10:28:26.163: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:28:36.163: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:28:46.164: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:28:56.164: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:29:06.173: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:29:16.163: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:29:26.170: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:29:36.164: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:29:46.163: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:29:56.164: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:30:06.272: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:30:16.164: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:30:26.164: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:30:36.165: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:30:46.163: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:30:56.166: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:31:06.164: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:31:16.168: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:31:26.163: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:31:36.164: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:31:46.171: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:31:56.164: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:32:06.164: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:32:16.163: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:32:26.164: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:32:36.164: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:32:46.165: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:32:56.166: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:33:06.164: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:33:16.164: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:33:26.164: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:33:36.164: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:33:46.164: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:33:56.166: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:34:06.165: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:34:16.163: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:34:26.163: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:34:36.163: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:34:46.163: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:34:56.163: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:35:06.242: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:35:16.163: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:35:26.165: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:35:36.163: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:35:46.181: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:35:56.169: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:36:06.168: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:36:16.176: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:36:26.164: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:36:36.163: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:36:46.164: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:36:56.164: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:37:06.175: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:37:16.163: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:37:26.166: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:37:36.165: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:37:46.165: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:37:56.167: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:38:06.164: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:38:16.168: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:38:16.173: INFO: Found 1 stateful pods, waiting for 3&#xA;Jun 27 10:38:16.174: INFO: Failed waiting for pods to enter running: timed out waiting for the condition&#xA;[AfterEach] [k8s.io] Deploy clustered applications [Feature:StatefulSet] [Slow]&#xA;  /workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/apps/statefulset.go:929&#xA;Jun 27 10:38:16.180: INFO: Running &#39;/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-583934977 describe po rd-0 --namespace=e2e-tests-statefulset-btlxp&#39;&#xA;Jun 27 10:38:16.512: INFO: stderr: &#34;&#34;&#xA;Jun 27 10:38:16.512: INFO: stdout: &#34;Name:               rd-0\nNamespace:          e2e-tests-statefulset-btlxp\nPriority:           0\nPriorityClassName:  &lt;none&gt;\nNode:               gke-standard-cluster-1-default-pool-04796f61-dmzx/10.128.0.45\nStart Time:         Thu, 27 Jun 2019 10:28:19 +0000\nLabels:             app=redis\n                    controller-revision-hash=rd-f45fbfd99\n                    statefulset.kubernetes.io/pod-name=rd-0\nAnnotations:        &lt;none&gt;\nStatus:             Pending\nIP:                 10.8.4.50\nControlled By:      StatefulSet/rd\nInit Containers:\n  install:\n    Container ID:  docker://5d085b1273f1bf1fadfa12b505d12a3aec077d9bd056011f05021e34a74b564d\n    Image:         k8s.gcr.io/redis-install-3.2.0:e2e\n    Image ID:      docker-pullable://k8s.gcr.io/redis-install-3.2.0@sha256:84305c74214f769ac3bdb3b6ceae35b8f13dd5485a6255a31776f3f3bcb2e4f3\n    Port:          &lt;none&gt;\n    Host Port:     &lt;none&gt;\n    Args:\n      --install-into=/opt\n      --work-dir=/work-dir\n    State:          Terminated\n      Reason:       Completed\n      Exit Code:    0\n      Started:      Thu, 27 Jun 2019 10:28:40 +0000\n      Finished:     Thu, 27 Jun 2019 10:28:40 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    &lt;none&gt;\n    Mounts:\n      /opt from opt (rw)\n      /var/run/secrets/kubernetes.io/serviceaccount from default-token-cbqlw (ro)\n      /work-dir from workdir (rw)\n  bootstrap:\n    Container ID:  docker://cdd719cbe8acc7313f14f3dc4198c9720939c1cb3d39b0661162b6fb148c8a35\n    Image:         debian:jessie\n    Image ID:      docker-pullable://debian@sha256:6b95a104400bb99ad60b47a48e37d5d1eb71a3f9ec8e86854e0cf64ecc5fd0e8\n    Port:          &lt;none&gt;\n    Host Port:     &lt;none&gt;\n    Command:\n      /work-dir/peer-finder\n    Args:\n      -on-start=\&#34;/work-dir/on-start.sh\&#34;\n      -service=redis\n    State:          Running\n      Started:      Thu, 27 Jun 2019 10:28:46 +0000\n    Ready:          False\n    Restart Count:  0\n    Environment:\n      POD_NAMESPACE:  e2e-tests-statefulset-btlxp (v1:metadata.namespace)\n    Mounts:\n      /opt from opt (rw)\n      /var/run/secrets/kubernetes.io/serviceaccount from default-token-cbqlw (ro)\n      /work-dir from workdir (rw)\nContainers:\n  redis:\n    Container ID:  \n    Image:         debian:jessie\n    Image ID:      \n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Command:\n      /opt/redis/redis-server\n    Args:\n      /opt/redis/redis.conf\n    State:          Waiting\n      Reason:       PodInitializing\n    Ready:          False\n    Restart Count:  0\n    Readiness:      exec [sh -c /opt/redis/redis-cli -h $(hostname) ping] delay=15s timeout=5s period=10s #success=1 #failure=3\n    Environment:    &lt;none&gt;\n    Mounts:\n      /data from datadir (rw)\n      /opt from opt (rw)\n      /var/run/secrets/kubernetes.io/serviceaccount from default-token-cbqlw (ro)\nConditions:\n  Type              Status\n  Initialized       False \n  Ready             False \n  ContainersReady   False \n  PodScheduled      True \nVolumes:\n  datadir:\n    Type:       PersistentVolumeClaim (a reference to a PersistentVolumeClaim in the same namespace)\n    ClaimName:  datadir-rd-0\n    ReadOnly:   false\n  opt:\n    Type:    EmptyDir (a temporary directory that shares a pod&#39;s lifetime)\n    Medium:  \n  workdir:\n    Type:    EmptyDir (a temporary directory that shares a pod&#39;s lifetime)\n    Medium:  \n  default-token-cbqlw:\n    Type:        Secret (a volume populated by a Secret)\n    SecretName:  default-token-cbqlw\n    Optional:    false\nQoS Class:       BestEffort\nNode-Selectors:  &lt;none&gt;\nTolerations:     node.kubernetes.io/not-ready:NoExecute for 300s\n                 node.kubernetes.io/unreachable:NoExecute for 300s\nEvents:\n  Type     Reason                  Age               From                                                        Message\n  ----     ------                  ----              ----                                                        -------\n  Normal   NotTriggerScaleUp       9m                cluster-autoscaler                                          pod didn&#39;t trigger scale-up (it wouldn&#39;t fit if a new node is added): 20 max limit reached\n  Warning  FailedScheduling        9m (x4 over 10m)  default-scheduler                                           pod has unbound immediate PersistentVolumeClaims (repeated 4 times)\n  Normal   Scheduled               9m                default-scheduler                                           Successfully assigned e2e-tests-statefulset-btlxp/rd-0 to gke-standard-cluster-1-default-pool-04796f61-dmzx\n  Normal   SuccessfulAttachVolume  9m                attachdetach-controller                                     AttachVolume.Attach succeeded for volume \&#34;pvc-464b2723-98c6-11e9-93fd-42010a800028\&#34;\n  Normal   Pulling                 9m                kubelet, gke-standard-cluster-1-default-pool-04796f61-dmzx  pulling image \&#34;k8s.gcr.io/redis-install-3.2.0:e2e\&#34;\n  Normal   Pulled                  9m                kubelet, gke-standard-cluster-1-default-pool-04796f61-dmzx  Successfully pulled image \&#34;k8s.gcr.io/redis-install-3.2.0:e2e\&#34;\n  Normal   Created                 9m                kubelet, gke-standard-cluster-1-default-pool-04796f61-dmzx  Created container\n  Normal   Started                 9m                kubelet, gke-standard-cluster-1-default-pool-04796f61-dmzx  Started container\n  Normal   Pulling                 9m                kubelet, gke-standard-cluster-1-default-pool-04796f61-dmzx  pulling image \&#34;debian:jessie\&#34;\n  Normal   Pulled                  9m                kubelet, gke-standard-cluster-1-default-pool-04796f61-dmzx  Successfully pulled image \&#34;debian:jessie\&#34;\n  Normal   Created                 9m                kubelet, gke-standard-cluster-1-default-pool-04796f61-dmzx  Created container\n  Normal   Started                 9m                kubelet, gke-standard-cluster-1-default-pool-04796f61-dmzx  Started container\n&#34;&#xA;Jun 27 10:38:16.512: INFO: &#xA;Output of kubectl describe rd-0:&#xA;Name:               rd-0&#xA;Namespace:          e2e-tests-statefulset-btlxp&#xA;Priority:           0&#xA;PriorityClassName:  &lt;none&gt;&#xA;Node:               gke-standard-cluster-1-default-pool-04796f61-dmzx/10.128.0.45&#xA;Start Time:         Thu, 27 Jun 2019 10:28:19 +0000&#xA;Labels:             app=redis&#xA;                    controller-revision-hash=rd-f45fbfd99&#xA;                    statefulset.kubernetes.io/pod-name=rd-0&#xA;Annotations:        &lt;none&gt;&#xA;Status:             Pending&#xA;IP:                 10.8.4.50&#xA;Controlled By:      StatefulSet/rd&#xA;Init Containers:&#xA;  install:&#xA;    Container ID:  docker://5d085b1273f1bf1fadfa12b505d12a3aec077d9bd056011f05021e34a74b564d&#xA;    Image:         k8s.gcr.io/redis-install-3.2.0:e2e&#xA;    Image ID:      docker-pullable://k8s.gcr.io/redis-install-3.2.0@sha256:84305c74214f769ac3bdb3b6ceae35b8f13dd5485a6255a31776f3f3bcb2e4f3&#xA;    Port:          &lt;none&gt;&#xA;    Host Port:     &lt;none&gt;&#xA;    Args:&#xA;      --install-into=/opt&#xA;      --work-dir=/work-dir&#xA;    State:          Terminated&#xA;      Reason:       Completed&#xA;      Exit Code:    0&#xA;      Started:      Thu, 27 Jun 2019 10:28:40 +0000&#xA;      Finished:     Thu, 27 Jun 2019 10:28:40 +0000&#xA;    Ready:          True&#xA;    Restart Count:  0&#xA;    Environment:    &lt;none&gt;&#xA;    Mounts:&#xA;      /opt from opt (rw)&#xA;      /var/run/secrets/kubernetes.io/serviceaccount from default-token-cbqlw (ro)&#xA;      /work-dir from workdir (rw)&#xA;  bootstrap:&#xA;    Container ID:  docker://cdd719cbe8acc7313f14f3dc4198c9720939c1cb3d39b0661162b6fb148c8a35&#xA;    Image:         debian:jessie&#xA;    Image ID:      docker-pullable://debian@sha256:6b95a104400bb99ad60b47a48e37d5d1eb71a3f9ec8e86854e0cf64ecc5fd0e8&#xA;    Port:          &lt;none&gt;&#xA;    Host Port:     &lt;none&gt;&#xA;    Command:&#xA;      /work-dir/peer-finder&#xA;    Args:&#xA;      -on-start=&#34;/work-dir/on-start.sh&#34;&#xA;      -service=redis&#xA;    State:          Running&#xA;      Started:      Thu, 27 Jun 2019 10:28:46 +0000&#xA;    Ready:          False&#xA;    Restart Count:  0&#xA;    Environment:&#xA;      POD_NAMESPACE:  e2e-tests-statefulset-btlxp (v1:metadata.namespace)&#xA;    Mounts:&#xA;      /opt from opt (rw)&#xA;      /var/run/secrets/kubernetes.io/serviceaccount from default-token-cbqlw (ro)&#xA;      /work-dir from workdir (rw)&#xA;Containers:&#xA;  redis:&#xA;    Container ID:  &#xA;    Image:         debian:jessie&#xA;    Image ID:      &#xA;    Port:          6379/TCP&#xA;    Host Port:     0/TCP&#xA;    Command:&#xA;      /opt/redis/redis-server&#xA;    Args:&#xA;      /opt/redis/redis.conf&#xA;    State:          Waiting&#xA;      Reason:       PodInitializing&#xA;    Ready:          False&#xA;    Restart Count:  0&#xA;    Readiness:      exec [sh -c /opt/redis/redis-cli -h $(hostname) ping] delay=15s timeout=5s period=10s #success=1 #failure=3&#xA;    Environment:    &lt;none&gt;&#xA;    Mounts:&#xA;      /data from datadir (rw)&#xA;      /opt from opt (rw)&#xA;      /var/run/secrets/kubernetes.io/serviceaccount from default-token-cbqlw (ro)&#xA;Conditions:&#xA;  Type              Status&#xA;  Initialized       False &#xA;  Ready             False &#xA;  ContainersReady   False &#xA;  PodScheduled      True &#xA;Volumes:&#xA;  datadir:&#xA;    Type:       PersistentVolumeClaim (a reference to a PersistentVolumeClaim in the same namespace)&#xA;    ClaimName:  datadir-rd-0&#xA;    ReadOnly:   false&#xA;  opt:&#xA;    Type:    EmptyDir (a temporary directory that shares a pod&#39;s lifetime)&#xA;    Medium:  &#xA;  workdir:&#xA;    Type:    EmptyDir (a temporary directory that shares a pod&#39;s lifetime)&#xA;    Medium:  &#xA;  default-token-cbqlw:&#xA;    Type:        Secret (a volume populated by a Secret)&#xA;    SecretName:  default-token-cbqlw&#xA;    Optional:    false&#xA;QoS Class:       BestEffort&#xA;Node-Selectors:  &lt;none&gt;&#xA;Tolerations:     node.kubernetes.io/not-ready:NoExecute for 300s&#xA;                 node.kubernetes.io/unreachable:NoExecute for 300s&#xA;Events:&#xA;  Type     Reason                  Age               From                                                        Message&#xA;  ----     ------                  ----              ----                                                        -------&#xA;  Normal   NotTriggerScaleUp       9m                cluster-autoscaler                                          pod didn&#39;t trigger scale-up (it wouldn&#39;t fit if a new node is added): 20 max limit reached&#xA;  Warning  FailedScheduling        9m (x4 over 10m)  default-scheduler                                           pod has unbound immediate PersistentVolumeClaims (repeated 4 times)&#xA;  Normal   Scheduled               9m                default-scheduler                                           Successfully assigned e2e-tests-statefulset-btlxp/rd-0 to gke-standard-cluster-1-default-pool-04796f61-dmzx&#xA;  Normal   SuccessfulAttachVolume  9m                attachdetach-controller                                     AttachVolume.Attach succeeded for volume &#34;pvc-464b2723-98c6-11e9-93fd-42010a800028&#34;&#xA;  Normal   Pulling                 9m                kubelet, gke-standard-cluster-1-default-pool-04796f61-dmzx  pulling image &#34;k8s.gcr.io/redis-install-3.2.0:e2e&#34;&#xA;  Normal   Pulled                  9m                kubelet, gke-standard-cluster-1-default-pool-04796f61-dmzx  Successfully pulled image &#34;k8s.gcr.io/redis-install-3.2.0:e2e&#34;&#xA;  Normal   Created                 9m                kubelet, gke-standard-cluster-1-default-pool-04796f61-dmzx  Created container&#xA;  Normal   Started                 9m                kubelet, gke-standard-cluster-1-default-pool-04796f61-dmzx  Started container&#xA;  Normal   Pulling                 9m                kubelet, gke-standard-cluster-1-default-pool-04796f61-dmzx  pulling image &#34;debian:jessie&#34;&#xA;  Normal   Pulled                  9m                kubelet, gke-standard-cluster-1-default-pool-04796f61-dmzx  Successfully pulled image &#34;debian:jessie&#34;&#xA;  Normal   Created                 9m                kubelet, gke-standard-cluster-1-default-pool-04796f61-dmzx  Created container&#xA;  Normal   Started                 9m                kubelet, gke-standard-cluster-1-default-pool-04796f61-dmzx  Started container&#xA;&#xA;Jun 27 10:38:16.512: INFO: Running &#39;/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-583934977 logs rd-0 --namespace=e2e-tests-statefulset-btlxp --tail=100&#39;&#xA;Jun 27 10:38:16.637: INFO: rc: 1&#xA;Jun 27 10:38:16.637: INFO: &#xA;Last 100 log lines of rd-0:&#xA;&#xA;Jun 27 10:38:16.637: INFO: Deleting all statefulset in ns e2e-tests-statefulset-btlxp&#xA;Jun 27 10:38:16.643: INFO: Scaling statefulset rd to 0&#xA;Jun 27 10:38:26.674: INFO: Waiting for statefulset status.replicas updated to 0&#xA;Jun 27 10:38:26.681: INFO: Deleting statefulset rd&#xA;Jun 27 10:38:26.711: INFO: Deleting pvc: datadir-rd-0 with volume pvc-464b2723-98c6-11e9-93fd-42010a800028&#xA;Jun 27 10:38:26.749: INFO: Still waiting for pvs of statefulset to disappear:&#xA;pvc-464b2723-98c6-11e9-93fd-42010a800028: {Phase:Bound Message: Reason:}&#xA;Jun 27 10:38:36.753: INFO: Still waiting for pvs of statefulset to disappear:&#xA;pvc-464b2723-98c6-11e9-93fd-42010a800028: {Phase:Released Message: Reason:}&#xA;[AfterEach] [sig-apps] StatefulSet&#xA;  /workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:142&#xA;STEP: Collecting events from namespace &#34;e2e-tests-statefulset-btlxp&#34;.&#xA;STEP: Found 17 events.&#xA;Jun 27 10:38:46.766: INFO: At 2019-06-27 10:28:16 +0000 UTC - event for rd: {statefulset-controller } SuccessfulCreate: create Claim datadir-rd-0 Pod rd-0 in StatefulSet rd success&#xA;Jun 27 10:38:46.766: INFO: At 2019-06-27 10:28:16 +0000 UTC - event for rd: {statefulset-controller } SuccessfulCreate: create Pod rd-0 in StatefulSet rd successful&#xA;Jun 27 10:38:46.766: INFO: At 2019-06-27 10:28:16 +0000 UTC - event for rd-0: {default-scheduler } FailedScheduling: pod has unbound immediate PersistentVolumeClaims (repeated 4 times)&#xA;Jun 27 10:38:46.766: INFO: At 2019-06-27 10:28:18 +0000 UTC - event for rd-0: {cluster-autoscaler } NotTriggerScaleUp: pod didn&#39;t trigger scale-up (it wouldn&#39;t fit if a new node is added): 20 max limit reached&#xA;Jun 27 10:38:46.766: INFO: At 2019-06-27 10:28:19 +0000 UTC - event for datadir-rd-0: {persistentvolume-controller } ProvisioningSucceeded: Successfully provisioned volume pvc-464b2723-98c6-11e9-93fd-42010a800028 using kubernetes.io/gce-pd&#xA;Jun 27 10:38:46.766: INFO: At 2019-06-27 10:28:19 +0000 UTC - event for rd-0: {default-scheduler } Scheduled: Successfully assigned e2e-tests-statefulset-btlxp/rd-0 to gke-standard-cluster-1-default-pool-04796f61-dmzx&#xA;Jun 27 10:38:46.766: INFO: At 2019-06-27 10:28:24 +0000 UTC - event for rd-0: {attachdetach-controller } SuccessfulAttachVolume: AttachVolume.Attach succeeded for volume &#34;pvc-464b2723-98c6-11e9-93fd-42010a800028&#34; &#xA;Jun 27 10:38:46.766: INFO: At 2019-06-27 10:28:28 +0000 UTC - event for rd-0: {kubelet gke-standard-cluster-1-default-pool-04796f61-dmzx} Pulling: pulling image &#34;k8s.gcr.io/redis-install-3.2.0:e2e&#34;&#xA;Jun 27 10:38:46.766: INFO: At 2019-06-27 10:28:40 +0000 UTC - event for rd-0: {kubelet gke-standard-cluster-1-default-pool-04796f61-dmzx} Pulled: Successfully pulled image &#34;k8s.gcr.io/redis-install-3.2.0:e2e&#34;&#xA;Jun 27 10:38:46.766: INFO: At 2019-06-27 10:28:40 +0000 UTC - event for rd-0: {kubelet gke-standard-cluster-1-default-pool-04796f61-dmzx} Created: Created container&#xA;Jun 27 10:38:46.766: INFO: At 2019-06-27 10:28:40 +0000 UTC - event for rd-0: {kubelet gke-standard-cluster-1-default-pool-04796f61-dmzx} Pulling: pulling image &#34;debian:jessie&#34;&#xA;Jun 27 10:38:46.766: INFO: At 2019-06-27 10:28:40 +0000 UTC - event for rd-0: {kubelet gke-standard-cluster-1-default-pool-04796f61-dmzx} Started: Started container&#xA;Jun 27 10:38:46.766: INFO: At 2019-06-27 10:28:45 +0000 UTC - event for rd-0: {kubelet gke-standard-cluster-1-default-pool-04796f61-dmzx} Pulled: Successfully pulled image &#34;debian:jessie&#34;&#xA;Jun 27 10:38:46.766: INFO: At 2019-06-27 10:28:46 +0000 UTC - event for rd-0: {kubelet gke-standard-cluster-1-default-pool-04796f61-dmzx} Started: Started container&#xA;Jun 27 10:38:46.766: INFO: At 2019-06-27 10:28:46 +0000 UTC - event for rd-0: {kubelet gke-standard-cluster-1-default-pool-04796f61-dmzx} Created: Created container&#xA;Jun 27 10:38:46.766: INFO: At 2019-06-27 10:38:16 +0000 UTC - event for rd: {statefulset-controller } SuccessfulDelete: delete Pod rd-0 in StatefulSet rd successful&#xA;Jun 27 10:38:46.766: INFO: At 2019-06-27 10:38:16 +0000 UTC - event for redis: {endpoint-controller } FailedToUpdateEndpoint: Failed to update endpoint e2e-tests-statefulset-btlxp/redis: Operation cannot be fulfilled on endpoints &#34;redis&#34;: the object has been modified; please apply your changes to the latest version and try again&#xA;Jun 27 10:38:46.781: INFO: POD                                                           NODE                                               PHASE    GRACE  CONDITIONS&#xA;Jun 27 10:38:46.781: INFO: sonobuoy                                                      gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:18 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:18 +0000 UTC  }]&#xA;Jun 27 10:38:46.781: INFO: sonobuoy-e2e-job-3f201e2f061345e7                             gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:02:00 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  }]&#xA;Jun 27 10:38:46.781: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-28cmn       gke-standard-cluster-1-default-pool-04796f61-sx27  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:49 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  }]&#xA;Jun 27 10:38:46.781: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-44pmg       gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:45 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  }]&#xA;Jun 27 10:38:46.781: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-rmqrw       gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:49 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  }]&#xA;Jun 27 10:38:46.781: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-xk7gb       gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:02:00 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  }]&#xA;Jun 27 10:38:46.781: INFO: event-exporter-v0.2.4-5c57bb7478-xtjl2                        gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:12 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 10:38:46.781: INFO: fluentd-gcp-scaler-5b5bf8b99f-vkg4s                           gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:12 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 10:38:46.781: INFO: fluentd-gcp-v3.2.0-2hkh9                                      gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:35 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  }]&#xA;Jun 27 10:38:46.781: INFO: fluentd-gcp-v3.2.0-j677d                                      gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:35 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  }]&#xA;Jun 27 10:38:46.781: INFO: fluentd-gcp-v3.2.0-jb9xn                                      gke-standard-cluster-1-default-pool-04796f61-sx27  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:35 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  }]&#xA;Jun 27 10:38:46.781: INFO: fluentd-gcp-v3.2.0-k8m8z                                      gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:36 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  }]&#xA;Jun 27 10:38:46.781: INFO: heapster-v1.6.0-beta.1-5dcd447597-kkgnc                       gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:24 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:26 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:24 +0000 UTC  }]&#xA;Jun 27 10:38:46.781: INFO: kube-dns-76dbb796c5-4ndph                                     gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:22 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 10:38:46.781: INFO: kube-dns-76dbb796c5-6qg5f                                     gke-standard-cluster-1-default-pool-04796f61-sx27  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:07 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:20 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:07 +0000 UTC  }]&#xA;Jun 27 10:38:46.781: INFO: kube-dns-autoscaler-67c97c87fb-4j4kd                          gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:12 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 10:38:46.781: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-2br3  gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:06 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 10:38:46.781: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-dmzx  gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:06 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 10:38:46.781: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-rr33  gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:04 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:12 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:04 +0000 UTC  }]&#xA;Jun 27 10:38:46.781: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-sx27  gke-standard-cluster-1-default-pool-04796f61-sx27  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:06 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 10:38:46.781: INFO: l7-default-backend-7ff48cffd7-g8pnv                           gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:20 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 10:38:46.781: INFO: metrics-server-v0.2.1-fd596d746-mnb77                         gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:11 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:14 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:11 +0000 UTC  }]&#xA;Jun 27 10:38:46.781: INFO: prometheus-to-sd-28w8p                                        gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:45 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:56 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:45 +0000 UTC  }]&#xA;Jun 27 10:38:46.781: INFO: prometheus-to-sd-2qsz9                                        gke-standard-cluster-1-default-pool-04796f61-sx27  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:46 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:55 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:46 +0000 UTC  }]&#xA;Jun 27 10:38:46.781: INFO: prometheus-to-sd-529s6                                        gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:46 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:51 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:46 +0000 UTC  }]&#xA;Jun 27 10:38:46.781: INFO: prometheus-to-sd-q6mwq                                        gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:45 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:53 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:45 +0000 UTC  }]&#xA;Jun 27 10:38:46.781: INFO: &#xA;Jun 27 10:38:46.787: INFO: &#xA;Logging node info for node gke-standard-cluster-1-default-pool-04796f61-2br3&#xA;Jun 27 10:38:46.791: INFO: Node Info: &amp;Node{ObjectMeta:k8s_io_apimachinery_pkg_apis_meta_v1.ObjectMeta{Name:gke-standard-cluster-1-default-pool-04796f61-2br3,GenerateName:,Namespace:,SelfLink:/api/v1/nodes/gke-standard-cluster-1-default-pool-04796f61-2br3,UID:55ee085e-98c0-11e9-93fd-42010a800028,ResourceVersion:16365,Generation:0,CreationTimestamp:2019-06-27 09:45:45 +0000 UTC,DeletionTimestamp:&lt;nil&gt;,DeletionGracePeriodSeconds:nil,Labels:map[string]string{beta.kubernetes.io/arch: amd64,beta.kubernetes.io/fluentd-ds-ready: true,beta.kubernetes.io/instance-type: n1-standard-4,beta.kubernetes.io/os: linux,cloud.google.com/gke-nodepool: default-pool,cloud.google.com/gke-os-distribution: cos,failure-domain.beta.kubernetes.io/region: us-central1,failure-domain.beta.kubernetes.io/zone: us-central1-a,kubernetes.io/hostname: gke-standard-cluster-1-default-pool-04796f61-2br3,},Annotations:map[string]string{container.googleapis.com/instance_id: 5263861497271497046,node.alpha.kubernetes.io/ttl: 0,volumes.kubernetes.io/controller-managed-attach-detach: true,},OwnerReferences:[],Finalizers:[],ClusterName:,Initializers:nil,},Spec:NodeSpec{PodCIDR:10.8.2.0/24,DoNotUse_ExternalID:,ProviderID:gce://sinuous-tuner-235209/us-central1-a/gke-standard-cluster-1-default-pool-04796f61-2br3,Unschedulable:false,Taints:[],ConfigSource:nil,},Status:NodeStatus{Capacity:ResourceList{cpu: {{4 0} {&lt;nil&gt;} 4 DecimalSI},ephemeral-storage: {{101241290752 0} {&lt;nil&gt;}  BinarySI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{15768948736 0} {&lt;nil&gt;} 15399364Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Allocatable:ResourceList{cpu: {{3920 -3} {&lt;nil&gt;} 3920m DecimalSI},ephemeral-storage: {{47093746742 0} {&lt;nil&gt;} 47093746742 DecimalSI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{13004902400 0} {&lt;nil&gt;} 12700100Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Phase:,Conditions:[{FrequentContainerdRestart False 2019-06-27 10:38:34 +0000 UTC 2019-06-27 09:49:05 +0000 UTC FrequentContainerdRestart containerd is functioning properly} {KernelDeadlock False 2019-06-27 10:38:34 +0000 UTC 2019-06-27 09:44:02 +0000 UTC KernelHasNoDeadlock kernel has no deadlock} {ReadonlyFilesystem False 2019-06-27 10:38:34 +0000 UTC 2019-06-27 09:44:02 +0000 UTC FilesystemIsNotReadOnly Filesystem is not read-only} {CorruptDockerOverlay2 False 2019-06-27 10:38:34 +0000 UTC 2019-06-27 09:49:03 +0000 UTC CorruptDockerOverlay2 docker overlay2 is functioning properly} {FrequentUnregisterNetDevice False 2019-06-27 10:38:34 +0000 UTC 2019-06-27 09:49:03 +0000 UTC UnregisterNetDevice node is functioning properly} {FrequentKubeletRestart False 2019-06-27 10:38:34 +0000 UTC 2019-06-27 09:49:03 +0000 UTC FrequentKubeletRestart kubelet is functioning properly} {FrequentDockerRestart False 2019-06-27 10:38:34 +0000 UTC 2019-06-27 09:49:04 +0000 UTC FrequentDockerRestart docker is functioning properly} {NetworkUnavailable False 2019-06-27 09:45:46 +0000 UTC 2019-06-27 09:45:46 +0000 UTC RouteCreated NodeController create implicit route} {OutOfDisk False 2019-06-27 10:38:45 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientDisk kubelet has sufficient disk space available} {MemoryPressure False 2019-06-27 10:38:45 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientMemory kubelet has sufficient memory available} {DiskPressure False 2019-06-27 10:38:45 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasNoDiskPressure kubelet has no disk pressure} {PIDPressure False 2019-06-27 10:38:45 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientPID kubelet has sufficient PID available} {Ready True 2019-06-27 10:38:45 +0000 UTC 2019-06-27 09:46:05 +0000 UTC KubeletReady kubelet is posting ready status. AppArmor enabled}],Addresses:[{InternalIP 10.128.0.42} {ExternalIP 35.232.42.152} {Hostname gke-standard-cluster-1-default-pool-04796f61-2br3}],DaemonEndpoints:NodeDaemonEndpoints{KubeletEndpoint:DaemonEndpoint{Port:10250,},},NodeInfo:NodeSystemInfo{MachineID:4ed4f0f644ff78a293f5a14239e1dc93,SystemUUID:4ED4F0F6-44FF-78A2-93F5-A14239E1DC93,BootID:df50bfdc-3ecb-4ada-a245-3c7fd247294f,KernelVersion:4.14.119+,OSImage:Container-Optimized OS from Google,ContainerRuntimeVersion:docker://17.3.2,KubeletVersion:v1.11.10-gke.4,KubeProxyVersion:v1.11.10-gke.4,OperatingSystem:linux,Architecture:amd64,},Images:[{[gcr.io/heptio-images/sonobuoy-plugin-systemd-logs@sha256:58e077ba773ff5d7b6bba90771fad72217f0d10b913bb66bb0afb387c9552788 gcr.io/heptio-images/sonobuoy-plugin-systemd-logs:latest] 290890605} {[k8s.gcr.io/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e9eb2b k8s.gcr.io/node-problem-detector:v0.4.1] 286572743} {[gcr.io/stackdriver-agents/stackdriver-logging-agent@sha256:f8d5231b67b9c53f60068b535a11811d29d1b3efd53d2b79f2a2591ea338e4f2 gcr.io/stackdriver-agents/stackdriver-logging-agent:0.6-1.6.0-1] 223242132} {[k8s.gcr.io/fluentd-elasticsearch@sha256:b8c94527b489fb61d3d81ce5ad7f3ddbb7be71e9620a3a36e2bede2f2e487d73 k8s.gcr.io/fluentd-elasticsearch:v2.0.4] 135716379} {[nginx@sha256:079aa93463d2566b7a81cbdf856afc6d4d2a6f9100ca3bcbecf24ade92c9a7fe nginx:latest] 109258867} {[k8s.gcr.io/nginx-slim-amd64@sha256:6654db6d4028756062edac466454ee5c9cf9b20ef79e35a81e3c840031eb1e2b k8s.gcr.io/nginx-slim-amd64:0.20] 103591055} {[k8s.gcr.io/kubernetes-dashboard-amd64@sha256:dc4026c1b595435ef5527ca598e1e9c4343076926d7d62b365c44831395adbd0 k8s.gcr.io/kubernetes-dashboard-amd64:v1.8.3] 102319441} {[gcr.io/google_containers/kube-proxy:v1.11.10-gke.4 k8s.gcr.io/kube-proxy:v1.11.10-gke.4] 102279340} {[k8s.gcr.io/echoserver@sha256:cb5c1bddd1b5665e1867a7fa1b5fa843a47ee433bbb75d4293888b71def53229 k8s.gcr.io/echoserver:1.10] 95361986} {[gcr.io/heptio-images/sonobuoy@sha256:d6d530b1ede4b82e9989aa1ba7ae4cd4fac09c6f7cb6a7c4f9270fff241e72c7 gcr.io/heptio-images/sonobuoy:v0.14.3] 89896078} {[k8s.gcr.io/fluentd-gcp-scaler@sha256:a5ace7506d393c4ed65eb2cbb6312c64ab357fcea16dff76b9055bc6e498e5ff k8s.gcr.io/fluentd-gcp-scaler:0.5.1] 86637208} {[k8s.gcr.io/heapster-amd64@sha256:9fae0af136ce0cf4f88393b3670f7139ffc464692060c374d2ae748e13144521 k8s.gcr.io/heapster-amd64:v1.6.0-beta.1] 76016169} {[k8s.gcr.io/ingress-gce-glbc-amd64@sha256:31d36bbd9c44caffa135fc78cf0737266fcf25e3cf0cd1c2fcbfbc4f7309cc52 k8s.gcr.io/ingress-gce-glbc-amd64:v1.1.1] 67801919} {[k8s.gcr.io/kube-addon-manager@sha256:d53486c3a0b49ebee019932878dc44232735d5622a51dbbdcec7124199020d09 k8s.gcr.io/kube-addon-manager:v8.7] 63322109} {[k8s.gcr.io/cpvpa-amd64@sha256:cfe7b0a11c9c8e18c87b1eb34fef9a7cbb8480a8da11fc2657f78dbf4739f869 k8s.gcr.io/cpvpa-amd64:v0.6.0] 51785854} {[k8s.gcr.io/cluster-proportional-autoscaler-amd64@sha256:003f98d9f411ddfa6ff6d539196355e03ddd69fa4ed38c7ffb8fec6f729afe2d k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.1.2-r2] 49648481} {[k8s.gcr.io/ip-masq-agent-amd64@sha256:1ffda57d87901bc01324c82ceb2145fe6a0448d3f0dd9cb65aa76a867cd62103 k8s.gcr.io/ip-masq-agent-amd64:v2.1.1] 49612505} {[k8s.gcr.io/k8s-dns-kube-dns-amd64@sha256:b99fc3eee2a9f052f7eb4cc00f15eb12fc405fa41019baa2d6b79847ae7284a8 k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.10] 49549457} {[k8s.gcr.io/rescheduler@sha256:156cfbfd05a5a815206fd2eeb6cbdaf1596d71ea4b415d3a6c43071dd7b99450 k8s.gcr.io/rescheduler:v0.4.0] 48973149} {[k8s.gcr.io/event-exporter@sha256:16ca66e2b5dc7a1ce6a5aafcb21d0885828b75cdfc08135430480f7ad2364adc k8s.gcr.io/event-exporter:v0.2.4] 47261019} {[k8s.gcr.io/coredns@sha256:db2bf53126ed1c761d5a41f24a1b82a461c85f736ff6e90542e9522be4757848 k8s.gcr.io/coredns:1.1.3] 45587362} {[k8s.gcr.io/metrics-server-amd64@sha256:49a9f12f7067d11f42c803dbe61ed2c1299959ad85cb315b25ff7eef8e6b8892 k8s.gcr.io/metrics-server-amd64:v0.2.1] 42541759} {[k8s.gcr.io/prometheus-to-sd@sha256:14666989f40bb7c896c3e775a93c6873e2b791d65bc65579f58a078b7f9a764e k8s.gcr.io/prometheus-to-sd:v0.5.0] 41861013} {[k8s.gcr.io/k8s-dns-sidecar-amd64@sha256:4f1ab957f87b94a5ec1edc26fae50da2175461f00afecf68940c4aa079bd08a4 k8s.gcr.io/k8s-dns-sidecar-amd64:1.14.10] 41635309} {[k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64@sha256:bbb2a290a568125b3b996028958eb773f33b5b87a6b37bf38a28f8b62dddb3c8 k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64:1.14.10] 40372149}],VolumesInUse:[kubernetes.io/gce-pd/gke-standard-cluster-1-pvc-804259ed-98c2-11e9-93fd-42010a800028],VolumesAttached:[{kubernetes.io/gce-pd/gke-standard-cluster-1-pvc-804259ed-98c2-11e9-93fd-42010a800028 /dev/disk/by-id/google-gke-standard-cluster-1-pvc-804259ed-98c2-11e9-93fd-42010a800028}],Config:nil,},}&#xA;Jun 27 10:38:46.792: INFO: &#xA;Logging kubelet events for node gke-standard-cluster-1-default-pool-04796f61-2br3&#xA;Jun 27 10:38:46.801: INFO: &#xA;Logging pods the kubelet thinks is on node gke-standard-cluster-1-default-pool-04796f61-2br3&#xA;Jun 27 10:38:46.819: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-44pmg started at 2019-06-27 10:01:32 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 10:38:46.819: INFO: &#x9;Container sonobuoy-worker ready: true, restart count 0&#xA;Jun 27 10:38:46.819: INFO: &#x9;Container systemd-logs ready: true, restart count 0&#xA;Jun 27 10:38:46.819: INFO: heapster-v1.6.0-beta.1-5dcd447597-kkgnc started at 2019-06-27 09:46:24 +0000 UTC (0+3 container statuses recorded)&#xA;Jun 27 10:38:46.819: INFO: &#x9;Container heapster ready: true, restart count 0&#xA;Jun 27 10:38:46.819: INFO: &#x9;Container heapster-nanny ready: true, restart count 0&#xA;Jun 27 10:38:46.819: INFO: &#x9;Container prom-to-sd ready: true, restart count 0&#xA;Jun 27 10:38:46.819: INFO: prometheus-to-sd-q6mwq started at 2019-06-27 09:45:45 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 10:38:46.819: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 10:38:46.819: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-2br3 started at &lt;nil&gt; (0+0 container statuses recorded)&#xA;Jun 27 10:38:46.819: INFO: fluentd-gcp-v3.2.0-2hkh9 started at 2019-06-27 09:46:25 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 10:38:46.819: INFO: &#x9;Container fluentd-gcp ready: true, restart count 0&#xA;Jun 27 10:38:46.819: INFO: &#x9;Container prometheus-to-sd-exporter ready: true, restart count 0&#xA;Jun 27 10:38:46.819: INFO: sonobuoy started at 2019-06-27 10:01:18 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 10:38:46.819: INFO: &#x9;Container kube-sonobuoy ready: true, restart count 0&#xA;Jun 27 10:38:46.993: INFO: &#xA;Latency metrics for node gke-standard-cluster-1-default-pool-04796f61-2br3&#xA;Jun 27 10:38:46.993: INFO: &#xA;Logging node info for node gke-standard-cluster-1-default-pool-04796f61-dmzx&#xA;Jun 27 10:38:46.998: INFO: Node Info: &amp;Node{ObjectMeta:k8s_io_apimachinery_pkg_apis_meta_v1.ObjectMeta{Name:gke-standard-cluster-1-default-pool-04796f61-dmzx,GenerateName:,Namespace:,SelfLink:/api/v1/nodes/gke-standard-cluster-1-default-pool-04796f61-dmzx,UID:563a4f0e-98c0-11e9-93fd-42010a800028,ResourceVersion:16373,Generation:0,CreationTimestamp:2019-06-27 09:45:45 +0000 UTC,DeletionTimestamp:&lt;nil&gt;,DeletionGracePeriodSeconds:nil,Labels:map[string]string{beta.kubernetes.io/arch: amd64,beta.kubernetes.io/fluentd-ds-ready: true,beta.kubernetes.io/instance-type: n1-standard-4,beta.kubernetes.io/os: linux,cloud.google.com/gke-nodepool: default-pool,cloud.google.com/gke-os-distribution: cos,failure-domain.beta.kubernetes.io/region: us-central1,failure-domain.beta.kubernetes.io/zone: us-central1-a,kubernetes.io/hostname: gke-standard-cluster-1-default-pool-04796f61-dmzx,},Annotations:map[string]string{container.googleapis.com/instance_id: 8240935979917586774,node.alpha.kubernetes.io/ttl: 0,volumes.kubernetes.io/controller-managed-attach-detach: true,},OwnerReferences:[],Finalizers:[],ClusterName:,Initializers:nil,},Spec:NodeSpec{PodCIDR:10.8.4.0/24,DoNotUse_ExternalID:,ProviderID:gce://sinuous-tuner-235209/us-central1-a/gke-standard-cluster-1-default-pool-04796f61-dmzx,Unschedulable:false,Taints:[],ConfigSource:nil,},Status:NodeStatus{Capacity:ResourceList{cpu: {{4 0} {&lt;nil&gt;} 4 DecimalSI},ephemeral-storage: {{101241290752 0} {&lt;nil&gt;}  BinarySI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{15768940544 0} {&lt;nil&gt;} 15399356Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Allocatable:ResourceList{cpu: {{3920 -3} {&lt;nil&gt;} 3920m DecimalSI},ephemeral-storage: {{47093746742 0} {&lt;nil&gt;} 47093746742 DecimalSI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{13004894208 0} {&lt;nil&gt;} 12700092Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Phase:,Conditions:[{ReadonlyFilesystem False 2019-06-27 10:38:28 +0000 UTC 2019-06-27 09:44:03 +0000 UTC FilesystemIsNotReadOnly Filesystem is not read-only} {FrequentUnregisterNetDevice False 2019-06-27 10:38:28 +0000 UTC 2019-06-27 09:49:04 +0000 UTC UnregisterNetDevice node is functioning properly} {FrequentKubeletRestart False 2019-06-27 10:38:28 +0000 UTC 2019-06-27 09:49:04 +0000 UTC FrequentKubeletRestart kubelet is functioning properly} {FrequentDockerRestart False 2019-06-27 10:38:28 +0000 UTC 2019-06-27 09:49:05 +0000 UTC FrequentDockerRestart docker is functioning properly} {FrequentContainerdRestart False 2019-06-27 10:38:28 +0000 UTC 2019-06-27 09:49:06 +0000 UTC FrequentContainerdRestart containerd is functioning properly} {CorruptDockerOverlay2 False 2019-06-27 10:38:28 +0000 UTC 2019-06-27 09:49:04 +0000 UTC CorruptDockerOverlay2 docker overlay2 is functioning properly} {KernelDeadlock False 2019-06-27 10:38:28 +0000 UTC 2019-06-27 09:44:03 +0000 UTC KernelHasNoDeadlock kernel has no deadlock} {NetworkUnavailable False 2019-06-27 09:45:46 +0000 UTC 2019-06-27 09:45:46 +0000 UTC RouteCreated NodeController create implicit route} {OutOfDisk False 2019-06-27 10:38:46 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientDisk kubelet has sufficient disk space available} {MemoryPressure False 2019-06-27 10:38:46 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientMemory kubelet has sufficient memory available} {DiskPressure False 2019-06-27 10:38:46 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasNoDiskPressure kubelet has no disk pressure} {PIDPressure False 2019-06-27 10:38:46 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientPID kubelet has sufficient PID available} {Ready True 2019-06-27 10:38:46 +0000 UTC 2019-06-27 09:46:06 +0000 UTC KubeletReady kubelet is posting ready status. AppArmor enabled}],Addresses:[{InternalIP 10.128.0.45} {ExternalIP 34.67.69.128} {Hostname gke-standard-cluster-1-default-pool-04796f61-dmzx}],DaemonEndpoints:NodeDaemonEndpoints{KubeletEndpoint:DaemonEndpoint{Port:10250,},},NodeInfo:NodeSystemInfo{MachineID:1e2b8bee3c68760edea50ec32bebc9c7,SystemUUID:1E2B8BEE-3C68-760E-DEA5-0EC32BEBC9C7,BootID:cca2dcb1-4058-446f-b35a-be81be4bdd91,KernelVersion:4.14.119+,OSImage:Container-Optimized OS from Google,ContainerRuntimeVersion:docker://17.3.2,KubeletVersion:v1.11.10-gke.4,KubeProxyVersion:v1.11.10-gke.4,OperatingSystem:linux,Architecture:amd64,},Images:[{[gcr.io/heptio-images/kube-conformance@sha256:e208e87718fee7fe922ad69f740ca23e5843d05faa014ef23a37cdd017944946 gcr.io/heptio-images/kube-conformance:v1.11] 532217543} {[k8s.gcr.io/redis-install-3.2.0@sha256:84305c74214f769ac3bdb3b6ceae35b8f13dd5485a6255a31776f3f3bcb2e4f3 k8s.gcr.io/redis-install-3.2.0:e2e] 294462045} {[gcr.io/heptio-images/sonobuoy-plugin-systemd-logs@sha256:58e077ba773ff5d7b6bba90771fad72217f0d10b913bb66bb0afb387c9552788 gcr.io/heptio-images/sonobuoy-plugin-systemd-logs:latest] 290890605} {[k8s.gcr.io/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e9eb2b k8s.gcr.io/node-problem-detector:v0.4.1] 286572743} {[gcr.io/stackdriver-agents/stackdriver-logging-agent@sha256:f8d5231b67b9c53f60068b535a11811d29d1b3efd53d2b79f2a2591ea338e4f2 gcr.io/stackdriver-agents/stackdriver-logging-agent:0.6-1.6.0-1] 223242132} {[k8s.gcr.io/fluentd-elasticsearch@sha256:b8c94527b489fb61d3d81ce5ad7f3ddbb7be71e9620a3a36e2bede2f2e487d73 k8s.gcr.io/fluentd-elasticsearch:v2.0.4] 135716379} {[debian@sha256:6b95a104400bb99ad60b47a48e37d5d1eb71a3f9ec8e86854e0cf64ecc5fd0e8 debian:jessie] 129072320} {[nginx@sha256:079aa93463d2566b7a81cbdf856afc6d4d2a6f9100ca3bcbecf24ade92c9a7fe nginx:latest] 109258867} {[k8s.gcr.io/nginx-slim-amd64@sha256:6654db6d4028756062edac466454ee5c9cf9b20ef79e35a81e3c840031eb1e2b k8s.gcr.io/nginx-slim-amd64:0.20] 103591055} {[k8s.gcr.io/kubernetes-dashboard-amd64@sha256:dc4026c1b595435ef5527ca598e1e9c4343076926d7d62b365c44831395adbd0 k8s.gcr.io/kubernetes-dashboard-amd64:v1.8.3] 102319441} {[gcr.io/google_containers/kube-proxy:v1.11.10-gke.4 k8s.gcr.io/kube-proxy:v1.11.10-gke.4] 102279340} {[k8s.gcr.io/echoserver@sha256:cb5c1bddd1b5665e1867a7fa1b5fa843a47ee433bbb75d4293888b71def53229 k8s.gcr.io/echoserver:1.10] 95361986} {[gcr.io/heptio-images/sonobuoy@sha256:d6d530b1ede4b82e9989aa1ba7ae4cd4fac09c6f7cb6a7c4f9270fff241e72c7 gcr.io/heptio-images/sonobuoy:v0.14.3] 89896078} {[k8s.gcr.io/fluentd-gcp-scaler@sha256:a5ace7506d393c4ed65eb2cbb6312c64ab357fcea16dff76b9055bc6e498e5ff k8s.gcr.io/fluentd-gcp-scaler:0.5.1] 86637208} {[k8s.gcr.io/heapster-amd64@sha256:9fae0af136ce0cf4f88393b3670f7139ffc464692060c374d2ae748e13144521 k8s.gcr.io/heapster-amd64:v1.6.0-beta.1] 76016169} {[k8s.gcr.io/ingress-gce-glbc-amd64@sha256:31d36bbd9c44caffa135fc78cf0737266fcf25e3cf0cd1c2fcbfbc4f7309cc52 k8s.gcr.io/ingress-gce-glbc-amd64:v1.1.1] 67801919} {[k8s.gcr.io/kube-addon-manager@sha256:d53486c3a0b49ebee019932878dc44232735d5622a51dbbdcec7124199020d09 k8s.gcr.io/kube-addon-manager:v8.7] 63322109} {[k8s.gcr.io/cpvpa-amd64@sha256:cfe7b0a11c9c8e18c87b1eb34fef9a7cbb8480a8da11fc2657f78dbf4739f869 k8s.gcr.io/cpvpa-amd64:v0.6.0] 51785854} {[k8s.gcr.io/cluster-proportional-autoscaler-amd64@sha256:003f98d9f411ddfa6ff6d539196355e03ddd69fa4ed38c7ffb8fec6f729afe2d k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.1.2-r2] 49648481} {[k8s.gcr.io/ip-masq-agent-amd64@sha256:1ffda57d87901bc01324c82ceb2145fe6a0448d3f0dd9cb65aa76a867cd62103 k8s.gcr.io/ip-masq-agent-amd64:v2.1.1] 49612505} {[k8s.gcr.io/k8s-dns-kube-dns-amd64@sha256:b99fc3eee2a9f052f7eb4cc00f15eb12fc405fa41019baa2d6b79847ae7284a8 k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.10] 49549457} {[k8s.gcr.io/rescheduler@sha256:156cfbfd05a5a815206fd2eeb6cbdaf1596d71ea4b415d3a6c43071dd7b99450 k8s.gcr.io/rescheduler:v0.4.0] 48973149} {[k8s.gcr.io/event-exporter@sha256:16ca66e2b5dc7a1ce6a5aafcb21d0885828b75cdfc08135430480f7ad2364adc k8s.gcr.io/event-exporter:v0.2.4] 47261019} {[k8s.gcr.io/coredns@sha256:db2bf53126ed1c761d5a41f24a1b82a461c85f736ff6e90542e9522be4757848 k8s.gcr.io/coredns:1.1.3] 45587362} {[k8s.gcr.io/metrics-server-amd64@sha256:49a9f12f7067d11f42c803dbe61ed2c1299959ad85cb315b25ff7eef8e6b8892 k8s.gcr.io/metrics-server-amd64:v0.2.1] 42541759}],VolumesInUse:[],VolumesAttached:[],Config:nil,},}&#xA;Jun 27 10:38:46.998: INFO: &#xA;Logging kubelet events for node gke-standard-cluster-1-default-pool-04796f61-dmzx&#xA;Jun 27 10:38:47.007: INFO: &#xA;Logging pods the kubelet thinks is on node gke-standard-cluster-1-default-pool-04796f61-dmzx&#xA;Jun 27 10:38:47.019: INFO: metrics-server-v0.2.1-fd596d746-mnb77 started at 2019-06-27 09:46:11 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 10:38:47.019: INFO: &#x9;Container metrics-server ready: true, restart count 0&#xA;Jun 27 10:38:47.019: INFO: &#x9;Container metrics-server-nanny ready: true, restart count 0&#xA;Jun 27 10:38:47.019: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-dmzx started at &lt;nil&gt; (0+0 container statuses recorded)&#xA;Jun 27 10:38:47.019: INFO: prometheus-to-sd-529s6 started at 2019-06-27 09:45:46 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 10:38:47.019: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 10:38:47.019: INFO: fluentd-gcp-v3.2.0-j677d started at 2019-06-27 09:46:25 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 10:38:47.019: INFO: &#x9;Container fluentd-gcp ready: true, restart count 0&#xA;Jun 27 10:38:47.019: INFO: &#x9;Container prometheus-to-sd-exporter ready: true, restart count 0&#xA;Jun 27 10:38:47.019: INFO: sonobuoy-e2e-job-3f201e2f061345e7 started at 2019-06-27 10:01:32 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 10:38:47.019: INFO: &#x9;Container e2e ready: true, restart count 0&#xA;Jun 27 10:38:47.019: INFO: &#x9;Container sonobuoy-worker ready: true, restart count 0&#xA;Jun 27 10:38:47.019: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-xk7gb started at 2019-06-27 10:01:32 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 10:38:47.019: INFO: &#x9;Container sonobuoy-worker ready: true, restart count 0&#xA;Jun 27 10:38:47.019: INFO: &#x9;Container systemd-logs ready: true, restart count 0&#xA;Jun 27 10:38:47.054: INFO: &#xA;Latency metrics for node gke-standard-cluster-1-default-pool-04796f61-dmzx&#xA;Jun 27 10:38:47.054: INFO: &#xA;Logging node info for node gke-standard-cluster-1-default-pool-04796f61-rr33&#xA;Jun 27 10:38:47.065: INFO: Node Info: &amp;Node{ObjectMeta:k8s_io_apimachinery_pkg_apis_meta_v1.ObjectMeta{Name:gke-standard-cluster-1-default-pool-04796f61-rr33,GenerateName:,Namespace:,SelfLink:/api/v1/nodes/gke-standard-cluster-1-default-pool-04796f61-rr33,UID:55b363e1-98c0-11e9-93fd-42010a800028,ResourceVersion:16362,Generation:0,CreationTimestamp:2019-06-27 09:45:45 +0000 UTC,DeletionTimestamp:&lt;nil&gt;,DeletionGracePeriodSeconds:nil,Labels:map[string]string{beta.kubernetes.io/arch: amd64,beta.kubernetes.io/fluentd-ds-ready: true,beta.kubernetes.io/instance-type: n1-standard-4,beta.kubernetes.io/os: linux,cloud.google.com/gke-nodepool: default-pool,cloud.google.com/gke-os-distribution: cos,failure-domain.beta.kubernetes.io/region: us-central1,failure-domain.beta.kubernetes.io/zone: us-central1-a,kubernetes.io/hostname: gke-standard-cluster-1-default-pool-04796f61-rr33,},Annotations:map[string]string{container.googleapis.com/instance_id: 4128615952046174550,node.alpha.kubernetes.io/ttl: 0,volumes.kubernetes.io/controller-managed-attach-detach: true,},OwnerReferences:[],Finalizers:[],ClusterName:,Initializers:nil,},Spec:NodeSpec{PodCIDR:10.8.1.0/24,DoNotUse_ExternalID:,ProviderID:gce://sinuous-tuner-235209/us-central1-a/gke-standard-cluster-1-default-pool-04796f61-rr33,Unschedulable:false,Taints:[],ConfigSource:nil,},Status:NodeStatus{Capacity:ResourceList{cpu: {{4 0} {&lt;nil&gt;} 4 DecimalSI},ephemeral-storage: {{101241290752 0} {&lt;nil&gt;}  BinarySI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{15768948736 0} {&lt;nil&gt;} 15399364Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Allocatable:ResourceList{cpu: {{3920 -3} {&lt;nil&gt;} 3920m DecimalSI},ephemeral-storage: {{47093746742 0} {&lt;nil&gt;} 47093746742 DecimalSI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{13004902400 0} {&lt;nil&gt;} 12700100Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Phase:,Conditions:[{FrequentKubeletRestart False 2019-06-27 10:38:36 +0000 UTC 2019-06-27 09:49:03 +0000 UTC FrequentKubeletRestart kubelet is functioning properly} {FrequentDockerRestart False 2019-06-27 10:38:36 +0000 UTC 2019-06-27 09:49:04 +0000 UTC FrequentDockerRestart docker is functioning properly} {FrequentContainerdRestart False 2019-06-27 10:38:36 +0000 UTC 2019-06-27 09:49:05 +0000 UTC FrequentContainerdRestart containerd is functioning properly} {CorruptDockerOverlay2 False 2019-06-27 10:38:36 +0000 UTC 2019-06-27 09:49:03 +0000 UTC CorruptDockerOverlay2 docker overlay2 is functioning properly} {FrequentUnregisterNetDevice False 2019-06-27 10:38:36 +0000 UTC 2019-06-27 09:49:03 +0000 UTC UnregisterNetDevice node is functioning properly} {KernelDeadlock False 2019-06-27 10:38:36 +0000 UTC 2019-06-27 09:44:02 +0000 UTC KernelHasNoDeadlock kernel has no deadlock} {ReadonlyFilesystem False 2019-06-27 10:38:36 +0000 UTC 2019-06-27 09:44:02 +0000 UTC FilesystemIsNotReadOnly Filesystem is not read-only} {NetworkUnavailable False 2019-06-27 09:45:45 +0000 UTC 2019-06-27 09:45:45 +0000 UTC RouteCreated NodeController create implicit route} {OutOfDisk False 2019-06-27 10:38:44 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientDisk kubelet has sufficient disk space available} {MemoryPressure False 2019-06-27 10:38:44 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientMemory kubelet has sufficient memory available} {DiskPressure False 2019-06-27 10:38:44 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasNoDiskPressure kubelet has no disk pressure} {PIDPressure False 2019-06-27 10:38:44 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientPID kubelet has sufficient PID available} {Ready True 2019-06-27 10:38:44 +0000 UTC 2019-06-27 09:46:05 +0000 UTC KubeletReady kubelet is posting ready status. AppArmor enabled}],Addresses:[{InternalIP 10.128.0.44} {ExternalIP 35.226.22.222} {Hostname gke-standard-cluster-1-default-pool-04796f61-rr33}],DaemonEndpoints:NodeDaemonEndpoints{KubeletEndpoint:DaemonEndpoint{Port:10250,},},NodeInfo:NodeSystemInfo{MachineID:46f905cfd94d81d48ea29f40cb3028b5,SystemUUID:46F905CF-D94D-81D4-8EA2-9F40CB3028B5,BootID:1a132385-80e1-4ef8-8613-100779f1bf54,KernelVersion:4.14.119+,OSImage:Container-Optimized OS from Google,ContainerRuntimeVersion:docker://17.3.2,KubeletVersion:v1.11.10-gke.4,KubeProxyVersion:v1.11.10-gke.4,OperatingSystem:linux,Architecture:amd64,},Images:[{[gcr.io/heptio-images/sonobuoy-plugin-systemd-logs@sha256:58e077ba773ff5d7b6bba90771fad72217f0d10b913bb66bb0afb387c9552788 gcr.io/heptio-images/sonobuoy-plugin-systemd-logs:latest] 290890605} {[k8s.gcr.io/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e9eb2b k8s.gcr.io/node-problem-detector:v0.4.1] 286572743} {[gcr.io/stackdriver-agents/stackdriver-logging-agent@sha256:f8d5231b67b9c53f60068b535a11811d29d1b3efd53d2b79f2a2591ea338e4f2 gcr.io/stackdriver-agents/stackdriver-logging-agent:0.6-1.6.0-1] 223242132} {[k8s.gcr.io/fluentd-elasticsearch@sha256:b8c94527b489fb61d3d81ce5ad7f3ddbb7be71e9620a3a36e2bede2f2e487d73 k8s.gcr.io/fluentd-elasticsearch:v2.0.4] 135716379} {[k8s.gcr.io/nginx-slim-amd64@sha256:6654db6d4028756062edac466454ee5c9cf9b20ef79e35a81e3c840031eb1e2b k8s.gcr.io/nginx-slim-amd64:0.20] 103591055} {[k8s.gcr.io/kubernetes-dashboard-amd64@sha256:dc4026c1b595435ef5527ca598e1e9c4343076926d7d62b365c44831395adbd0 k8s.gcr.io/kubernetes-dashboard-amd64:v1.8.3] 102319441} {[gcr.io/google_containers/kube-proxy:v1.11.10-gke.4 k8s.gcr.io/kube-proxy:v1.11.10-gke.4] 102279340} {[k8s.gcr.io/echoserver@sha256:cb5c1bddd1b5665e1867a7fa1b5fa843a47ee433bbb75d4293888b71def53229 k8s.gcr.io/echoserver:1.10] 95361986} {[gcr.io/heptio-images/sonobuoy@sha256:d6d530b1ede4b82e9989aa1ba7ae4cd4fac09c6f7cb6a7c4f9270fff241e72c7 gcr.io/heptio-images/sonobuoy:v0.14.3] 89896078} {[k8s.gcr.io/fluentd-gcp-scaler@sha256:a5ace7506d393c4ed65eb2cbb6312c64ab357fcea16dff76b9055bc6e498e5ff k8s.gcr.io/fluentd-gcp-scaler:0.5.1] 86637208} {[k8s.gcr.io/heapster-amd64@sha256:9fae0af136ce0cf4f88393b3670f7139ffc464692060c374d2ae748e13144521 k8s.gcr.io/heapster-amd64:v1.6.0-beta.1] 76016169} {[k8s.gcr.io/ingress-gce-glbc-amd64@sha256:31d36bbd9c44caffa135fc78cf0737266fcf25e3cf0cd1c2fcbfbc4f7309cc52 k8s.gcr.io/ingress-gce-glbc-amd64:v1.1.1] 67801919} {[k8s.gcr.io/kube-addon-manager@sha256:d53486c3a0b49ebee019932878dc44232735d5622a51dbbdcec7124199020d09 k8s.gcr.io/kube-addon-manager:v8.7] 63322109} {[k8s.gcr.io/cpvpa-amd64@sha256:cfe7b0a11c9c8e18c87b1eb34fef9a7cbb8480a8da11fc2657f78dbf4739f869 k8s.gcr.io/cpvpa-amd64:v0.6.0] 51785854} {[k8s.gcr.io/k8s-dns-kube-dns-amd64@sha256:618a82fa66cf0c75e4753369a6999032372be7308866fc9afb381789b1e5ad52 k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.13] 51157394} {[k8s.gcr.io/cluster-proportional-autoscaler-amd64@sha256:003f98d9f411ddfa6ff6d539196355e03ddd69fa4ed38c7ffb8fec6f729afe2d k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.1.2-r2] 49648481} {[k8s.gcr.io/ip-masq-agent-amd64@sha256:1ffda57d87901bc01324c82ceb2145fe6a0448d3f0dd9cb65aa76a867cd62103 k8s.gcr.io/ip-masq-agent-amd64:v2.1.1] 49612505} {[k8s.gcr.io/k8s-dns-kube-dns-amd64@sha256:b99fc3eee2a9f052f7eb4cc00f15eb12fc405fa41019baa2d6b79847ae7284a8 k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.10] 49549457} {[k8s.gcr.io/rescheduler@sha256:156cfbfd05a5a815206fd2eeb6cbdaf1596d71ea4b415d3a6c43071dd7b99450 k8s.gcr.io/rescheduler:v0.4.0] 48973149} {[k8s.gcr.io/event-exporter@sha256:16ca66e2b5dc7a1ce6a5aafcb21d0885828b75cdfc08135430480f7ad2364adc k8s.gcr.io/event-exporter:v0.2.4] 47261019} {[k8s.gcr.io/coredns@sha256:db2bf53126ed1c761d5a41f24a1b82a461c85f736ff6e90542e9522be4757848 k8s.gcr.io/coredns:1.1.3] 45587362} {[k8s.gcr.io/k8s-dns-sidecar-amd64@sha256:cedc8fe2098dffc26d17f64061296b7aa54258a31513b6c52df271a98bb522b3 k8s.gcr.io/k8s-dns-sidecar-amd64:1.14.13] 42852039} {[k8s.gcr.io/metrics-server-amd64@sha256:49a9f12f7067d11f42c803dbe61ed2c1299959ad85cb315b25ff7eef8e6b8892 k8s.gcr.io/metrics-server-amd64:v0.2.1] 42541759} {[k8s.gcr.io/prometheus-to-sd@sha256:aca8ef83a7fae83f1f8583e978dd4d1ff655b9f2ca0a76bda5edce6d8965bdf2 k8s.gcr.io/prometheus-to-sd:v0.4.2] 41861013} {[k8s.gcr.io/prometheus-to-sd@sha256:14666989f40bb7c896c3e775a93c6873e2b791d65bc65579f58a078b7f9a764e k8s.gcr.io/prometheus-to-sd:v0.5.0] 41861013}],VolumesInUse:[],VolumesAttached:[],Config:nil,},}&#xA;Jun 27 10:38:47.066: INFO: &#xA;Logging kubelet events for node gke-standard-cluster-1-default-pool-04796f61-rr33&#xA;Jun 27 10:38:47.080: INFO: &#xA;Logging pods the kubelet thinks is on node gke-standard-cluster-1-default-pool-04796f61-rr33&#xA;Jun 27 10:38:47.103: INFO: prometheus-to-sd-28w8p started at 2019-06-27 09:45:45 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 10:38:47.103: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 10:38:47.103: INFO: kube-dns-autoscaler-67c97c87fb-4j4kd started at 2019-06-27 09:46:05 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 10:38:47.103: INFO: &#x9;Container autoscaler ready: true, restart count 0&#xA;Jun 27 10:38:47.103: INFO: kube-dns-76dbb796c5-4ndph started at 2019-06-27 09:46:05 +0000 UTC (0+4 container statuses recorded)&#xA;Jun 27 10:38:47.103: INFO: &#x9;Container dnsmasq ready: true, restart count 0&#xA;Jun 27 10:38:47.103: INFO: &#x9;Container kubedns ready: true, restart count 0&#xA;Jun 27 10:38:47.103: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 10:38:47.103: INFO: &#x9;Container sidecar ready: true, restart count 0&#xA;Jun 27 10:38:47.103: INFO: fluentd-gcp-scaler-5b5bf8b99f-vkg4s started at 2019-06-27 09:46:05 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 10:38:47.103: INFO: &#x9;Container fluentd-gcp-scaler ready: true, restart count 0&#xA;Jun 27 10:38:47.103: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-rr33 started at &lt;nil&gt; (0+0 container statuses recorded)&#xA;Jun 27 10:38:47.103: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-rmqrw started at 2019-06-27 10:01:32 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 10:38:47.103: INFO: &#x9;Container sonobuoy-worker ready: true, restart count 0&#xA;Jun 27 10:38:47.103: INFO: &#x9;Container systemd-logs ready: true, restart count 0&#xA;Jun 27 10:38:47.103: INFO: event-exporter-v0.2.4-5c57bb7478-xtjl2 started at 2019-06-27 09:46:05 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 10:38:47.103: INFO: &#x9;Container event-exporter ready: true, restart count 0&#xA;Jun 27 10:38:47.103: INFO: &#x9;Container prometheus-to-sd-exporter ready: true, restart count 0&#xA;Jun 27 10:38:47.103: INFO: l7-default-backend-7ff48cffd7-g8pnv started at 2019-06-27 09:46:05 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 10:38:47.103: INFO: &#x9;Container default-http-backend ready: true, restart count 0&#xA;Jun 27 10:38:47.103: INFO: fluentd-gcp-v3.2.0-k8m8z started at 2019-06-27 09:46:25 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 10:38:47.103: INFO: &#x9;Container fluentd-gcp ready: true, restart count 0&#xA;Jun 27 10:38:47.103: INFO: &#x9;Container prometheus-to-sd-exporter ready: true, restart count 0&#xA;Jun 27 10:38:47.134: INFO: &#xA;Latency metrics for node gke-standard-cluster-1-default-pool-04796f61-rr33&#xA;Jun 27 10:38:47.134: INFO: &#xA;Logging node info for node gke-standard-cluster-1-default-pool-04796f61-sx27&#xA;Jun 27 10:38:47.141: INFO: Node Info: &amp;Node{ObjectMeta:k8s_io_apimachinery_pkg_apis_meta_v1.ObjectMeta{Name:gke-standard-cluster-1-default-pool-04796f61-sx27,GenerateName:,Namespace:,SelfLink:/api/v1/nodes/gke-standard-cluster-1-default-pool-04796f61-sx27,UID:560b3037-98c0-11e9-93fd-42010a800028,ResourceVersion:16371,Generation:0,CreationTimestamp:2019-06-27 09:45:45 +0000 UTC,DeletionTimestamp:&lt;nil&gt;,DeletionGracePeriodSeconds:nil,Labels:map[string]string{beta.kubernetes.io/arch: amd64,beta.kubernetes.io/fluentd-ds-ready: true,beta.kubernetes.io/instance-type: n1-standard-4,beta.kubernetes.io/os: linux,cloud.google.com/gke-nodepool: default-pool,cloud.google.com/gke-os-distribution: cos,failure-domain.beta.kubernetes.io/region: us-central1,failure-domain.beta.kubernetes.io/zone: us-central1-a,kubernetes.io/hostname: gke-standard-cluster-1-default-pool-04796f61-sx27,},Annotations:map[string]string{container.googleapis.com/instance_id: 7591417305628225878,node.alpha.kubernetes.io/ttl: 0,volumes.kubernetes.io/controller-managed-attach-detach: true,},OwnerReferences:[],Finalizers:[],ClusterName:,Initializers:nil,},Spec:NodeSpec{PodCIDR:10.8.0.0/24,DoNotUse_ExternalID:,ProviderID:gce://sinuous-tuner-235209/us-central1-a/gke-standard-cluster-1-default-pool-04796f61-sx27,Unschedulable:false,Taints:[],ConfigSource:nil,},Status:NodeStatus{Capacity:ResourceList{cpu: {{4 0} {&lt;nil&gt;} 4 DecimalSI},ephemeral-storage: {{101241290752 0} {&lt;nil&gt;}  BinarySI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{15768948736 0} {&lt;nil&gt;} 15399364Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Allocatable:ResourceList{cpu: {{3920 -3} {&lt;nil&gt;} 3920m DecimalSI},ephemeral-storage: {{47093746742 0} {&lt;nil&gt;} 47093746742 DecimalSI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{13004902400 0} {&lt;nil&gt;} 12700100Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Phase:,Conditions:[{FrequentContainerdRestart False 2019-06-27 10:38:31 +0000 UTC 2019-06-27 09:49:05 +0000 UTC FrequentContainerdRestart containerd is functioning properly} {KernelDeadlock False 2019-06-27 10:38:31 +0000 UTC 2019-06-27 09:44:02 +0000 UTC KernelHasNoDeadlock kernel has no deadlock} {ReadonlyFilesystem False 2019-06-27 10:38:31 +0000 UTC 2019-06-27 09:44:02 +0000 UTC FilesystemIsNotReadOnly Filesystem is not read-only} {CorruptDockerOverlay2 False 2019-06-27 10:38:31 +0000 UTC 2019-06-27 09:49:03 +0000 UTC CorruptDockerOverlay2 docker overlay2 is functioning properly} {FrequentUnregisterNetDevice False 2019-06-27 10:38:31 +0000 UTC 2019-06-27 09:49:03 +0000 UTC UnregisterNetDevice node is functioning properly} {FrequentKubeletRestart False 2019-06-27 10:38:31 +0000 UTC 2019-06-27 09:49:03 +0000 UTC FrequentKubeletRestart kubelet is functioning properly} {FrequentDockerRestart False 2019-06-27 10:38:31 +0000 UTC 2019-06-27 09:49:04 +0000 UTC FrequentDockerRestart docker is functioning properly} {NetworkUnavailable False 2019-06-27 09:45:46 +0000 UTC 2019-06-27 09:45:46 +0000 UTC RouteCreated NodeController create implicit route} {OutOfDisk False 2019-06-27 10:38:46 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientDisk kubelet has sufficient disk space available} {MemoryPressure False 2019-06-27 10:38:46 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientMemory kubelet has sufficient memory available} {DiskPressure False 2019-06-27 10:38:46 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasNoDiskPressure kubelet has no disk pressure} {PIDPressure False 2019-06-27 10:38:46 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientPID kubelet has sufficient PID available} {Ready True 2019-06-27 10:38:46 +0000 UTC 2019-06-27 09:46:06 +0000 UTC KubeletReady kubelet is posting ready status. AppArmor enabled}],Addresses:[{InternalIP 10.128.0.41} {ExternalIP 34.67.223.57} {Hostname gke-standard-cluster-1-default-pool-04796f61-sx27}],DaemonEndpoints:NodeDaemonEndpoints{KubeletEndpoint:DaemonEndpoint{Port:10250,},},NodeInfo:NodeSystemInfo{MachineID:ae4216d32aefe90029e9232dc77c1eda,SystemUUID:AE4216D3-2AEF-E900-29E9-232DC77C1EDA,BootID:75bdcdda-ed72-4df2-bb2c-68fbb20cc027,KernelVersion:4.14.119+,OSImage:Container-Optimized OS from Google,ContainerRuntimeVersion:docker://17.3.2,KubeletVersion:v1.11.10-gke.4,KubeProxyVersion:v1.11.10-gke.4,OperatingSystem:linux,Architecture:amd64,},Images:[{[gcr.io/heptio-images/sonobuoy-plugin-systemd-logs@sha256:58e077ba773ff5d7b6bba90771fad72217f0d10b913bb66bb0afb387c9552788 gcr.io/heptio-images/sonobuoy-plugin-systemd-logs:latest] 290890605} {[k8s.gcr.io/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e9eb2b k8s.gcr.io/node-problem-detector:v0.4.1] 286572743} {[gcr.io/stackdriver-agents/stackdriver-logging-agent@sha256:f8d5231b67b9c53f60068b535a11811d29d1b3efd53d2b79f2a2591ea338e4f2 gcr.io/stackdriver-agents/stackdriver-logging-agent:0.6-1.6.0-1] 223242132} {[k8s.gcr.io/fluentd-elasticsearch@sha256:b8c94527b489fb61d3d81ce5ad7f3ddbb7be71e9620a3a36e2bede2f2e487d73 k8s.gcr.io/fluentd-elasticsearch:v2.0.4] 135716379} {[k8s.gcr.io/nginx-slim-amd64@sha256:6654db6d4028756062edac466454ee5c9cf9b20ef79e35a81e3c840031eb1e2b k8s.gcr.io/nginx-slim-amd64:0.20] 103591055} {[k8s.gcr.io/kubernetes-dashboard-amd64@sha256:dc4026c1b595435ef5527ca598e1e9c4343076926d7d62b365c44831395adbd0 k8s.gcr.io/kubernetes-dashboard-amd64:v1.8.3] 102319441} {[gcr.io/google_containers/kube-proxy:v1.11.10-gke.4 k8s.gcr.io/kube-proxy:v1.11.10-gke.4] 102279340} {[k8s.gcr.io/echoserver@sha256:cb5c1bddd1b5665e1867a7fa1b5fa843a47ee433bbb75d4293888b71def53229 k8s.gcr.io/echoserver:1.10] 95361986} {[gcr.io/heptio-images/sonobuoy@sha256:d6d530b1ede4b82e9989aa1ba7ae4cd4fac09c6f7cb6a7c4f9270fff241e72c7 gcr.io/heptio-images/sonobuoy:v0.14.3] 89896078} {[k8s.gcr.io/fluentd-gcp-scaler@sha256:a5ace7506d393c4ed65eb2cbb6312c64ab357fcea16dff76b9055bc6e498e5ff k8s.gcr.io/fluentd-gcp-scaler:0.5.1] 86637208} {[k8s.gcr.io/heapster-amd64@sha256:9fae0af136ce0cf4f88393b3670f7139ffc464692060c374d2ae748e13144521 k8s.gcr.io/heapster-amd64:v1.6.0-beta.1] 76016169} {[k8s.gcr.io/ingress-gce-glbc-amd64@sha256:31d36bbd9c44caffa135fc78cf0737266fcf25e3cf0cd1c2fcbfbc4f7309cc52 k8s.gcr.io/ingress-gce-glbc-amd64:v1.1.1] 67801919} {[k8s.gcr.io/kube-addon-manager@sha256:d53486c3a0b49ebee019932878dc44232735d5622a51dbbdcec7124199020d09 k8s.gcr.io/kube-addon-manager:v8.7] 63322109} {[k8s.gcr.io/cpvpa-amd64@sha256:cfe7b0a11c9c8e18c87b1eb34fef9a7cbb8480a8da11fc2657f78dbf4739f869 k8s.gcr.io/cpvpa-amd64:v0.6.0] 51785854} {[k8s.gcr.io/k8s-dns-kube-dns-amd64@sha256:618a82fa66cf0c75e4753369a6999032372be7308866fc9afb381789b1e5ad52 k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.13] 51157394} {[k8s.gcr.io/cluster-proportional-autoscaler-amd64@sha256:003f98d9f411ddfa6ff6d539196355e03ddd69fa4ed38c7ffb8fec6f729afe2d k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.1.2-r2] 49648481} {[k8s.gcr.io/ip-masq-agent-amd64@sha256:1ffda57d87901bc01324c82ceb2145fe6a0448d3f0dd9cb65aa76a867cd62103 k8s.gcr.io/ip-masq-agent-amd64:v2.1.1] 49612505} {[k8s.gcr.io/k8s-dns-kube-dns-amd64@sha256:b99fc3eee2a9f052f7eb4cc00f15eb12fc405fa41019baa2d6b79847ae7284a8 k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.10] 49549457} {[k8s.gcr.io/rescheduler@sha256:156cfbfd05a5a815206fd2eeb6cbdaf1596d71ea4b415d3a6c43071dd7b99450 k8s.gcr.io/rescheduler:v0.4.0] 48973149} {[k8s.gcr.io/event-exporter@sha256:16ca66e2b5dc7a1ce6a5aafcb21d0885828b75cdfc08135430480f7ad2364adc k8s.gcr.io/event-exporter:v0.2.4] 47261019} {[k8s.gcr.io/coredns@sha256:db2bf53126ed1c761d5a41f24a1b82a461c85f736ff6e90542e9522be4757848 k8s.gcr.io/coredns:1.1.3] 45587362} {[k8s.gcr.io/k8s-dns-sidecar-amd64@sha256:cedc8fe2098dffc26d17f64061296b7aa54258a31513b6c52df271a98bb522b3 k8s.gcr.io/k8s-dns-sidecar-amd64:1.14.13] 42852039} {[k8s.gcr.io/metrics-server-amd64@sha256:49a9f12f7067d11f42c803dbe61ed2c1299959ad85cb315b25ff7eef8e6b8892 k8s.gcr.io/metrics-server-amd64:v0.2.1] 42541759} {[k8s.gcr.io/prometheus-to-sd@sha256:aca8ef83a7fae83f1f8583e978dd4d1ff655b9f2ca0a76bda5edce6d8965bdf2 k8s.gcr.io/prometheus-to-sd:v0.4.2] 41861013} {[k8s.gcr.io/prometheus-to-sd@sha256:14666989f40bb7c896c3e775a93c6873e2b791d65bc65579f58a078b7f9a764e k8s.gcr.io/prometheus-to-sd:v0.5.0] 41861013}],VolumesInUse:[],VolumesAttached:[],Config:nil,},}&#xA;Jun 27 10:38:47.141: INFO: &#xA;Logging kubelet events for node gke-standard-cluster-1-default-pool-04796f61-sx27&#xA;Jun 27 10:38:47.160: INFO: &#xA;Logging pods the kubelet thinks is on node gke-standard-cluster-1-default-pool-04796f61-sx27&#xA;Jun 27 10:38:47.185: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-sx27 started at &lt;nil&gt; (0+0 container statuses recorded)&#xA;Jun 27 10:38:47.185: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-28cmn started at 2019-06-27 10:01:32 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 10:38:47.185: INFO: &#x9;Container sonobuoy-worker ready: true, restart count 0&#xA;Jun 27 10:38:47.185: INFO: &#x9;Container systemd-logs ready: true, restart count 0&#xA;Jun 27 10:38:47.185: INFO: prometheus-to-sd-2qsz9 started at 2019-06-27 09:45:46 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 10:38:47.185: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 10:38:47.185: INFO: fluentd-gcp-v3.2.0-jb9xn started at 2019-06-27 09:46:25 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 10:38:47.185: INFO: &#x9;Container fluentd-gcp ready: true, restart count 0&#xA;Jun 27 10:38:47.185: INFO: &#x9;Container prometheus-to-sd-exporter ready: true, restart count 0&#xA;Jun 27 10:38:47.185: INFO: kube-dns-76dbb796c5-6qg5f started at 2019-06-27 09:46:07 +0000 UTC (0+4 container statuses recorded)&#xA;Jun 27 10:38:47.185: INFO: &#x9;Container dnsmasq ready: true, restart count 0&#xA;Jun 27 10:38:47.185: INFO: &#x9;Container kubedns ready: true, restart count 0&#xA;Jun 27 10:38:47.185: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 10:38:47.185: INFO: &#x9;Container sidecar ready: true, restart count 0&#xA;Jun 27 10:38:47.248: INFO: &#xA;Latency metrics for node gke-standard-cluster-1-default-pool-04796f61-sx27&#xA;STEP: Dumping a list of prepulled images on each node to file /tmp/results/image-puller.txt&#xA;Jun 27 10:38:47.255: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready&#xA;STEP: Destroying namespace &#34;e2e-tests-statefulset-btlxp&#34; for this suite.&#xA;Jun 27 10:38:53.290: INFO: Waiting up to 30s for server preferred namespaced resources to be successfully discovered&#xA;Jun 27 10:38:53.460: INFO: namespace: e2e-tests-statefulset-btlxp, resource: bindings, ignored listing per whitelist&#xA;Jun 27 10:38:53.463: INFO: namespace e2e-tests-statefulset-btlxp deletion completed in 6.19887654s&#xA;</system-out>
      </testcase>
      <testcase name="[sig-storage] Projected should project all components that make up the projection API [Projection][NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] Network Partition [Disruptive] [Slow] [k8s.io] [Job] should create new pods when node is partitioned" classname="Kubernetes e2e suite" time="6.865737485">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Probing container should have monotonically increasing restart count [Slow][NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] Job should exceed active deadline" classname="Kubernetes e2e suite" time="46.528624526"></testcase>
      <testcase name="[sig-storage] [Serial] Volume metrics should create prometheus metrics for volume provisioning and attach/detach" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]" classname="Kubernetes e2e suite" time="33.63942161"></testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] should be able to scale down when rescheduling a pod is required and pdb allows for it[Feature:ClusterSizeAutoscalingScaleDown]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Downward API should provide container&#39;s limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Kubectl label should update the label on a resource  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volumes Cinder [Feature:Volumes] should be mountable" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [sig-node] AppArmor load AppArmor profiles can disable an AppArmor profile, using unconfined" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] EmptyDir volumes should support (root,0666,default) [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] ESIPP [Slow] [DisabledForLargeClusters] should work for type=LoadBalancer" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] Should not scale GPU pool up if pod does not require GPUs [GpuType:nvidia-tesla-p100] [Feature:ClusterSizeAutoscalingGpu]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-auth] [Feature:NodeAuthorizer] Getting a secret for a workload the node has access to should succeed" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volumes PD should be mountable with ext4" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cluster-lifecycle] ingress Upgrade [Feature:IngressUpgrade] ingress upgrade should maintain a functioning ingress" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: block] [Feature:BlockVolume] One pod requesting one prebound PVC should be able to mount volume and write from pod1" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: emptyDir] should support non-existent path" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: dir-link] One pod requesting one prebound PVC should be able to mount volume and read from pod1" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] [HPA] Horizontal pod autoscaling (scale resource: CPU) [sig-autoscaling] [Serial] [Slow] ReplicationController Should scale from 1 pod to 3 pods and from 3 to 5 and verify decision stability" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cluster-lifecycle] Upgrade [Feature:Upgrade] node upgrade should maintain a functioning cluster [Feature:NodeUpgrade]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPartitioned] should fail for new directories when readOnly specified in the volumeSource" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Projected should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] EquivalenceCache [Serial] validates GeneralPredicates is properly invalidated when a pod is scheduled [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Projected should be consumable from pods in volume with mappings [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scalability] Density [Feature:ManualPerformance] should allow starting 30 pods per node using { ReplicationController} with 0 secrets, 0 configmaps and 0 daemons with quotas" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Networking should provide unchanging, static URL paths for kubernetes api services" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] should increase cluster size if pods are pending due to pod anti-affinity [Feature:ClusterSizeAutoscalingScaleUp]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes [Feature:ReclaimPolicy] [sig-storage] persistentvolumereclaim:vsphere should not detach and unmount PV when associated pvc with delete as reclaimPolicy is deleted when it is in use by the pod" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Pods should support remote command execution over websockets [NodeConformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Probing container should be restarted with a exec &#34;cat /tmp/health&#34; liveness probe [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [sig-node] Security Context [Feature:SecurityContext] should support seccomp alpha unconfined annotation on the pod [Feature:Seccomp]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Projected should be consumable from pods in volume with mappings as non-root with FSGroup [NodeFeature:FSGroup]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]" classname="Kubernetes e2e suite" time="21.662469535"></testcase>
      <testcase name="[k8s.io] [Feature:Example] [k8s.io] CassandraStatefulSet should create statefulset" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPath] should support readOnly directory specified in the volumeMount" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] [Serial] Volume metrics PVController should create unbound pv count metrics for pvc controller after creating pv only" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cluster-lifecycle] kube-proxy migration [Feature:KubeProxyDaemonSetMigration] Downgrade kube-proxy from a DaemonSet to static pods should maintain a functioning cluster [Feature:KubeProxyDaemonSetDowngrade]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfs] should fail if non-existent subpath is outside the volume [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] NetworkPolicy NetworkPolicy between server and client should enforce policy based on NamespaceSelector [Feature:NetworkPolicy]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] Network Partition [Disruptive] [Slow] [k8s.io] [ReplicationController] should eagerly create replacement pod during network partition when termination grace is non-zero" classname="Kubernetes e2e suite" time="6.621163811">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] Set fsGroup for local volume should set same fsGroup for two pods simultaneously" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfs] should support restarting containers using file as subpath [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes [Feature:ReclaimPolicy] [sig-storage] persistentvolumereclaim:vsphere should delete persistent volume when reclaimPolicy set to delete and associated claim is deleted" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] CronJob should delete successful finished jobs with limit of one successful job" classname="Kubernetes e2e suite" time="98.781462425"></testcase>
      <testcase name="[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify clean up of stale dummy VM for dynamically provisioned pvc using SPBM policy" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: emptyDir] should support readOnly file specified in the volumeMount" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-instrumentation] [Feature:PrometheusMonitoring] Prometheus should scrape container metrics from all nodes." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] One pod requesting one prebound PVC should be able to mount volume and write from pod1" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volumes PD should be mountable with xfs" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] DisruptionController evictions: maxUnavailable allow single eviction, percentage =&gt; should allow an eviction" classname="Kubernetes e2e suite" time="50.917683941"></testcase>
      <testcase name="[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] StatefulSet [k8s.io] Deploy clustered applications [Feature:StatefulSet] [Slow] should creating a working mysql cluster" classname="Kubernetes e2e suite" time="289.641367915"></testcase>
      <testcase name="[sig-instrumentation] Cluster level logging implemented by Stackdriver should ingest events" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: blockfs] One pod requesting one prebound PVC should be able to mount volume and read from pod1" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]" classname="Kubernetes e2e suite" time="6.750613799">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPath] should support restarting containers using file as subpath [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] EmptyDir volumes when FSGroup is specified [NodeFeature:FSGroup] volume on tmpfs should have the correct mode using FSGroup" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [sig-node] kubelet [k8s.io] [sig-node] host cleanup with volume mounts [sig-storage][HostCleanup][Flaky] Host cleanup after disrupting NFS volume [NFS] after stopping the nfs-server and deleting the (active) client pod, the NFS mount and the pod&#39;s UID directory should be removed." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gluster] should unmount if pod is force deleted while kubelet is down [Disruptive][Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] SchedulerPriorities [Serial] Pod should avoid to schedule to node that have avoidPod annotation" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes NFS when invoking the Recycle reclaim policy should test that a PV becomes Available and is clean after the PVC is deleted." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: dir] Set fsGroup for local volume should set fsGroup for one pod" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Services should have session affinity work for NodePort service" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfs] should unmount if pod is force deleted while kubelet is down [Disruptive][Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] shouldn&#39;t scale down when non expendable pod is running [Feature:ClusterSizeAutoscalingScaleDown]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [Feature:Example] [k8s.io] Storm should create and stop Zookeeper, Nimbus and Storm worker servers" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Variable Expansion should allow substituting values in a container&#39;s args [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] DNS should provide DNS for services  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: block] [Feature:BlockVolume] Set fsGroup for local volume should set same fsGroup for two pods simultaneously" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Probing container should be restarted with a docker exec liveness probe with timeout " classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPVC] should fail for new directories when readOnly specified in the volumeSource" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] should disable node pool autoscaling [Feature:ClusterSizeAutoscalingScaleUp]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Kubectl taint [Serial] should update the taint on a node" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Mounted volume expand[Slow] Should verify mounted devices can be resized" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: block] [Feature:BlockVolume] Set fsGroup for local volume should set fsGroup for one pod" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs create a PVC and non-pre-bound PV: test write access" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Probing container should *not* be restarted with a exec &#34;cat /tmp/health&#34; liveness probe [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gluster] should support readOnly directory specified in the volumeMount" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] ResourceQuota should create a ResourceQuota and capture the life of a persistent volume claim. [sig-storage]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] DNS should support configurable pod resolv.conf" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volumes GlusterFS should be mountable" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] should scale up when non expendable pod is created [Feature:ClusterSizeAutoscalingScaleUp]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-auth] Certificates API should support building a client with a CSR" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] EmptyDir volumes when FSGroup is specified [NodeFeature:FSGroup] new files should be created with FSGroup ownership when container is root" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Pods should support retrieving logs from the container over websockets [NodeConformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-auth] PodSecurityPolicy should allow pods under the privileged extensions.PodSecurityPolicy" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] Multi-AZ Clusters should spread the pods of a service across zones" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] [HPA] Horizontal pod autoscaling (scale resource: CPU) [sig-autoscaling] [Serial] [Slow] Deployment Should scale from 5 pods to 3 pods and from 3 to 1" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: blockfs] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gluster] should unmount if pod is gracefully deleted while kubelet is down [Disruptive][Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] GCP Volumes NFSv4 should be mountable for NFSv4" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Variable Expansion should fail substituting values in a volume subpath with backticks [Feature:VolumeSubpathEnvExpansion][NodeAlphaFeature:VolumeSubpathEnvExpansion][Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: emptyDir] should support creating multiple subpath from same volumes [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPartitioned] should support readOnly file specified in the volumeMount" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Services should be able to change the type from ExternalName to ClusterIP" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [sig-node] Security Context [Feature:SecurityContext] should support seccomp alpha unconfined annotation on the container [Feature:Seccomp]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] should add node to the particular mig [Feature:ClusterSizeAutoscalingScaleUp]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPVC] should support non-existent path" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] EmptyDir volumes should support (non-root,0644,default) [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Networking Granular Checks: Services [Slow] should update nodePort: udp [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Projected should be consumable from pods in volume as non-root with defaultMode and fsGroup set [NodeFeature:FSGroup]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Downward API should provide host IP as an env var [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Dynamic Provisioning DynamicProvisioner Default should be disabled by removing the default annotation [Serial] [Disruptive]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: gce-localssd-scsi-fs] [Serial] Set fsGroup for local volume should not set different fsGroups for two pods simultaneously" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPVC] should support restarting containers using file as subpath [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Proxy version v1 should proxy logs on node using proxy subresource  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: block] [Feature:BlockVolume] Set fsGroup for local volume should set different fsGroup for second pod if first pod is deleted" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPartitioned] should support file as subpath" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] Daemon set [Serial] should not update pod when spec was updated and update strategy is OnDelete" classname="Kubernetes e2e suite" time="17.058946987"></testcase>
      <testcase name="[sig-storage] PVC Protection Verify &#34;immediate&#34; deletion of a PVC that is not in active use by a pod" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Proxy version v1 should proxy logs on node with explicit kubelet port using proxy subresource  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl Port forwarding [k8s.io] With a server listening on 0.0.0.0 [k8s.io] that expects a client request should support a client that connects, sends NO DATA, and disconnects" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scalability] Density [Feature:ManualPerformance] should allow starting 30 pods per node using { ReplicationController} with 0 secrets, 0 configmaps and 2 daemons" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cluster-lifecycle] Reboot [Disruptive] [Feature:Reboot] each node by ordering clean reboot and ensure they function upon restart" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: emptyDir] should fail if subpath directory is outside the volume [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] NetworkPolicy NetworkPolicy between server and client should support a &#39;default-deny&#39; policy [Feature:NetworkPolicy]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root with FSGroup [NodeFeature:FSGroup]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] Should scale up GPU pool from 1 [GpuType:nvidia-tesla-k80] [Feature:ClusterSizeAutoscalingGpu]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPath] should fail if subpath with backstepping is outside the volume [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PV Protection Verify that PV bound to a PVC is not removed immediately" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Sysctls [NodeFeature:Sysctls] should support sysctls" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Loadbalancing: L7 GCE [Slow] [Feature:NEG] should be able to create a ClusterIP service [Unreleased]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Flexvolumes [Disruptive] should install plugin without kubelet restart" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPathSymlink] should support existing directory" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Services should be able to switch session affinity for LoadBalancer service with ESIPP on [Slow] [DisabledForLargeClusters]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfs] should support file as subpath" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-instrumentation] Cluster level logging using Elasticsearch [Feature:Elasticsearch] should check that logs from containers are ingested into Elasticsearch" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: blockfs] Set fsGroup for local volume should set same fsGroup for two pods simultaneously" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] [HPA] Horizontal pod autoscaling (scale resource: Custom Metrics from Stackdriver) should scale up with two External metrics from Stackdriver [Feature:CustomMetricsAutoscaling]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] shouldn&#39;t scale up when expendable pod is created [Feature:ClusterSizeAutoscalingScaleUp]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] EmptyDir volumes when FSGroup is specified [NodeFeature:FSGroup] nonexistent volume subPath should have the correct mode and owner using FSGroup" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: emptyDir] should support restarting containers using directory as subpath [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPVC] should support restarting containers using directory as subpath [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] GCP Volumes NFSv3 should be mountable for NFSv3" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] Network Partition [Disruptive] [Slow] [k8s.io] Pods should be evicted from unready Node [Feature:TaintEviction] All pods on the unreachable node should be marked as NotReady upon the node turn NotReady AND all pods should be evicted after eviction timeout passes" classname="Kubernetes e2e suite" time="6.559301976">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes Default StorageClass pods that use multiple volumes should be reschedulable" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Update Demo should do a rolling update of a replication controller  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Services should be able to create a functioning NodePort service" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Services should have session affinity work for LoadBalancer service with ESIPP on [Slow] [DisabledForLargeClusters]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] One pod requesting one prebound PVC should be able to mount volume and write from pod1" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPathSymlink] should support non-existent path" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPVC] should support creating multiple subpath from same volumes [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Networking Granular Checks: Services [Slow] should function for client IP based session affinity: http" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: dir-link] Set fsGroup for local volume should set different fsGroup for second pod if first pod is deleted" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PV Protection Verify &#34;immediate&#34; deletion of a PV that is not bound to a PVC" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] [Serial] Volume metrics PVController should create none metrics for pvc controller before creating any PV or PVC" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl alpha client [k8s.io] Kubectl run CronJob should create a CronJob" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PVC Protection Verify that PVC in active use by a pod is not removed immediately" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cluster-lifecycle] Reboot [Disruptive] [Feature:Reboot] each node by dropping all inbound packets for a while and ensure they function afterwards" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cluster-lifecycle] ingress Downgrade [Feature:IngressDowngrade] ingress downgrade should maintain a functioning ingress" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs should create a non-pre-bound PV and PVC: test write access " classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cluster-lifecycle] etcd Upgrade [Feature:EtcdUpgrade] etcd upgrade should maintain a functioning cluster" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] Multi-AZ Cluster Volumes [sig-storage] should only be allowed to provision PDs in zones where nodes exist" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Networking should check kube-proxy urls" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] [HPA] Horizontal pod autoscaling (scale resource: Custom Metrics from Stackdriver) should scale down with Custom Metric of type Pod from Stackdriver with Prometheus [Feature:CustomMetricsAutoscaling]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPath] should fail if subpath directory is outside the volume [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Projected should be consumable from pods in volume with mappings and Item Mode set [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Loadbalancing: L7 GCE [Slow] [Feature:Ingress] should create ingress with pre-shared certificate" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: emptyDir] should support file as subpath" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] NetworkPolicy NetworkPolicy between server and client should enforce policy based on Ports [Feature:NetworkPolicy]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Loadbalancing: L7 GCE [Slow] [Feature:Ingress] should not reconcile manually modified health check for ingress" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Networking should provide Internet connection for containers [Feature:Networking-IPv4]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volume plugin streaming [Slow] NFS should write files of various sizes, verify size, validate content" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Simple pod should support inline execution and attach" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scalability] Load capacity [Feature:ManualPerformance] should be able to handle 30 pods per node { ReplicationController} with 0 secrets, 0 configmaps and 0 daemons with quotas" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]" classname="Kubernetes e2e suite" time="93.243562365"></testcase>
      <testcase name="[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: gce-localssd-scsi-fs] [Serial] Set fsGroup for local volume should set fsGroup for one pod" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] ESIPP [Slow] [DisabledForLargeClusters] should work for type=NodePort" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volume expand [Slow] Verify if editing PVC allows resize" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl Port forwarding [k8s.io] With a server listening on localhost [k8s.io] that expects a client request should support a client that connects, sends NO DATA, and disconnects" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] SchedulerPredicates [Serial] validates that NodeAffinity is respected if not matching" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl Port forwarding [k8s.io] With a server listening on 0.0.0.0 should support forwarding over websockets" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [sig-node] Security Context [Feature:SecurityContext] should support volume SELinux relabeling" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [sig-node] kubelet [k8s.io] [sig-node] host cleanup with volume mounts [sig-storage][HostCleanup][Flaky] Host cleanup after disrupting NFS volume [NFS] after stopping the nfs-server and deleting the (sleeping) client pod, the NFS mount and the pod&#39;s UID directory should be removed." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] Set fsGroup for local volume should set fsGroup for one pod" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Kubectl run CronJob should create a CronJob" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gluster] should fail if subpath file is outside the volume [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfsPVC] should fail if subpath directory is outside the volume [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] [Serial] Volume metrics should create volume metrics with the correct PVC ref" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [Feature:Example] [k8s.io] Spark should start spark master, driver and workers" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Kubectl run default should create an rc or deployment from an image  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volume Disk Format [Feature:vsphere] verify disk format type - eagerzeroedthick is honored for dynamically provisioned pv using storageclass" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] ReplicaSet should serve a basic image on each replica with a private image" classname="Kubernetes e2e suite" time="6.5816008759999995">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] Should not scale GPU pool up if pod does not require GPUs [GpuType:nvidia-tesla-v100] [Feature:ClusterSizeAutoscalingGpu]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Pod Disks schedule pods each with a PD, delete pod and verify detach [Slow] for RW PD with pod delete grace period of &#34;default (30s)&#34;" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: gce-localssd-scsi-fs] [Serial] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Projected should be consumable from pods in volume with mappings and Item mode set [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Generated clientset should create v1beta1 cronJobs, delete cronJobs, watch cronJobs" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: dir] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Projected should be consumable from pods in volume [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] Job should run a job to completion when tasks succeed" classname="Kubernetes e2e suite" time="10.559585048"></testcase>
      <testcase name="[sig-storage] PVC Protection Verify that scheduling of a pod that uses PVC that is being deleted fails and the pod becomes Unschedulable" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volumes Azure Disk [Feature:Volumes] should be mountable [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPVC] should unmount if pod is gracefully deleted while kubelet is down [Disruptive][Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] [HPA] Horizontal pod autoscaling (scale resource: CPU) [sig-autoscaling] [Serial] [Slow] Deployment Should scale from 1 pod to 3 pods and from 3 to 5" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Services should be able to change the type from ClusterIP to ExternalName" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] ResourceQuota should verify ResourceQuota with terminating scopes." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Pods should have their auto-restart back-off timer reset on image update [Slow][NodeConformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] Should scale up GPU pool from 0 [GpuType:nvidia-tesla-k80] [Feature:ClusterSizeAutoscalingGpu]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: emptyDir] should unmount if pod is gracefully deleted while kubelet is down [Disruptive][Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]" classname="Kubernetes e2e suite" time="130.08584924"></testcase>
      <testcase name="[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPartitioned] should fail if subpath directory is outside the volume [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Services should be able to switch session affinity for LoadBalancer service with ESIPP off [Slow] [DisabledForLargeClusters]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfs] should fail for new directories when readOnly specified in the volumeSource" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPartitioned] should unmount if pod is force deleted while kubelet is down [Disruptive][Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] should correctly scale down after a node is not needed [Feature:ClusterSizeAutoscalingScaleDown]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Networking Granular Checks: Services [Slow] should function for pod-Service: http" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [sig-node] PreStop should call prestop when killing a pod  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]" classname="Kubernetes e2e suite" time="22.790471412"></testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: block] [Feature:BlockVolume] One pod requesting one prebound PVC should be able to mount volume and read from pod1" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Conformance]" classname="Kubernetes e2e suite" time="362.336479007"></testcase>
      <testcase name="[sig-scalability] Load capacity [Feature:ManualPerformance] should be able to handle 30 pods per node { Random} with 0 secrets, 0 configmaps and 0 daemons with quotas" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cluster-lifecycle] HA-master [Feature:HAMaster] survive addition/removal replicas different zones [Serial][Disruptive]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] GKE local SSD [Feature:GKELocalSSD] should write and read from node local SSD [Feature:GKELocalSSD]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Networking Granular Checks: Services [Slow] should function for node-Service: http" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] [Feature:GPUDevicePlugin] run Nvidia GPU Device Plugin tests" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes NFS with multiple PVs and PVCs all in same ns should create 3 PVs and 3 PVCs: test write access" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Update Demo should scale a replication controller  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Pods should contain environment variables for services [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [sig-node] Kubelet [Serial] [Slow] [k8s.io] [sig-node] regular resource usage tracking resource tracking for 0 pods per node" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] should increase cluster size if pod requesting volume is pending [Feature:ClusterSizeAutoscalingScaleUp]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Services should preserve source pod IP for traffic thru service cluster IP" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Firewall rule should have correct firewall rules for e2e cluster" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] HostPath should support subPath [NodeConformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Downward API volume should provide container&#39;s cpu request [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] vcp-performance [Feature:vsphere] vcp performance tests" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Kubectl apply should reuse port when apply to an existing SVC" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes:vsphere should test that a vspehre volume mounted to a pod that is deleted while the kubelet is down unmounts when the kubelet returns [Disruptive]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Projected should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Docker Containers should be able to override the image&#39;s default command (docker entrypoint) [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] Shouldn&#39;t perform scale up operation and should list unhealthy status if most of the cluster is broken[Feature:ClusterSizeAutoscalingScaleUp]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] NetworkPolicy NetworkPolicy between server and client should allow ingress access on one named port [Feature:NetworkPolicy]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Dynamic Provisioning DynamicProvisioner should not provision a volume in an unmanaged GCE zone." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] EmptyDir volumes when FSGroup is specified [NodeFeature:FSGroup] volume on default medium should have the correct mode using FSGroup" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that&#39;s waiting for dependents to be deleted [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPartitioned] should fail if subpath file is outside the volume [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPath] should support existing single file" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Loadbalancing: L7 GCE [Slow] [Feature:kubemci] should support https-only annotation" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] ClusterDns [Feature:Example] should create pod that uses dns" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] GCP Volumes GlusterFS should be mountable" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volume plugin streaming [Slow] iSCSI [Feature:Volumes] should write files of various sizes, verify size, validate content" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volume plugin streaming [Slow] Ceph-RBD [Feature:Volumes] should write files of various sizes, verify size, validate content" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Initializers [Feature:Initializers] should be invisible to controllers by default" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: dir] Set fsGroup for local volume should not set different fsGroups for two pods simultaneously" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfsPVC] should fail for new directories when readOnly specified in the volumeSource" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [sig-node] Mount propagation should propagate mounts to the host" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gluster] should support file as subpath" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPathSymlink] should support existing single file" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Loadbalancing: L7 GCE [Slow] [Feature:Ingress] should be able to switch between HTTPS and HTTP2 modes" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Projected should be consumable from pods in volume [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Pods should be updated [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scalability] Empty [Feature:Empty] starts a pod" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Services should be able to switch session affinity for NodePort service" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Kubectl replace should update a single-container pod&#39;s image  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volumes Ceph RBD [Feature:Volumes] should be mountable" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] Job should exceed backoffLimit" classname="Kubernetes e2e suite" time="20.714518602"></testcase>
      <testcase name="[sig-network] Networking Granular Checks: Services [Slow] should function for node-Service: udp" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-auth] Advanced Audit should audit API calls [DisabledForLargeClusters]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Loadbalancing: L7 GCE [Slow] [Feature:kubemci] should remove clusters as expected" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] Should scale down GPU pool from 1 [GpuType:nvidia-tesla-k80] [Feature:ClusterSizeAutoscalingGpu]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Docker Containers should be able to override the image&#39;s default arguments (docker cmd) [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Verify Volume Attach Through vpxd Restart [Feature:vsphere][Serial][Disruptive] verify volume remains attached through vpxd restart" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] EmptyDir volumes when FSGroup is specified [NodeFeature:FSGroup] new files should be created with FSGroup ownership when container is non-root" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cluster-lifecycle] Reboot [Disruptive] [Feature:Reboot] each node by ordering unclean reboot and ensure they function upon restart" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] should correctly scale down after a node is not needed when there is non autoscaled pool[Feature:ClusterSizeAutoscalingScaleDown]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfsPVC] should support existing single file" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-auth] [Feature:NodeAuthorizer] Getting an existing secret should exit with the Forbidden error" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes GCEPD should test that deleting the PV before the pod does not cause pod deletion to fail on PD detach" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-instrumentation] Cluster level logging implemented by Stackdriver should ingest logs" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPathSymlink] should support file as subpath" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPathSymlink] should support readOnly directory specified in the volumeMount" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cluster-lifecycle] HA-master [Feature:HAMaster] survive addition/removal replicas multizone workers [Serial][Disruptive]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Services should serve multiport endpoints from pods  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] Set fsGroup for local volume should set fsGroup for one pod" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: block] [Feature:BlockVolume] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  Local volume that cannot be mounted [Slow] should fail due to non-existent path" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] [HPA] Horizontal pod autoscaling (scale resource: CPU) [sig-autoscaling] [Serial] [Slow] ReplicationController Should scale from 5 pods to 3 pods and from 3 to 1 and verify decision stability" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] Set fsGroup for local volume should set different fsGroup for second pod if first pod is deleted" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Docker Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [sig-node] SSH should SSH to all nodes and run commands" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should implement legacy replacement when the update strategy is OnDelete" classname="Kubernetes e2e suite" time="79.827208287"></testcase>
      <testcase name="[sig-scheduling] Multi-AZ Cluster Volumes [sig-storage] should schedule pods in the same zones as statically provisioned PVs" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] StatefulSet [k8s.io] Deploy clustered applications [Feature:StatefulSet] [Slow] should creating a working zookeeper cluster" classname="Kubernetes e2e suite" time="358.439065104"></testcase>
      <testcase name="[k8s.io] Cluster size autoscaler scalability [Slow] CA ignores unschedulable pods while scheduling schedulable pods [Feature:ClusterAutoscalerScalability6]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volume Provisioning on Datastore [Feature:vsphere] verify dynamically provisioned pv using storageclass fails on an invalid datastore" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] HostPath should support existing directory subPath" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Networking Granular Checks: Services [Slow] should function for endpoint-Service: http" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] Deployment test Deployment ReplicaSet orphaning and adoption regarding controllerRef" classname="Kubernetes e2e suite" time="12.798731874"></testcase>
      <testcase name="[sig-storage] Volume FStype [Feature:vsphere] verify fstype - default value should be ext4" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] AdmissionWebhook Should mutate custom resource" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: emptyDir] should support readOnly directory specified in the volumeMount" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cluster-lifecycle] Reboot [Disruptive] [Feature:Reboot] each node by dropping all outbound packets for a while and ensure they function afterwards" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Cluster size autoscaler scalability [Slow] should scale up at all [Feature:ClusterAutoscalerScalability1]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPartitioned] should support existing directory" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scalability] Load capacity [Feature:ManualPerformance] should be able to handle 30 pods per node {extensions Deployment} with 2 secrets, 0 configmaps and 0 daemons" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-instrumentation] Stackdriver Monitoring should have accelerator metrics [Feature:StackdriverAcceleratorMonitoring]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Projected should provide container&#39;s cpu limit [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfs] should fail if subpath file is outside the volume [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gluster] should support restarting containers using directory as subpath [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] [HPA] Horizontal pod autoscaling (scale resource: Custom Metrics from Stackdriver) should scale down with External Metric with target average value from Stackdriver [Feature:CustomMetricsAutoscaling]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Downward API volume should set mode on item file [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] ResourceQuota should create a ResourceQuota and capture the life of a pod." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] Should scale down GPU pool from 1 [GpuType:nvidia-tesla-v100] [Feature:ClusterSizeAutoscalingGpu]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPVC] should support existing single file" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-ui] Kubernetes Dashboard should check that the kubernetes-dashboard instance is alive" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: gce-localssd-scsi-fs] [Serial] One pod requesting one prebound PVC should be able to mount volume and write from pod1" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfsPVC] should support non-existent path" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Services should be able to up and down services" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  Local volume provisioner [Serial] should discover dynamicly created local persistent volume mountpoint in discovery directory" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Loadbalancing: L7 GCE [Slow] [Feature:kubemci] single and multi-cluster ingresses should be able to exist together" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] [HPA] Horizontal pod autoscaling (scale resource: Custom Metrics from Stackdriver) should scale down with External Metric with target value from Stackdriver [Feature:CustomMetricsAutoscaling]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volume Disk Format [Feature:vsphere] verify disk format type - zeroedthick is honored for dynamically provisioned pv using storageclass" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Projected optional updates should be reflected in volume [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Kubectl rolling-update should support rolling-update to same image  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPartitioned] should fail if subpath with backstepping is outside the volume [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Cluster size autoscaler scalability [Slow] should scale up twice [Feature:ClusterAutoscalerScalability2]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfs] should support creating multiple subpath from same volumes [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] EquivalenceCache [Serial] validates pod anti-affinity works properly when new replica pod is scheduled" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] CustomResourceDefinition Watch CustomResourceDefinition Watch watch on custom resource definition objects" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: gce-localssd-scsi-fs] [Serial] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPathSymlink] should fail if subpath with backstepping is outside the volume [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] should scale up correct target pool [Feature:ClusterSizeAutoscalingScaleUp]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] ESIPP [Slow] [DisabledForLargeClusters] should work from pods" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Dynamic Provisioning [k8s.io] GlusterDynamicProvisioner should create and delete persistent volumes [fast]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [sig-node] Pods Extended [k8s.io] Pods Set QOS Class should be submitted and removed  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Variable Expansion should allow substituting values in a container&#39;s command [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Projected should be consumable from pods in volume as non-root with FSGroup [NodeFeature:FSGroup]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPath] should support creating multiple subpath from same volumes [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [Feature:Example] [k8s.io] Downward API should create a pod that prints his name and namespace" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Etcd failure [Disruptive] should recover from SIGKILL" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-instrumentation] MetricsGrabber should grab all metrics from a Kubelet." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [sig-node] Kubelet [Serial] [Slow] [k8s.io] [sig-node] experimental resource usage tracking [Feature:ExperimentalResourceUsageTracking] resource tracking for 100 pods per node" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes NFS with multiple PVs and PVCs all in same ns should create 4 PVs and 2 PVCs: test write access [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Regional PD RegionalPD should provision storage [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] ResourceQuota should create a ResourceQuota and capture the life of a service." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPVC] should fail if non-existent subpath is outside the volume [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: emptyDir] should fail for new directories when readOnly specified in the volumeSource" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scalability] Load capacity [Feature:ManualPerformance] should be able to handle 30 pods per node {extensions Deployment} with 0 secrets, 2 configmaps and 0 daemons" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones" classname="Kubernetes e2e suite" time="13.682044329"></testcase>
      <testcase name="[sig-storage] Dynamic Provisioning DynamicProvisioner External should let an external dynamic provisioner create and delete persistent volumes [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gluster] should support existing single file" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] Set fsGroup for local volume should set fsGroup for one pod" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Cluster size autoscaler scalability [Slow] should scale down underutilized nodes [Feature:ClusterAutoscalerScalability4]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Projected should be consumable from pods in volume with defaultMode set [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] vsphere cloud provider stress [Feature:vsphere] vsphere stress tests" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-instrumentation] MetricsGrabber should grab all metrics from a ControllerManager." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Servers with support for Table transformation should return pod details" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPVC] should support file as subpath" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-auth] PodSecurityPolicy should enforce the restricted policy.PodSecurityPolicy" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  Pod with node different from PV&#39;s NodeAffinity should fail scheduling due to different NodeAffinity" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] CSI Volumes CSI plugin test using CSI driver: hostPath should provision storage" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [Feature:Example] [k8s.io] Liveness liveness pods should be automatically restarted" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] [Feature:PerformanceDNS] Should answer DNS query for maximum number of services per cluster" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] ResourceQuota should create a ResourceQuota and capture the life of a secret." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] DaemonRestart [Disruptive] Scheduler should continue assigning pods to nodes across restart" classname="Kubernetes e2e suite" time="32.539833189">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Projected should be consumable from pods in volume as non-root with defaultMode and fsGroup set [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: dir] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Simple pod should handle in-cluster config" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Services should use same NodePort with same port but different protocols" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: blockfs] Set fsGroup for local volume should set fsGroup for one pod" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] should correctly scale down after a node is not needed and one node is broken [Feature:ClusterSizeAutoscalingScaleDown]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] StatefulSet [k8s.io] Deploy clustered applications [Feature:StatefulSet] [Slow] should creating a working CockroachDB cluster" classname="Kubernetes e2e suite" time="379.240186206"></testcase>
      <testcase name="[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Loadbalancing: L7 GCE [Slow] [Feature:kubemci] should create ingress with pre-shared certificate" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: emptyDir] should support existing directories when readOnly specified in the volumeSource" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Networking IPerf IPv4 [Experimental] [Feature:Networking-IPv4] [Slow] [Feature:Networking-Performance] should transfer ~ 1GB onto the service endpoint 1 servers (maximum of 1 clients)" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cluster-lifecycle] [Feature:BootstrapTokens] should delete the token secret when the secret expired" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] ReplicationController should release no longer matching pods" classname="Kubernetes e2e suite" time="12.633099321"></testcase>
      <testcase name="[sig-apps] CronJob should remove from active list jobs that have been deleted" classname="Kubernetes e2e suite" time="99.752259455"></testcase>
      <testcase name="[sig-cluster-lifecycle] Upgrade [Feature:Upgrade] master upgrade should maintain a functioning cluster [Feature:MasterUpgrade]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: block] [Feature:BlockVolume] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-auth] [Feature:NodeAuthorizer] A node shouldn&#39;t be able to create another node" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Services [Feature:GCEAlphaFeature][Slow] should be able to create and tear down a standard-tier load balancer [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] Deployment deployment should delete old replica sets" classname="Kubernetes e2e suite" time="12.029547398"></testcase>
      <testcase name="[sig-storage] vcp at scale [Feature:vsphere]  vsphere scale tests" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  Local volume provisioner [Serial] should create and recreate local persistent volume" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPath] should support existing directory" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Simple pod should support exec through an HTTP proxy" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gluster] should support restarting containers using file as subpath [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Projected should be consumable from pods in volume with defaultMode set [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: dir] Set fsGroup for local volume should set different fsGroup for second pod if first pod is deleted" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Firewall rule [Slow] [Serial] should create valid firewall rules for LoadBalancer type service" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Pod Disks should be able to delete a non-existent PD without error" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] ReplicaSet should surface a failure condition on a common issue like exceeded quota" classname="Kubernetes e2e suite" time="8.950880974"></testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfsPVC] should fail if subpath file is outside the volume [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gluster] should fail for new directories when readOnly specified in the volumeSource" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] GKE node pools [Feature:GKENodePool] should create a cluster with multiple node pools [Feature:GKENodePool]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPartitioned] should support creating multiple subpath from same volumes [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Etcd failure [Disruptive] should recover from network partition with master" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Pod Disks detach in a disrupted environment [Slow] [Disruptive] when pod is evicted" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scalability] Load capacity [Feature:ManualPerformance] should be able to handle 30 pods per node { ReplicationController} with 0 secrets, 0 configmaps and 2 daemons" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cluster-lifecycle] [Feature:BootstrapTokens] should resign the bootstrap tokens when the clusterInfo ConfigMap updated [Serial][Disruptive]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: emptyDir] should fail if subpath file is outside the volume [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Services should provide secure master service  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage should allow deletion of pod with invalid volume : configmap" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volumes PD should be mountable with ext3" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Dynamic Provisioning DynamicProvisioner Default should be disabled by changing the default annotation [Serial] [Disruptive]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfsPVC] should fail if subpath with backstepping is outside the volume [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify if a non-existing SPBM policy is not honored for dynamically provisioned pvc using storageclass" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Networking Granular Checks: Services [Slow] should update endpoints: http" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] NFSPersistentVolumes[Disruptive][Flaky] when kube-controller-manager restarts should delete a bound PVC from a clientPod, restart the kube-control-manager, and ensure the kube-controller-manager does not crash" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] shouldn&#39;t trigger additional scale-ups during processing scale-up [Feature:ClusterSizeAutoscalingScaleUp]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-auth] [Feature:NodeAuthorizer] Getting a non-existent secret should exit with the Forbidden error, not a NotFound error" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [sig-node] Security Context [Feature:SecurityContext] should support volume SELinux relabeling when using hostIPC" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Projected should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] DisruptionController evictions: enough pods, replicaSet, percentage =&gt; should allow an eviction" classname="Kubernetes e2e suite" time="52.930431004"></testcase>
      <testcase name="[sig-storage] vsphere statefulset vsphere statefulset testing" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Pod Disks schedule a pod w/ RW PD(s) mounted to 1 or more containers, write to PD, verify content, delete pod, and repeat in rapid succession [Slow] using 1 containers and 2 PDs" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Dynamic Provisioning DynamicProvisioner should provision storage with different parameters [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: block] [Feature:BlockVolume] Set fsGroup for local volume should not set different fsGroups for two pods simultaneously" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] NFSPersistentVolumes[Disruptive][Flaky] when kubelet restarts Should test that a volume mounted to a pod that is force deleted while the kubelet is down unmounts when the kubelet returns." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify VSAN storage capability with valid diskStripes and objectSpaceReservation values and a VSAN datastore is honored for dynamically provisioned pvc using storageclass" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] Job should run a job to completion when tasks sometimes fail and are not locally restarted" classname="Kubernetes e2e suite" time="10.62387105"></testcase>
      <testcase name="[sig-network] Networking Granular Checks: Services [Slow] should function for pod-Service: udp" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] Two pods mounting a local volume one after the other should be able to write from pod1 and read from pod2" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfs] should support readOnly directory specified in the volumeMount" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes:vsphere should test that a file written to the vspehre volume mount before kubelet restart can be read after restart [Disruptive]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Loadbalancing: L7 GCE [Slow] [Feature:NEG] should sync endpoints to NEG" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Sysctls [NodeFeature:Sysctls] should not launch unsafe, but not explicitly enabled sysctls on the node" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [sig-node] Security Context [Feature:SecurityContext] should support pod.Spec.SecurityContext.RunAsUser" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] HostPath should give a volume the correct mode [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Projected should set DefaultMode on files [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] StatefulSet [k8s.io] Basic StatefulSet functionality [StatefulSetBasic] should adopt matching orphans and release non-matching pods" classname="Kubernetes e2e suite" time="64.747583386"></testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPVC] should unmount if pod is force deleted while kubelet is down [Disruptive][Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] Deployment deployment should support rollover" classname="Kubernetes e2e suite" time="27.731233214"></testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] One pod requesting one prebound PVC should be able to mount volume and write from pod1" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes GCEPD should test that deleting the Namespace of a PVC and Pod causes the successful detach of Persistent Disk" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] SchedulerPredicates [Serial] validates that taints-tolerations is respected if matching" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] EmptyDir volumes should support (root,0644,default) [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] NetworkPolicy NetworkPolicy between server and client should allow egress access on one named port [Feature:NetworkPolicy]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] ConfigMap should be consumable from pods in volume as non-root with FSGroup [NodeFeature:FSGroup]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: dir-link] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPath] should support readOnly file specified in the volumeMount" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Namespaces [Serial] should always delete fast (ALL of 100 namespaces in 150 seconds) [Feature:ComprehensiveNamespaceDraining]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-instrumentation] [Feature:PrometheusMonitoring] Prometheus should successfully scrape all targets" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Services should work after restarting apiserver [Disruptive]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [sig-node] Security Context [Feature:SecurityContext] should support container.SecurityContext.RunAsUser" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for git_repo [Serial] [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Projected should be consumable from pods in volume with mappings [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Downward API volume should provide container&#39;s memory limit [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Proxy server should support --unix-socket=/path  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] Network Partition [Disruptive] [Slow] [k8s.io] [StatefulSet] should come back up if node goes down [Slow] [Disruptive]" classname="Kubernetes e2e suite" time="6.499529278">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: emptyDir] should fail if subpath with backstepping is outside the volume [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scalability] Density [Feature:ManualPerformance] should allow starting 3 pods per node using { ReplicationController} with 0 secrets, 0 configmaps and 0 daemons" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs create a PV and a pre-bound PVC: test write access" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] SchedulerPriorities [Serial] Pod should perfer to scheduled to nodes pod can tolerate" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: blockfs] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Initializers [Feature:Initializers] will be set to nil if a patch removes the last pending initializer" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Kubectl version should check is all data is printed  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [sig-node] Kubelet [Serial] [Slow] [k8s.io] [sig-node] regular resource usage tracking resource tracking for 100 pods per node" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volume plugin streaming [Slow] GlusterFS should write files of various sizes, verify size, validate content" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Services should be able to change the type from NodePort to ExternalName" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volumes ConfigMap should be mountable" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [sig-node] Pods Extended [k8s.io] Delete Grace Period should be submitted and removed  [Flaky] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] AdmissionWebhook Should be able to deny pod and configmap creation" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] Two pods mounting a local volume at the same time should be able to write from pod1 and read from pod2" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Kubectl run --rm job should create a job from an image, then delete the job  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Simple pod should support exec through kubectl proxy" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Downward API [Serial] [Disruptive] [NodeFeature:EphemeralStorage] Downward API tests for local ephemeral storage should provide container&#39;s limits.ephemeral-storage and requests.ephemeral-storage as env vars" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-instrumentation] Cluster level logging implemented by Stackdriver should ingest system logs from all nodes [Feature:StackdriverLogging]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Network should set TCP CLOSE_WAIT timeout" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: dir-link] Set fsGroup for local volume should set same fsGroup for two pods simultaneously" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [Feature:Example] [k8s.io] Redis should create and stop redis servers" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gluster] should support existing directory" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Loadbalancing: L7 GCE [Slow] [Feature:NEG] should conform to Ingress spec" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes NFS with Single PV - PVC pairs create a PVC and a pre-bound PV: test write access" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Pod Disks detach in a disrupted environment [Slow] [Disruptive] when node is deleted" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cluster-lifecycle] HA-master [Feature:HAMaster] survive addition/removal replicas same zone [Serial][Disruptive]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volume Provisioning On Clustered Datastore [Feature:vsphere] verify dynamic provision with default parameter on clustered datastore" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Projected should be consumable from pods in volume as non-root [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-instrumentation] Stackdriver Monitoring should have cluster metrics [Feature:StackdriverMonitoring]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: emptyDir] should support existing directory" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPath] should fail if subpath file is outside the volume [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-instrumentation] MetricsGrabber should grab all metrics from API server." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Loadbalancing: L7 GCE [Slow] [Feature:kubemci] should create ingress with backend HTTPS" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] EmptyDir wrapper volumes should not conflict" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] Deployment deployment reaping should cascade to its replica sets and pods" classname="Kubernetes e2e suite" time="9.174550011000001"></testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPath] should unmount if pod is gracefully deleted while kubelet is down [Disruptive][Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPathSymlink] should fail for new directories when readOnly specified in the volumeSource" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] One pod requesting one prebound PVC should be able to mount volume and read from pod1" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Services should have session affinity work for LoadBalancer service with ESIPP off [Slow] [DisabledForLargeClusters]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] One pod requesting one prebound PVC should be able to mount volume and read from pod1" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Generated clientset should create pods, set the deletionTimestamp and deletionGracePeriodSeconds of the pod" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Dynamic Provisioning DynamicProvisioner Default should create and delete default persistent volumes [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPartitioned] should support readOnly directory specified in the volumeMount" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes:vsphere should test that deleting a PVC before the pod does not cause pod deletion to fail on vsphere volume detach" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Variable Expansion should allow substituting values in a volume subpath [Feature:VolumeSubpathEnvExpansion][NodeAlphaFeature:VolumeSubpathEnvExpansion]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] Set fsGroup for local volume should not set different fsGroups for two pods simultaneously" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] Should scale up GPU pool from 1 [GpuType:nvidia-tesla-v100] [Feature:ClusterSizeAutoscalingGpu]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] Set fsGroup for local volume should set same fsGroup for two pods simultaneously" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Loadbalancing: L7 GCE [Slow] [Feature:Ingress] should create ingress with backend HTTPS" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify VSAN storage capability with non-vsan datastore is not honored for dynamically provisioned pvc using storageclass" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gluster] should fail if subpath directory is outside the volume [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify an existing and compatible SPBM policy is honored for dynamically provisioned pvc using storageclass" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Pod Disks schedule pods each with a PD, delete pod and verify detach [Slow] for read-only PD with pod delete grace period of &#34;default (30s)&#34;" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scalability] Load capacity [Feature:Performance] should be able to handle 30 pods per node { ReplicationController} with 0 secrets, 0 configmaps and 0 daemons" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Simple pod should support exec" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-auth] Metadata Concealment should run a check-metadata-concealment job to completion" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfsPVC] should fail if non-existent subpath is outside the volume [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scalability] Load capacity [Feature:ManualPerformance] should be able to handle 3 pods per node { ReplicationController} with 0 secrets, 0 configmaps and 0 daemons" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Kubectl create quota should create a quota without scopes" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPathSymlink] should fail if non-existent subpath is outside the volume [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Networking Granular Checks: Services [Slow] should function for client IP based session affinity: udp" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Dynamic Provisioning DynamicProvisioner deletion should be idempotent" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Loadbalancing: L7 [Slow] Nginx should conform to Ingress spec" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Kubectl api-versions should check if v1 is in available api versions  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-instrumentation] [Feature:PrometheusMonitoring] Prometheus should scrape metrics from annotated services." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] NetworkPolicy NetworkPolicy between server and client should enforce multiple, stacked policies with overlapping podSelectors [Feature:NetworkPolicy]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] ResourceQuota should create a ResourceQuota and capture the life of a configMap." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Garbage collector should support cascading deletion of custom resources" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] should increase cluster size if pending pods are small and one node is broken [Feature:ClusterSizeAutoscalingScaleUp]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Kubectl create quota should create a quota with scopes" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfs] should support existing directories when readOnly specified in the volumeSource" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] Initializers [Feature:Initializers] don&#39;t cause replicaset controller creating extra pods if the initializer is not handled [Serial]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPath] should support non-existent path" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] AdmissionWebhook Should deny crd creation" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] CronJob should not emit unexpected warnings" classname="Kubernetes e2e suite" time="128.646675101"></testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: dir-link-bindmounted] Set fsGroup for local volume should set different fsGroup for second pod if first pod is deleted" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] Multi-AZ Clusters should spread the pods of a replication controller across zones" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Flexvolumes [Disruptive] should be mountable when non-attachable" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: blockfs] One pod requesting one prebound PVC should be able to mount volume and write from pod1" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scalability] Load capacity [Feature:ManualPerformance] should be able to handle 30 pods per node {extensions Deployment} with 0 secrets, 0 configmaps and 0 daemons" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify VSAN storage capability with valid objectSpaceReservation and iopsLimit values is honored for dynamically provisioned pvc using storageclass" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Services should work after restarting kube-proxy [Disruptive]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Simple pod should support port-forward" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] Should be able to scale a node group up from 0[Feature:ClusterSizeAutoscalingScaleUp]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-service-catalog] [Feature:PodPreset] PodPreset should create a pod preset" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scalability] Density [Feature:HighDensityPerformance] should allow starting 95 pods per node using { ReplicationController} with 0 secrets, 0 configmaps and 0 daemons" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] CronJob should not schedule jobs when suspended [Slow]" classname="Kubernetes e2e suite" time="306.572842533"></testcase>
      <testcase name="[sig-network] DNS configMap nameserver Forward PTR lookup should forward PTR records lookup to upstream nameserver [Slow][Serial]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Ephemeralstorage When pod refers to non-existent ephemeral storage should allow deletion of pod with invalid volume : projected" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volume Disk Format [Feature:vsphere] verify disk format type - thin is honored for dynamically provisioned pv using storageclass" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [sig-node] AppArmor load AppArmor profiles should enforce an AppArmor profile" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] DisruptionController evictions: maxUnavailable deny evictions, integer =&gt; should not allow an eviction" classname="Kubernetes e2e suite" time="102.667937102"></testcase>
      <testcase name="[sig-api-machinery] AdmissionWebhook Should mutate pod and apply defaults after mutation" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] DisruptionController should create a PodDisruptionBudget" classname="Kubernetes e2e suite" time="6.485162391"></testcase>
      <testcase name="[sig-apps] DisruptionController evictions: enough pods, absolute =&gt; should allow an eviction" classname="Kubernetes e2e suite" time="47.117574548"></testcase>
      <testcase name="[sig-instrumentation] [Feature:PrometheusMonitoring] Prometheus should contain correct container CPU metric." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cluster-lifecycle] Addon update should propagate add-on file changes [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Pods should cap back-off at MaxContainerBackOff [Slow][NodeConformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Projected should provide container&#39;s memory request [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] [sig-node] kubelet [k8s.io] [sig-node] Clean up pods on node kubelet should be able to delete 10 pods per node in 1m0s." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] Job should adopt matching orphans and release non-matching pods" classname="Kubernetes e2e suite" time="49.905591629"></testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPathSymlink] should support creating multiple subpath from same volumes [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPathSymlink] should fail if subpath file is outside the volume [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cluster-lifecycle] Upgrade [Feature:Upgrade] cluster upgrade should maintain a functioning cluster [Feature:ClusterUpgrade]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: dir-link] One pod requesting one prebound PVC should be able to mount volume and write from pod1" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volume Placement should create and delete pod with the same volume source attach/detach to different worker nodes" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-scheduling] SchedulerPriorities [Serial] Pod should be schedule to node that don&#39;t match the PodAntiAffinity terms" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] Should scale up GPU pool from 0 [GpuType:nvidia-tesla-p100] [Feature:ClusterSizeAutoscalingGpu]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Volume FStype [Feature:vsphere] verify invalid fstype" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] Network Partition [Disruptive] [Slow] [k8s.io] [StatefulSet] should not reschedule stateful pods if there is a network partition [Slow] [Disruptive]" classname="Kubernetes e2e suite" time="6.5619849949999995">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Simple pod should return command exit codes" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] should increase cluster size if pending pods are small [Feature:ClusterSizeAutoscalingScaleUp]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Loadbalancing: L7 GCE [Slow] [Feature:NEG] rolling update backend pods should not cause service disruption" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Downward API volume should provide podname as non-root with fsgroup [NodeFeature:FSGroup]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Loadbalancing: L7 GCE [Slow] [Feature:Ingress] should update ingress while sync failures occur on other ingresses" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] [HPA] Horizontal pod autoscaling (scale resource: CPU) [sig-autoscaling] ReplicationController light Should scale from 2 pods to 1 pod" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPath] should unmount if pod is force deleted while kubelet is down [Disruptive][Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] DisruptionController should update PodDisruptionBudget status" classname="Kubernetes e2e suite" time="45.227600575"></testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPartitioned] should fail if non-existent subpath is outside the volume [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] Should scale up GPU pool from 0 [GpuType:nvidia-tesla-v100] [Feature:ClusterSizeAutoscalingGpu]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: emptyDir] should support restarting containers using file as subpath [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gluster] should fail if non-existent subpath is outside the volume [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-autoscaling] Cluster size autoscaling [Slow] Should scale up GPU pool from 1 [GpuType:nvidia-tesla-p100] [Feature:ClusterSizeAutoscalingGpu]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: dir-bindmounted] Set fsGroup for local volume should set different fsGroup for second pod if first pod is deleted" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] Services should check NodePort out-of-range" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-cli] Kubectl client [k8s.io] Kubectl apply should apply a new configuration to an existing RC" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Storage Policy Based Volume Provisioning [Feature:vsphere] verify VSAN storage capability with valid diskStripes and objectSpaceReservation values is honored for dynamically provisioned pvc using storageclass" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-service-catalog] [Feature:PodPreset] PodPreset should not modify the pod on conflict" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] Daemon set [Serial] should run and stop complex daemon with node affinity" classname="Kubernetes e2e suite" time="22.094380309"></testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: blockfs] Set fsGroup for local volume should set different fsGroup for second pod if first pod is deleted" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] Set fsGroup for local volume should not set different fsGroups for two pods simultaneously" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]" classname="Kubernetes e2e suite" time="49.610261237"></testcase>
      <testcase name="[sig-instrumentation] MetricsGrabber should grab all metrics from a Scheduler." classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: nfsPVC] should support creating multiple subpath from same volumes [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] stateful Upgrade [Feature:StatefulUpgrade] [k8s.io] stateful upgrade should maintain a functioning cluster" classname="Kubernetes e2e suite" time="27.796363306">
          <failure type="Failure">/workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/lifecycle/cluster_upgrade.go:336&#xA;Expected error:&#xA;    &lt;*errors.errorString | 0xc4221316f0&gt;: {&#xA;        s: &#34;error running /kubernetes/hack/get-build.sh [-v ci/latest]; got error fork/exec /kubernetes/hack/get-build.sh: no such file or directory, stdout \&#34;\&#34;, stderr \&#34;\&#34;&#34;,&#xA;    }&#xA;    error running /kubernetes/hack/get-build.sh [-v ci/latest]; got error fork/exec /kubernetes/hack/get-build.sh: no such file or directory, stdout &#34;&#34;, stderr &#34;&#34;&#xA;not to have occurred&#xA;/workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/lifecycle/cluster_upgrade.go:338</failure>
          <system-out>[BeforeEach] [sig-apps] stateful Upgrade [Feature:StatefulUpgrade]&#xA;  /workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:141&#xA;STEP: Creating a kubernetes client&#xA;Jun 27 11:31:51.305: INFO: &gt;&gt;&gt; kubeConfig: /tmp/kubeconfig-583934977&#xA;STEP: Building a namespace api object&#xA;STEP: Waiting for a default service account to be provisioned in namespace&#xA;[BeforeEach] [sig-apps] stateful Upgrade [Feature:StatefulUpgrade]&#xA;  /workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:141&#xA;STEP: Creating a kubernetes client&#xA;Jun 27 11:31:51.566: INFO: &gt;&gt;&gt; kubeConfig: /tmp/kubeconfig-583934977&#xA;STEP: Building a namespace api object&#xA;STEP: Waiting for a default service account to be provisioned in namespace&#xA;[BeforeEach] [sig-apps] stateful Upgrade [Feature:StatefulUpgrade]&#xA;  /workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:141&#xA;STEP: Creating a kubernetes client&#xA;Jun 27 11:31:51.763: INFO: &gt;&gt;&gt; kubeConfig: /tmp/kubeconfig-583934977&#xA;STEP: Building a namespace api object&#xA;STEP: Waiting for a default service account to be provisioned in namespace&#xA;[BeforeEach] [sig-apps] stateful Upgrade [Feature:StatefulUpgrade]&#xA;  /workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:141&#xA;STEP: Creating a kubernetes client&#xA;Jun 27 11:31:52.030: INFO: &gt;&gt;&gt; kubeConfig: /tmp/kubeconfig-583934977&#xA;STEP: Building a namespace api object&#xA;STEP: Waiting for a default service account to be provisioned in namespace&#xA;[It] should maintain a functioning cluster&#xA;  /workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/lifecycle/cluster_upgrade.go:336&#xA;Jun 27 11:31:52.328: INFO: Getting real version for &#34;ci/latest&#34;&#xA;Jun 27 11:31:52.328: INFO: Running /kubernetes/hack/get-build.sh [-v ci/latest]&#xA;Jun 27 11:31:52.329: INFO: Unexpected error occurred: error running /kubernetes/hack/get-build.sh [-v ci/latest]; got error fork/exec /kubernetes/hack/get-build.sh: no such file or directory, stdout &#34;&#34;, stderr &#34;&#34;&#xA;[AfterEach] [sig-apps] stateful Upgrade [Feature:StatefulUpgrade]&#xA;  /workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:142&#xA;STEP: Collecting events from namespace &#34;e2e-tests-stateful-upgrade-x4wng&#34;.&#xA;STEP: Found 0 events.&#xA;Jun 27 11:31:52.403: INFO: POD                                                           NODE                                               PHASE    GRACE  CONDITIONS&#xA;Jun 27 11:31:52.403: INFO: sonobuoy                                                      gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:18 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:18 +0000 UTC  }]&#xA;Jun 27 11:31:52.403: INFO: sonobuoy-e2e-job-3f201e2f061345e7                             gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:02:00 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  }]&#xA;Jun 27 11:31:52.403: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-28cmn       gke-standard-cluster-1-default-pool-04796f61-sx27  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 11:01:50 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  }]&#xA;Jun 27 11:31:52.403: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-44pmg       gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 11:01:47 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  }]&#xA;Jun 27 11:31:52.403: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-rmqrw       gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 11:01:51 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  }]&#xA;Jun 27 11:31:52.403: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-xk7gb       gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 11:02:02 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  }]&#xA;Jun 27 11:31:52.403: INFO: event-exporter-v0.2.4-5c57bb7478-xtjl2                        gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:12 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 11:31:52.403: INFO: fluentd-gcp-scaler-5b5bf8b99f-vkg4s                           gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:12 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 11:31:52.403: INFO: fluentd-gcp-v3.2.0-2hkh9                                      gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:35 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  }]&#xA;Jun 27 11:31:52.403: INFO: fluentd-gcp-v3.2.0-j677d                                      gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:35 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  }]&#xA;Jun 27 11:31:52.403: INFO: fluentd-gcp-v3.2.0-jb9xn                                      gke-standard-cluster-1-default-pool-04796f61-sx27  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:35 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  }]&#xA;Jun 27 11:31:52.403: INFO: fluentd-gcp-v3.2.0-k8m8z                                      gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:36 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  }]&#xA;Jun 27 11:31:52.403: INFO: heapster-v1.6.0-beta.1-5dcd447597-kkgnc                       gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:24 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:26 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:24 +0000 UTC  }]&#xA;Jun 27 11:31:52.403: INFO: kube-dns-76dbb796c5-4ndph                                     gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:22 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 11:31:52.403: INFO: kube-dns-76dbb796c5-6qg5f                                     gke-standard-cluster-1-default-pool-04796f61-sx27  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:07 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:20 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:07 +0000 UTC  }]&#xA;Jun 27 11:31:52.403: INFO: kube-dns-autoscaler-67c97c87fb-4j4kd                          gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:12 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 11:31:52.403: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-2br3  gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:06 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 11:31:52.403: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-dmzx  gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:06 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 11:31:52.403: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-rr33  gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:04 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:12 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:04 +0000 UTC  }]&#xA;Jun 27 11:31:52.403: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-sx27  gke-standard-cluster-1-default-pool-04796f61-sx27  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:06 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 11:31:52.403: INFO: l7-default-backend-7ff48cffd7-g8pnv                           gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:20 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 11:31:52.403: INFO: metrics-server-v0.2.1-fd596d746-mnb77                         gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:11 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:14 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:11 +0000 UTC  }]&#xA;Jun 27 11:31:52.403: INFO: prometheus-to-sd-28w8p                                        gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:45 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:56 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:45 +0000 UTC  }]&#xA;Jun 27 11:31:52.403: INFO: prometheus-to-sd-2qsz9                                        gke-standard-cluster-1-default-pool-04796f61-sx27  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:46 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:55 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:46 +0000 UTC  }]&#xA;Jun 27 11:31:52.403: INFO: prometheus-to-sd-529s6                                        gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:46 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:51 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:46 +0000 UTC  }]&#xA;Jun 27 11:31:52.403: INFO: prometheus-to-sd-q6mwq                                        gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:45 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:53 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:45 +0000 UTC  }]&#xA;Jun 27 11:31:52.403: INFO: &#xA;Jun 27 11:31:52.419: INFO: &#xA;Logging node info for node gke-standard-cluster-1-default-pool-04796f61-2br3&#xA;Jun 27 11:31:52.427: INFO: Node Info: &amp;Node{ObjectMeta:k8s_io_apimachinery_pkg_apis_meta_v1.ObjectMeta{Name:gke-standard-cluster-1-default-pool-04796f61-2br3,GenerateName:,Namespace:,SelfLink:/api/v1/nodes/gke-standard-cluster-1-default-pool-04796f61-2br3,UID:55ee085e-98c0-11e9-93fd-42010a800028,ResourceVersion:32688,Generation:0,CreationTimestamp:2019-06-27 09:45:45 +0000 UTC,DeletionTimestamp:&lt;nil&gt;,DeletionGracePeriodSeconds:nil,Labels:map[string]string{beta.kubernetes.io/arch: amd64,beta.kubernetes.io/fluentd-ds-ready: true,beta.kubernetes.io/instance-type: n1-standard-4,beta.kubernetes.io/os: linux,cloud.google.com/gke-nodepool: default-pool,cloud.google.com/gke-os-distribution: cos,failure-domain.beta.kubernetes.io/region: us-central1,failure-domain.beta.kubernetes.io/zone: us-central1-a,kubernetes.io/hostname: gke-standard-cluster-1-default-pool-04796f61-2br3,},Annotations:map[string]string{container.googleapis.com/instance_id: 5263861497271497046,node.alpha.kubernetes.io/ttl: 0,volumes.kubernetes.io/controller-managed-attach-detach: true,},OwnerReferences:[],Finalizers:[],ClusterName:,Initializers:nil,},Spec:NodeSpec{PodCIDR:10.8.2.0/24,DoNotUse_ExternalID:,ProviderID:gce://sinuous-tuner-235209/us-central1-a/gke-standard-cluster-1-default-pool-04796f61-2br3,Unschedulable:false,Taints:[],ConfigSource:nil,},Status:NodeStatus{Capacity:ResourceList{cpu: {{4 0} {&lt;nil&gt;} 4 DecimalSI},ephemeral-storage: {{101241290752 0} {&lt;nil&gt;}  BinarySI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{15768948736 0} {&lt;nil&gt;} 15399364Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Allocatable:ResourceList{cpu: {{3920 -3} {&lt;nil&gt;} 3920m DecimalSI},ephemeral-storage: {{47093746742 0} {&lt;nil&gt;} 47093746742 DecimalSI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{13004902400 0} {&lt;nil&gt;} 12700100Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Phase:,Conditions:[{FrequentKubeletRestart False 2019-06-27 11:30:59 +0000 UTC 2019-06-27 09:49:03 +0000 UTC FrequentKubeletRestart kubelet is functioning properly} {FrequentDockerRestart False 2019-06-27 11:30:59 +0000 UTC 2019-06-27 09:49:04 +0000 UTC FrequentDockerRestart docker is functioning properly} {FrequentContainerdRestart False 2019-06-27 11:30:59 +0000 UTC 2019-06-27 09:49:05 +0000 UTC FrequentContainerdRestart containerd is functioning properly} {KernelDeadlock False 2019-06-27 11:30:59 +0000 UTC 2019-06-27 09:44:02 +0000 UTC KernelHasNoDeadlock kernel has no deadlock} {ReadonlyFilesystem False 2019-06-27 11:30:59 +0000 UTC 2019-06-27 09:44:02 +0000 UTC FilesystemIsNotReadOnly Filesystem is not read-only} {CorruptDockerOverlay2 False 2019-06-27 11:30:59 +0000 UTC 2019-06-27 09:49:03 +0000 UTC CorruptDockerOverlay2 docker overlay2 is functioning properly} {FrequentUnregisterNetDevice False 2019-06-27 11:30:59 +0000 UTC 2019-06-27 09:49:03 +0000 UTC UnregisterNetDevice node is functioning properly} {NetworkUnavailable False 2019-06-27 09:45:46 +0000 UTC 2019-06-27 09:45:46 +0000 UTC RouteCreated NodeController create implicit route} {OutOfDisk False 2019-06-27 11:31:46 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientDisk kubelet has sufficient disk space available} {MemoryPressure False 2019-06-27 11:31:46 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientMemory kubelet has sufficient memory available} {DiskPressure False 2019-06-27 11:31:46 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasNoDiskPressure kubelet has no disk pressure} {PIDPressure False 2019-06-27 11:31:46 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientPID kubelet has sufficient PID available} {Ready True 2019-06-27 11:31:46 +0000 UTC 2019-06-27 09:46:05 +0000 UTC KubeletReady kubelet is posting ready status. AppArmor enabled}],Addresses:[{InternalIP 10.128.0.42} {ExternalIP 35.232.42.152} {Hostname gke-standard-cluster-1-default-pool-04796f61-2br3}],DaemonEndpoints:NodeDaemonEndpoints{KubeletEndpoint:DaemonEndpoint{Port:10250,},},NodeInfo:NodeSystemInfo{MachineID:4ed4f0f644ff78a293f5a14239e1dc93,SystemUUID:4ED4F0F6-44FF-78A2-93F5-A14239E1DC93,BootID:df50bfdc-3ecb-4ada-a245-3c7fd247294f,KernelVersion:4.14.119+,OSImage:Container-Optimized OS from Google,ContainerRuntimeVersion:docker://17.3.2,KubeletVersion:v1.11.10-gke.4,KubeProxyVersion:v1.11.10-gke.4,OperatingSystem:linux,Architecture:amd64,},Images:[{[k8s.gcr.io/mysql-galera@sha256:daa2bc871bad84f4a05536fa3b0956ff8698b41e7f48c6280a6450cec6d25917 k8s.gcr.io/mysql-galera:e2e] 715149006} {[java@sha256:b91008e234402fc87e7889d6af1f36b6ece844c05989236d83d1f658a6f329b0 java:openjdk-8-jre] 311241763} {[gcr.io/heptio-images/sonobuoy-plugin-systemd-logs@sha256:58e077ba773ff5d7b6bba90771fad72217f0d10b913bb66bb0afb387c9552788 gcr.io/heptio-images/sonobuoy-plugin-systemd-logs:latest] 290890605} {[k8s.gcr.io/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e9eb2b k8s.gcr.io/node-problem-detector:v0.4.1] 286572743} {[gcr.io/stackdriver-agents/stackdriver-logging-agent@sha256:f8d5231b67b9c53f60068b535a11811d29d1b3efd53d2b79f2a2591ea338e4f2 gcr.io/stackdriver-agents/stackdriver-logging-agent:0.6-1.6.0-1] 223242132} {[k8s.gcr.io/zookeeper-install-3.5.0-alpha@sha256:60d7f3ce5ec9ff06bc82a1e42d4c66633b93ebd22a8c792a8d34f8c0078f6b68 k8s.gcr.io/zookeeper-install-3.5.0-alpha:e2e] 220145150} {[k8s.gcr.io/galera-install@sha256:7f8245935b92f170e22d7b2cdf802adc75da3a3e05120c50eaa97543e1c20b0a k8s.gcr.io/galera-install:0.1] 181241032} {[cockroachdb/cockroach@sha256:815acd11351fb5087edb0ec73896cd2baf5767dedc20ccd0bbe6d08d1e05b38f cockroachdb/cockroach:v1.0] 163225516} {[cockroachdb/cockroach-k8s-init@sha256:aa384ac9476677208acc0d0d625b0f277a7142603846cefb71f80706682c188c cockroachdb/cockroach-k8s-init:0.1] 153888353} {[k8s.gcr.io/fluentd-elasticsearch@sha256:b8c94527b489fb61d3d81ce5ad7f3ddbb7be71e9620a3a36e2bede2f2e487d73 k8s.gcr.io/fluentd-elasticsearch:v2.0.4] 135716379} {[debian@sha256:6b95a104400bb99ad60b47a48e37d5d1eb71a3f9ec8e86854e0cf64ecc5fd0e8 debian:jessie] 129072320} {[nginx@sha256:079aa93463d2566b7a81cbdf856afc6d4d2a6f9100ca3bcbecf24ade92c9a7fe nginx:latest] 109258867} {[k8s.gcr.io/nginx-slim-amd64@sha256:6654db6d4028756062edac466454ee5c9cf9b20ef79e35a81e3c840031eb1e2b k8s.gcr.io/nginx-slim-amd64:0.20] 103591055} {[k8s.gcr.io/kubernetes-dashboard-amd64@sha256:dc4026c1b595435ef5527ca598e1e9c4343076926d7d62b365c44831395adbd0 k8s.gcr.io/kubernetes-dashboard-amd64:v1.8.3] 102319441} {[gcr.io/google_containers/kube-proxy:v1.11.10-gke.4 k8s.gcr.io/kube-proxy:v1.11.10-gke.4] 102279340} {[k8s.gcr.io/echoserver@sha256:cb5c1bddd1b5665e1867a7fa1b5fa843a47ee433bbb75d4293888b71def53229 k8s.gcr.io/echoserver:1.10] 95361986} {[k8s.gcr.io/nginx-slim-amd64@sha256:8ca6a9ecef3b2ef02f6e0c3d449235d9c53d532f420cc0a29a6a133aa88df256 k8s.gcr.io/nginx-slim-amd64:0.21] 95339966} {[gcr.io/heptio-images/sonobuoy@sha256:d6d530b1ede4b82e9989aa1ba7ae4cd4fac09c6f7cb6a7c4f9270fff241e72c7 gcr.io/heptio-images/sonobuoy:v0.14.3] 89896078} {[k8s.gcr.io/fluentd-gcp-scaler@sha256:a5ace7506d393c4ed65eb2cbb6312c64ab357fcea16dff76b9055bc6e498e5ff k8s.gcr.io/fluentd-gcp-scaler:0.5.1] 86637208} {[k8s.gcr.io/heapster-amd64@sha256:9fae0af136ce0cf4f88393b3670f7139ffc464692060c374d2ae748e13144521 k8s.gcr.io/heapster-amd64:v1.6.0-beta.1] 76016169} {[k8s.gcr.io/ingress-gce-glbc-amd64@sha256:31d36bbd9c44caffa135fc78cf0737266fcf25e3cf0cd1c2fcbfbc4f7309cc52 k8s.gcr.io/ingress-gce-glbc-amd64:v1.1.1] 67801919} {[k8s.gcr.io/kube-addon-manager@sha256:d53486c3a0b49ebee019932878dc44232735d5622a51dbbdcec7124199020d09 k8s.gcr.io/kube-addon-manager:v8.7] 63322109} {[k8s.gcr.io/cpvpa-amd64@sha256:cfe7b0a11c9c8e18c87b1eb34fef9a7cbb8480a8da11fc2657f78dbf4739f869 k8s.gcr.io/cpvpa-amd64:v0.6.0] 51785854} {[k8s.gcr.io/cluster-proportional-autoscaler-amd64@sha256:003f98d9f411ddfa6ff6d539196355e03ddd69fa4ed38c7ffb8fec6f729afe2d k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.1.2-r2] 49648481} {[k8s.gcr.io/ip-masq-agent-amd64@sha256:1ffda57d87901bc01324c82ceb2145fe6a0448d3f0dd9cb65aa76a867cd62103 k8s.gcr.io/ip-masq-agent-amd64:v2.1.1] 49612505}],VolumesInUse:[kubernetes.io/gce-pd/gke-standard-cluster-1-pvc-804259ed-98c2-11e9-93fd-42010a800028],VolumesAttached:[{kubernetes.io/gce-pd/gke-standard-cluster-1-pvc-804259ed-98c2-11e9-93fd-42010a800028 /dev/disk/by-id/google-gke-standard-cluster-1-pvc-804259ed-98c2-11e9-93fd-42010a800028}],Config:nil,},}&#xA;Jun 27 11:31:52.427: INFO: &#xA;Logging kubelet events for node gke-standard-cluster-1-default-pool-04796f61-2br3&#xA;Jun 27 11:31:52.433: INFO: &#xA;Logging pods the kubelet thinks is on node gke-standard-cluster-1-default-pool-04796f61-2br3&#xA;Jun 27 11:31:52.463: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-44pmg started at 2019-06-27 10:01:32 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:31:52.464: INFO: &#x9;Container sonobuoy-worker ready: true, restart count 1&#xA;Jun 27 11:31:52.464: INFO: &#x9;Container systemd-logs ready: true, restart count 1&#xA;Jun 27 11:31:52.464: INFO: heapster-v1.6.0-beta.1-5dcd447597-kkgnc started at 2019-06-27 09:46:24 +0000 UTC (0+3 container statuses recorded)&#xA;Jun 27 11:31:52.464: INFO: &#x9;Container heapster ready: true, restart count 0&#xA;Jun 27 11:31:52.464: INFO: &#x9;Container heapster-nanny ready: true, restart count 0&#xA;Jun 27 11:31:52.464: INFO: &#x9;Container prom-to-sd ready: true, restart count 0&#xA;Jun 27 11:31:52.464: INFO: prometheus-to-sd-q6mwq started at 2019-06-27 09:45:45 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 11:31:52.464: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 11:31:52.464: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-2br3 started at &lt;nil&gt; (0+0 container statuses recorded)&#xA;Jun 27 11:31:52.464: INFO: fluentd-gcp-v3.2.0-2hkh9 started at 2019-06-27 09:46:25 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:31:52.464: INFO: &#x9;Container fluentd-gcp ready: true, restart count 0&#xA;Jun 27 11:31:52.464: INFO: &#x9;Container prometheus-to-sd-exporter ready: true, restart count 0&#xA;Jun 27 11:31:52.464: INFO: sonobuoy started at 2019-06-27 10:01:18 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 11:31:52.464: INFO: &#x9;Container kube-sonobuoy ready: true, restart count 0&#xA;Jun 27 11:31:52.525: INFO: &#xA;Latency metrics for node gke-standard-cluster-1-default-pool-04796f61-2br3&#xA;Jun 27 11:31:52.525: INFO: {Operation:stop_container Method:docker_operations_latency_microseconds Quantile:0.99 Latency:30.06882s}&#xA;Jun 27 11:31:52.525: INFO: &#xA;Logging node info for node gke-standard-cluster-1-default-pool-04796f61-dmzx&#xA;Jun 27 11:31:52.531: INFO: Node Info: &amp;Node{ObjectMeta:k8s_io_apimachinery_pkg_apis_meta_v1.ObjectMeta{Name:gke-standard-cluster-1-default-pool-04796f61-dmzx,GenerateName:,Namespace:,SelfLink:/api/v1/nodes/gke-standard-cluster-1-default-pool-04796f61-dmzx,UID:563a4f0e-98c0-11e9-93fd-42010a800028,ResourceVersion:32694,Generation:0,CreationTimestamp:2019-06-27 09:45:45 +0000 UTC,DeletionTimestamp:&lt;nil&gt;,DeletionGracePeriodSeconds:nil,Labels:map[string]string{beta.kubernetes.io/arch: amd64,beta.kubernetes.io/fluentd-ds-ready: true,beta.kubernetes.io/instance-type: n1-standard-4,beta.kubernetes.io/os: linux,cloud.google.com/gke-nodepool: default-pool,cloud.google.com/gke-os-distribution: cos,failure-domain.beta.kubernetes.io/region: us-central1,failure-domain.beta.kubernetes.io/zone: us-central1-a,kubernetes.io/hostname: gke-standard-cluster-1-default-pool-04796f61-dmzx,},Annotations:map[string]string{container.googleapis.com/instance_id: 8240935979917586774,node.alpha.kubernetes.io/ttl: 0,volumes.kubernetes.io/controller-managed-attach-detach: true,},OwnerReferences:[],Finalizers:[],ClusterName:,Initializers:nil,},Spec:NodeSpec{PodCIDR:10.8.4.0/24,DoNotUse_ExternalID:,ProviderID:gce://sinuous-tuner-235209/us-central1-a/gke-standard-cluster-1-default-pool-04796f61-dmzx,Unschedulable:false,Taints:[],ConfigSource:nil,},Status:NodeStatus{Capacity:ResourceList{cpu: {{4 0} {&lt;nil&gt;} 4 DecimalSI},ephemeral-storage: {{101241290752 0} {&lt;nil&gt;}  BinarySI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{15768940544 0} {&lt;nil&gt;} 15399356Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Allocatable:ResourceList{cpu: {{3920 -3} {&lt;nil&gt;} 3920m DecimalSI},ephemeral-storage: {{47093746742 0} {&lt;nil&gt;} 47093746742 DecimalSI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{13004894208 0} {&lt;nil&gt;} 12700092Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Phase:,Conditions:[{FrequentKubeletRestart False 2019-06-27 11:30:54 +0000 UTC 2019-06-27 09:49:04 +0000 UTC FrequentKubeletRestart kubelet is functioning properly} {FrequentDockerRestart False 2019-06-27 11:30:54 +0000 UTC 2019-06-27 09:49:05 +0000 UTC FrequentDockerRestart docker is functioning properly} {FrequentContainerdRestart False 2019-06-27 11:30:54 +0000 UTC 2019-06-27 09:49:06 +0000 UTC FrequentContainerdRestart containerd is functioning properly} {CorruptDockerOverlay2 False 2019-06-27 11:30:54 +0000 UTC 2019-06-27 09:49:04 +0000 UTC CorruptDockerOverlay2 docker overlay2 is functioning properly} {KernelDeadlock False 2019-06-27 11:30:54 +0000 UTC 2019-06-27 09:44:03 +0000 UTC KernelHasNoDeadlock kernel has no deadlock} {ReadonlyFilesystem False 2019-06-27 11:30:54 +0000 UTC 2019-06-27 09:44:03 +0000 UTC FilesystemIsNotReadOnly Filesystem is not read-only} {FrequentUnregisterNetDevice False 2019-06-27 11:30:54 +0000 UTC 2019-06-27 09:49:04 +0000 UTC UnregisterNetDevice node is functioning properly} {NetworkUnavailable False 2019-06-27 09:45:46 +0000 UTC 2019-06-27 09:45:46 +0000 UTC RouteCreated NodeController create implicit route} {OutOfDisk False 2019-06-27 11:31:47 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientDisk kubelet has sufficient disk space available} {MemoryPressure False 2019-06-27 11:31:47 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientMemory kubelet has sufficient memory available} {DiskPressure False 2019-06-27 11:31:47 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasNoDiskPressure kubelet has no disk pressure} {PIDPressure False 2019-06-27 11:31:47 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientPID kubelet has sufficient PID available} {Ready True 2019-06-27 11:31:47 +0000 UTC 2019-06-27 09:46:06 +0000 UTC KubeletReady kubelet is posting ready status. AppArmor enabled}],Addresses:[{InternalIP 10.128.0.45} {ExternalIP 34.67.69.128} {Hostname gke-standard-cluster-1-default-pool-04796f61-dmzx}],DaemonEndpoints:NodeDaemonEndpoints{KubeletEndpoint:DaemonEndpoint{Port:10250,},},NodeInfo:NodeSystemInfo{MachineID:1e2b8bee3c68760edea50ec32bebc9c7,SystemUUID:1E2B8BEE-3C68-760E-DEA5-0EC32BEBC9C7,BootID:cca2dcb1-4058-446f-b35a-be81be4bdd91,KernelVersion:4.14.119+,OSImage:Container-Optimized OS from Google,ContainerRuntimeVersion:docker://17.3.2,KubeletVersion:v1.11.10-gke.4,KubeProxyVersion:v1.11.10-gke.4,OperatingSystem:linux,Architecture:amd64,},Images:[{[k8s.gcr.io/mysql-galera@sha256:daa2bc871bad84f4a05536fa3b0956ff8698b41e7f48c6280a6450cec6d25917 k8s.gcr.io/mysql-galera:e2e] 715149006} {[gcr.io/heptio-images/kube-conformance@sha256:e208e87718fee7fe922ad69f740ca23e5843d05faa014ef23a37cdd017944946 gcr.io/heptio-images/kube-conformance:v1.11] 532217543} {[java@sha256:b91008e234402fc87e7889d6af1f36b6ece844c05989236d83d1f658a6f329b0 java:openjdk-8-jre] 311241763} {[k8s.gcr.io/redis-install-3.2.0@sha256:84305c74214f769ac3bdb3b6ceae35b8f13dd5485a6255a31776f3f3bcb2e4f3 k8s.gcr.io/redis-install-3.2.0:e2e] 294462045} {[gcr.io/heptio-images/sonobuoy-plugin-systemd-logs@sha256:58e077ba773ff5d7b6bba90771fad72217f0d10b913bb66bb0afb387c9552788 gcr.io/heptio-images/sonobuoy-plugin-systemd-logs:latest] 290890605} {[k8s.gcr.io/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e9eb2b k8s.gcr.io/node-problem-detector:v0.4.1] 286572743} {[gcr.io/stackdriver-agents/stackdriver-logging-agent@sha256:f8d5231b67b9c53f60068b535a11811d29d1b3efd53d2b79f2a2591ea338e4f2 gcr.io/stackdriver-agents/stackdriver-logging-agent:0.6-1.6.0-1] 223242132} {[k8s.gcr.io/zookeeper-install-3.5.0-alpha@sha256:60d7f3ce5ec9ff06bc82a1e42d4c66633b93ebd22a8c792a8d34f8c0078f6b68 k8s.gcr.io/zookeeper-install-3.5.0-alpha:e2e] 220145150} {[k8s.gcr.io/galera-install@sha256:7f8245935b92f170e22d7b2cdf802adc75da3a3e05120c50eaa97543e1c20b0a k8s.gcr.io/galera-install:0.1] 181241032} {[cockroachdb/cockroach@sha256:815acd11351fb5087edb0ec73896cd2baf5767dedc20ccd0bbe6d08d1e05b38f cockroachdb/cockroach:v1.0] 163225516} {[cockroachdb/cockroach-k8s-init@sha256:aa384ac9476677208acc0d0d625b0f277a7142603846cefb71f80706682c188c cockroachdb/cockroach-k8s-init:0.1] 153888353} {[k8s.gcr.io/fluentd-elasticsearch@sha256:b8c94527b489fb61d3d81ce5ad7f3ddbb7be71e9620a3a36e2bede2f2e487d73 k8s.gcr.io/fluentd-elasticsearch:v2.0.4] 135716379} {[debian@sha256:6b95a104400bb99ad60b47a48e37d5d1eb71a3f9ec8e86854e0cf64ecc5fd0e8 debian:jessie] 129072320} {[nginx@sha256:079aa93463d2566b7a81cbdf856afc6d4d2a6f9100ca3bcbecf24ade92c9a7fe nginx:latest] 109258867} {[k8s.gcr.io/nginx-slim-amd64@sha256:6654db6d4028756062edac466454ee5c9cf9b20ef79e35a81e3c840031eb1e2b k8s.gcr.io/nginx-slim-amd64:0.20] 103591055} {[k8s.gcr.io/kubernetes-dashboard-amd64@sha256:dc4026c1b595435ef5527ca598e1e9c4343076926d7d62b365c44831395adbd0 k8s.gcr.io/kubernetes-dashboard-amd64:v1.8.3] 102319441} {[gcr.io/google_containers/kube-proxy:v1.11.10-gke.4 k8s.gcr.io/kube-proxy:v1.11.10-gke.4] 102279340} {[k8s.gcr.io/echoserver@sha256:cb5c1bddd1b5665e1867a7fa1b5fa843a47ee433bbb75d4293888b71def53229 k8s.gcr.io/echoserver:1.10] 95361986} {[k8s.gcr.io/nginx-slim-amd64@sha256:8ca6a9ecef3b2ef02f6e0c3d449235d9c53d532f420cc0a29a6a133aa88df256 k8s.gcr.io/nginx-slim-amd64:0.21] 95339966} {[gcr.io/heptio-images/sonobuoy@sha256:d6d530b1ede4b82e9989aa1ba7ae4cd4fac09c6f7cb6a7c4f9270fff241e72c7 gcr.io/heptio-images/sonobuoy:v0.14.3] 89896078} {[k8s.gcr.io/fluentd-gcp-scaler@sha256:a5ace7506d393c4ed65eb2cbb6312c64ab357fcea16dff76b9055bc6e498e5ff k8s.gcr.io/fluentd-gcp-scaler:0.5.1] 86637208} {[k8s.gcr.io/heapster-amd64@sha256:9fae0af136ce0cf4f88393b3670f7139ffc464692060c374d2ae748e13144521 k8s.gcr.io/heapster-amd64:v1.6.0-beta.1] 76016169} {[k8s.gcr.io/ingress-gce-glbc-amd64@sha256:31d36bbd9c44caffa135fc78cf0737266fcf25e3cf0cd1c2fcbfbc4f7309cc52 k8s.gcr.io/ingress-gce-glbc-amd64:v1.1.1] 67801919} {[k8s.gcr.io/kube-addon-manager@sha256:d53486c3a0b49ebee019932878dc44232735d5622a51dbbdcec7124199020d09 k8s.gcr.io/kube-addon-manager:v8.7] 63322109} {[k8s.gcr.io/cpvpa-amd64@sha256:cfe7b0a11c9c8e18c87b1eb34fef9a7cbb8480a8da11fc2657f78dbf4739f869 k8s.gcr.io/cpvpa-amd64:v0.6.0] 51785854}],VolumesInUse:[],VolumesAttached:[],Config:nil,},}&#xA;Jun 27 11:31:52.532: INFO: &#xA;Logging kubelet events for node gke-standard-cluster-1-default-pool-04796f61-dmzx&#xA;Jun 27 11:31:52.537: INFO: &#xA;Logging pods the kubelet thinks is on node gke-standard-cluster-1-default-pool-04796f61-dmzx&#xA;Jun 27 11:31:52.554: INFO: metrics-server-v0.2.1-fd596d746-mnb77 started at 2019-06-27 09:46:11 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:31:52.554: INFO: &#x9;Container metrics-server ready: true, restart count 0&#xA;Jun 27 11:31:52.554: INFO: &#x9;Container metrics-server-nanny ready: true, restart count 0&#xA;Jun 27 11:31:52.554: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-dmzx started at &lt;nil&gt; (0+0 container statuses recorded)&#xA;Jun 27 11:31:52.554: INFO: prometheus-to-sd-529s6 started at 2019-06-27 09:45:46 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 11:31:52.554: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 11:31:52.554: INFO: fluentd-gcp-v3.2.0-j677d started at 2019-06-27 09:46:25 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:31:52.554: INFO: &#x9;Container fluentd-gcp ready: true, restart count 0&#xA;Jun 27 11:31:52.554: INFO: &#x9;Container prometheus-to-sd-exporter ready: true, restart count 0&#xA;Jun 27 11:31:52.554: INFO: sonobuoy-e2e-job-3f201e2f061345e7 started at 2019-06-27 10:01:32 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:31:52.554: INFO: &#x9;Container e2e ready: true, restart count 0&#xA;Jun 27 11:31:52.554: INFO: &#x9;Container sonobuoy-worker ready: true, restart count 0&#xA;Jun 27 11:31:52.554: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-xk7gb started at 2019-06-27 10:01:32 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:31:52.554: INFO: &#x9;Container sonobuoy-worker ready: true, restart count 1&#xA;Jun 27 11:31:52.554: INFO: &#x9;Container systemd-logs ready: true, restart count 1&#xA;Jun 27 11:31:52.641: INFO: &#xA;Latency metrics for node gke-standard-cluster-1-default-pool-04796f61-dmzx&#xA;Jun 27 11:31:52.641: INFO: {Operation:stop_container Method:docker_operations_latency_microseconds Quantile:0.99 Latency:30.071565s}&#xA;Jun 27 11:31:52.641: INFO: &#xA;Logging node info for node gke-standard-cluster-1-default-pool-04796f61-rr33&#xA;Jun 27 11:31:52.646: INFO: Node Info: &amp;Node{ObjectMeta:k8s_io_apimachinery_pkg_apis_meta_v1.ObjectMeta{Name:gke-standard-cluster-1-default-pool-04796f61-rr33,GenerateName:,Namespace:,SelfLink:/api/v1/nodes/gke-standard-cluster-1-default-pool-04796f61-rr33,UID:55b363e1-98c0-11e9-93fd-42010a800028,ResourceVersion:32682,Generation:0,CreationTimestamp:2019-06-27 09:45:45 +0000 UTC,DeletionTimestamp:&lt;nil&gt;,DeletionGracePeriodSeconds:nil,Labels:map[string]string{beta.kubernetes.io/arch: amd64,beta.kubernetes.io/fluentd-ds-ready: true,beta.kubernetes.io/instance-type: n1-standard-4,beta.kubernetes.io/os: linux,cloud.google.com/gke-nodepool: default-pool,cloud.google.com/gke-os-distribution: cos,failure-domain.beta.kubernetes.io/region: us-central1,failure-domain.beta.kubernetes.io/zone: us-central1-a,kubernetes.io/hostname: gke-standard-cluster-1-default-pool-04796f61-rr33,},Annotations:map[string]string{container.googleapis.com/instance_id: 4128615952046174550,node.alpha.kubernetes.io/ttl: 0,volumes.kubernetes.io/controller-managed-attach-detach: true,},OwnerReferences:[],Finalizers:[],ClusterName:,Initializers:nil,},Spec:NodeSpec{PodCIDR:10.8.1.0/24,DoNotUse_ExternalID:,ProviderID:gce://sinuous-tuner-235209/us-central1-a/gke-standard-cluster-1-default-pool-04796f61-rr33,Unschedulable:false,Taints:[],ConfigSource:nil,},Status:NodeStatus{Capacity:ResourceList{cpu: {{4 0} {&lt;nil&gt;} 4 DecimalSI},ephemeral-storage: {{101241290752 0} {&lt;nil&gt;}  BinarySI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{15768948736 0} {&lt;nil&gt;} 15399364Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Allocatable:ResourceList{cpu: {{3920 -3} {&lt;nil&gt;} 3920m DecimalSI},ephemeral-storage: {{47093746742 0} {&lt;nil&gt;} 47093746742 DecimalSI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{13004902400 0} {&lt;nil&gt;} 12700100Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Phase:,Conditions:[{FrequentUnregisterNetDevice False 2019-06-27 11:31:05 +0000 UTC 2019-06-27 09:49:03 +0000 UTC UnregisterNetDevice node is functioning properly} {KernelDeadlock False 2019-06-27 11:31:05 +0000 UTC 2019-06-27 09:44:02 +0000 UTC KernelHasNoDeadlock kernel has no deadlock} {ReadonlyFilesystem False 2019-06-27 11:31:05 +0000 UTC 2019-06-27 09:44:02 +0000 UTC FilesystemIsNotReadOnly Filesystem is not read-only} {FrequentKubeletRestart False 2019-06-27 11:31:05 +0000 UTC 2019-06-27 09:49:03 +0000 UTC FrequentKubeletRestart kubelet is functioning properly} {FrequentDockerRestart False 2019-06-27 11:31:05 +0000 UTC 2019-06-27 09:49:04 +0000 UTC FrequentDockerRestart docker is functioning properly} {FrequentContainerdRestart False 2019-06-27 11:31:05 +0000 UTC 2019-06-27 09:49:05 +0000 UTC FrequentContainerdRestart containerd is functioning properly} {CorruptDockerOverlay2 False 2019-06-27 11:31:05 +0000 UTC 2019-06-27 09:49:03 +0000 UTC CorruptDockerOverlay2 docker overlay2 is functioning properly} {NetworkUnavailable False 2019-06-27 09:45:45 +0000 UTC 2019-06-27 09:45:45 +0000 UTC RouteCreated NodeController create implicit route} {OutOfDisk False 2019-06-27 11:31:45 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientDisk kubelet has sufficient disk space available} {MemoryPressure False 2019-06-27 11:31:45 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientMemory kubelet has sufficient memory available} {DiskPressure False 2019-06-27 11:31:45 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasNoDiskPressure kubelet has no disk pressure} {PIDPressure False 2019-06-27 11:31:45 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientPID kubelet has sufficient PID available} {Ready True 2019-06-27 11:31:45 +0000 UTC 2019-06-27 09:46:05 +0000 UTC KubeletReady kubelet is posting ready status. AppArmor enabled}],Addresses:[{InternalIP 10.128.0.44} {ExternalIP 35.226.22.222} {Hostname gke-standard-cluster-1-default-pool-04796f61-rr33}],DaemonEndpoints:NodeDaemonEndpoints{KubeletEndpoint:DaemonEndpoint{Port:10250,},},NodeInfo:NodeSystemInfo{MachineID:46f905cfd94d81d48ea29f40cb3028b5,SystemUUID:46F905CF-D94D-81D4-8EA2-9F40CB3028B5,BootID:1a132385-80e1-4ef8-8613-100779f1bf54,KernelVersion:4.14.119+,OSImage:Container-Optimized OS from Google,ContainerRuntimeVersion:docker://17.3.2,KubeletVersion:v1.11.10-gke.4,KubeProxyVersion:v1.11.10-gke.4,OperatingSystem:linux,Architecture:amd64,},Images:[{[java@sha256:b91008e234402fc87e7889d6af1f36b6ece844c05989236d83d1f658a6f329b0 java:openjdk-8-jre] 311241763} {[gcr.io/heptio-images/sonobuoy-plugin-systemd-logs@sha256:58e077ba773ff5d7b6bba90771fad72217f0d10b913bb66bb0afb387c9552788 gcr.io/heptio-images/sonobuoy-plugin-systemd-logs:latest] 290890605} {[k8s.gcr.io/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e9eb2b k8s.gcr.io/node-problem-detector:v0.4.1] 286572743} {[gcr.io/stackdriver-agents/stackdriver-logging-agent@sha256:f8d5231b67b9c53f60068b535a11811d29d1b3efd53d2b79f2a2591ea338e4f2 gcr.io/stackdriver-agents/stackdriver-logging-agent:0.6-1.6.0-1] 223242132} {[k8s.gcr.io/zookeeper-install-3.5.0-alpha@sha256:60d7f3ce5ec9ff06bc82a1e42d4c66633b93ebd22a8c792a8d34f8c0078f6b68 k8s.gcr.io/zookeeper-install-3.5.0-alpha:e2e] 220145150} {[cockroachdb/cockroach@sha256:815acd11351fb5087edb0ec73896cd2baf5767dedc20ccd0bbe6d08d1e05b38f cockroachdb/cockroach:v1.0] 163225516} {[cockroachdb/cockroach-k8s-init@sha256:aa384ac9476677208acc0d0d625b0f277a7142603846cefb71f80706682c188c cockroachdb/cockroach-k8s-init:0.1] 153888353} {[k8s.gcr.io/fluentd-elasticsearch@sha256:b8c94527b489fb61d3d81ce5ad7f3ddbb7be71e9620a3a36e2bede2f2e487d73 k8s.gcr.io/fluentd-elasticsearch:v2.0.4] 135716379} {[k8s.gcr.io/nginx-slim-amd64@sha256:6654db6d4028756062edac466454ee5c9cf9b20ef79e35a81e3c840031eb1e2b k8s.gcr.io/nginx-slim-amd64:0.20] 103591055} {[k8s.gcr.io/kubernetes-dashboard-amd64@sha256:dc4026c1b595435ef5527ca598e1e9c4343076926d7d62b365c44831395adbd0 k8s.gcr.io/kubernetes-dashboard-amd64:v1.8.3] 102319441} {[gcr.io/google_containers/kube-proxy:v1.11.10-gke.4 k8s.gcr.io/kube-proxy:v1.11.10-gke.4] 102279340} {[k8s.gcr.io/echoserver@sha256:cb5c1bddd1b5665e1867a7fa1b5fa843a47ee433bbb75d4293888b71def53229 k8s.gcr.io/echoserver:1.10] 95361986} {[k8s.gcr.io/nginx-slim-amd64@sha256:8ca6a9ecef3b2ef02f6e0c3d449235d9c53d532f420cc0a29a6a133aa88df256 k8s.gcr.io/nginx-slim-amd64:0.21] 95339966} {[gcr.io/heptio-images/sonobuoy@sha256:d6d530b1ede4b82e9989aa1ba7ae4cd4fac09c6f7cb6a7c4f9270fff241e72c7 gcr.io/heptio-images/sonobuoy:v0.14.3] 89896078} {[k8s.gcr.io/fluentd-gcp-scaler@sha256:a5ace7506d393c4ed65eb2cbb6312c64ab357fcea16dff76b9055bc6e498e5ff k8s.gcr.io/fluentd-gcp-scaler:0.5.1] 86637208} {[k8s.gcr.io/heapster-amd64@sha256:9fae0af136ce0cf4f88393b3670f7139ffc464692060c374d2ae748e13144521 k8s.gcr.io/heapster-amd64:v1.6.0-beta.1] 76016169} {[k8s.gcr.io/ingress-gce-glbc-amd64@sha256:31d36bbd9c44caffa135fc78cf0737266fcf25e3cf0cd1c2fcbfbc4f7309cc52 k8s.gcr.io/ingress-gce-glbc-amd64:v1.1.1] 67801919} {[k8s.gcr.io/kube-addon-manager@sha256:d53486c3a0b49ebee019932878dc44232735d5622a51dbbdcec7124199020d09 k8s.gcr.io/kube-addon-manager:v8.7] 63322109} {[k8s.gcr.io/cpvpa-amd64@sha256:cfe7b0a11c9c8e18c87b1eb34fef9a7cbb8480a8da11fc2657f78dbf4739f869 k8s.gcr.io/cpvpa-amd64:v0.6.0] 51785854} {[k8s.gcr.io/k8s-dns-kube-dns-amd64@sha256:618a82fa66cf0c75e4753369a6999032372be7308866fc9afb381789b1e5ad52 k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.13] 51157394} {[k8s.gcr.io/cluster-proportional-autoscaler-amd64@sha256:003f98d9f411ddfa6ff6d539196355e03ddd69fa4ed38c7ffb8fec6f729afe2d k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.1.2-r2] 49648481} {[k8s.gcr.io/ip-masq-agent-amd64@sha256:1ffda57d87901bc01324c82ceb2145fe6a0448d3f0dd9cb65aa76a867cd62103 k8s.gcr.io/ip-masq-agent-amd64:v2.1.1] 49612505} {[k8s.gcr.io/k8s-dns-kube-dns-amd64@sha256:b99fc3eee2a9f052f7eb4cc00f15eb12fc405fa41019baa2d6b79847ae7284a8 k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.10] 49549457} {[k8s.gcr.io/rescheduler@sha256:156cfbfd05a5a815206fd2eeb6cbdaf1596d71ea4b415d3a6c43071dd7b99450 k8s.gcr.io/rescheduler:v0.4.0] 48973149} {[k8s.gcr.io/event-exporter@sha256:16ca66e2b5dc7a1ce6a5aafcb21d0885828b75cdfc08135430480f7ad2364adc k8s.gcr.io/event-exporter:v0.2.4] 47261019}],VolumesInUse:[],VolumesAttached:[],Config:nil,},}&#xA;Jun 27 11:31:52.647: INFO: &#xA;Logging kubelet events for node gke-standard-cluster-1-default-pool-04796f61-rr33&#xA;Jun 27 11:31:52.669: INFO: &#xA;Logging pods the kubelet thinks is on node gke-standard-cluster-1-default-pool-04796f61-rr33&#xA;Jun 27 11:31:52.685: INFO: kube-dns-autoscaler-67c97c87fb-4j4kd started at 2019-06-27 09:46:05 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 11:31:52.685: INFO: &#x9;Container autoscaler ready: true, restart count 0&#xA;Jun 27 11:31:52.685: INFO: kube-dns-76dbb796c5-4ndph started at 2019-06-27 09:46:05 +0000 UTC (0+4 container statuses recorded)&#xA;Jun 27 11:31:52.685: INFO: &#x9;Container dnsmasq ready: true, restart count 0&#xA;Jun 27 11:31:52.685: INFO: &#x9;Container kubedns ready: true, restart count 0&#xA;Jun 27 11:31:52.685: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 11:31:52.685: INFO: &#x9;Container sidecar ready: true, restart count 0&#xA;Jun 27 11:31:52.685: INFO: fluentd-gcp-scaler-5b5bf8b99f-vkg4s started at 2019-06-27 09:46:05 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 11:31:52.685: INFO: &#x9;Container fluentd-gcp-scaler ready: true, restart count 0&#xA;Jun 27 11:31:52.685: INFO: prometheus-to-sd-28w8p started at 2019-06-27 09:45:45 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 11:31:52.685: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 11:31:52.685: INFO: event-exporter-v0.2.4-5c57bb7478-xtjl2 started at 2019-06-27 09:46:05 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:31:52.685: INFO: &#x9;Container event-exporter ready: true, restart count 0&#xA;Jun 27 11:31:52.685: INFO: &#x9;Container prometheus-to-sd-exporter ready: true, restart count 0&#xA;Jun 27 11:31:52.685: INFO: l7-default-backend-7ff48cffd7-g8pnv started at 2019-06-27 09:46:05 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 11:31:52.685: INFO: &#x9;Container default-http-backend ready: true, restart count 0&#xA;Jun 27 11:31:52.685: INFO: fluentd-gcp-v3.2.0-k8m8z started at 2019-06-27 09:46:25 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:31:52.685: INFO: &#x9;Container fluentd-gcp ready: true, restart count 0&#xA;Jun 27 11:31:52.685: INFO: &#x9;Container prometheus-to-sd-exporter ready: true, restart count 0&#xA;Jun 27 11:31:52.685: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-rr33 started at &lt;nil&gt; (0+0 container statuses recorded)&#xA;Jun 27 11:31:52.685: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-rmqrw started at 2019-06-27 10:01:32 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:31:52.685: INFO: &#x9;Container sonobuoy-worker ready: true, restart count 1&#xA;Jun 27 11:31:52.685: INFO: &#x9;Container systemd-logs ready: true, restart count 1&#xA;Jun 27 11:31:52.745: INFO: &#xA;Latency metrics for node gke-standard-cluster-1-default-pool-04796f61-rr33&#xA;Jun 27 11:31:52.745: INFO: &#xA;Logging node info for node gke-standard-cluster-1-default-pool-04796f61-sx27&#xA;Jun 27 11:31:52.750: INFO: Node Info: &amp;Node{ObjectMeta:k8s_io_apimachinery_pkg_apis_meta_v1.ObjectMeta{Name:gke-standard-cluster-1-default-pool-04796f61-sx27,GenerateName:,Namespace:,SelfLink:/api/v1/nodes/gke-standard-cluster-1-default-pool-04796f61-sx27,UID:560b3037-98c0-11e9-93fd-42010a800028,ResourceVersion:32691,Generation:0,CreationTimestamp:2019-06-27 09:45:45 +0000 UTC,DeletionTimestamp:&lt;nil&gt;,DeletionGracePeriodSeconds:nil,Labels:map[string]string{beta.kubernetes.io/arch: amd64,beta.kubernetes.io/fluentd-ds-ready: true,beta.kubernetes.io/instance-type: n1-standard-4,beta.kubernetes.io/os: linux,cloud.google.com/gke-nodepool: default-pool,cloud.google.com/gke-os-distribution: cos,failure-domain.beta.kubernetes.io/region: us-central1,failure-domain.beta.kubernetes.io/zone: us-central1-a,kubernetes.io/hostname: gke-standard-cluster-1-default-pool-04796f61-sx27,},Annotations:map[string]string{container.googleapis.com/instance_id: 7591417305628225878,node.alpha.kubernetes.io/ttl: 0,volumes.kubernetes.io/controller-managed-attach-detach: true,},OwnerReferences:[],Finalizers:[],ClusterName:,Initializers:nil,},Spec:NodeSpec{PodCIDR:10.8.0.0/24,DoNotUse_ExternalID:,ProviderID:gce://sinuous-tuner-235209/us-central1-a/gke-standard-cluster-1-default-pool-04796f61-sx27,Unschedulable:false,Taints:[],ConfigSource:nil,},Status:NodeStatus{Capacity:ResourceList{cpu: {{4 0} {&lt;nil&gt;} 4 DecimalSI},ephemeral-storage: {{101241290752 0} {&lt;nil&gt;}  BinarySI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{15768948736 0} {&lt;nil&gt;} 15399364Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Allocatable:ResourceList{cpu: {{3920 -3} {&lt;nil&gt;} 3920m DecimalSI},ephemeral-storage: {{47093746742 0} {&lt;nil&gt;} 47093746742 DecimalSI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{13004902400 0} {&lt;nil&gt;} 12700100Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Phase:,Conditions:[{CorruptDockerOverlay2 False 2019-06-27 11:30:57 +0000 UTC 2019-06-27 09:49:03 +0000 UTC CorruptDockerOverlay2 docker overlay2 is functioning properly} {FrequentUnregisterNetDevice False 2019-06-27 11:30:57 +0000 UTC 2019-06-27 09:49:03 +0000 UTC UnregisterNetDevice node is functioning properly} {FrequentKubeletRestart False 2019-06-27 11:30:57 +0000 UTC 2019-06-27 09:49:03 +0000 UTC FrequentKubeletRestart kubelet is functioning properly} {FrequentDockerRestart False 2019-06-27 11:30:57 +0000 UTC 2019-06-27 09:49:04 +0000 UTC FrequentDockerRestart docker is functioning properly} {FrequentContainerdRestart False 2019-06-27 11:30:57 +0000 UTC 2019-06-27 09:49:05 +0000 UTC FrequentContainerdRestart containerd is functioning properly} {KernelDeadlock False 2019-06-27 11:30:57 +0000 UTC 2019-06-27 09:44:02 +0000 UTC KernelHasNoDeadlock kernel has no deadlock} {ReadonlyFilesystem False 2019-06-27 11:30:57 +0000 UTC 2019-06-27 09:44:02 +0000 UTC FilesystemIsNotReadOnly Filesystem is not read-only} {NetworkUnavailable False 2019-06-27 09:45:46 +0000 UTC 2019-06-27 09:45:46 +0000 UTC RouteCreated NodeController create implicit route} {OutOfDisk False 2019-06-27 11:31:47 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientDisk kubelet has sufficient disk space available} {MemoryPressure False 2019-06-27 11:31:47 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientMemory kubelet has sufficient memory available} {DiskPressure False 2019-06-27 11:31:47 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasNoDiskPressure kubelet has no disk pressure} {PIDPressure False 2019-06-27 11:31:47 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientPID kubelet has sufficient PID available} {Ready True 2019-06-27 11:31:47 +0000 UTC 2019-06-27 09:46:06 +0000 UTC KubeletReady kubelet is posting ready status. AppArmor enabled}],Addresses:[{InternalIP 10.128.0.41} {ExternalIP 34.67.223.57} {Hostname gke-standard-cluster-1-default-pool-04796f61-sx27}],DaemonEndpoints:NodeDaemonEndpoints{KubeletEndpoint:DaemonEndpoint{Port:10250,},},NodeInfo:NodeSystemInfo{MachineID:ae4216d32aefe90029e9232dc77c1eda,SystemUUID:AE4216D3-2AEF-E900-29E9-232DC77C1EDA,BootID:75bdcdda-ed72-4df2-bb2c-68fbb20cc027,KernelVersion:4.14.119+,OSImage:Container-Optimized OS from Google,ContainerRuntimeVersion:docker://17.3.2,KubeletVersion:v1.11.10-gke.4,KubeProxyVersion:v1.11.10-gke.4,OperatingSystem:linux,Architecture:amd64,},Images:[{[k8s.gcr.io/mysql-galera@sha256:daa2bc871bad84f4a05536fa3b0956ff8698b41e7f48c6280a6450cec6d25917 k8s.gcr.io/mysql-galera:e2e] 715149006} {[java@sha256:b91008e234402fc87e7889d6af1f36b6ece844c05989236d83d1f658a6f329b0 java:openjdk-8-jre] 311241763} {[gcr.io/heptio-images/sonobuoy-plugin-systemd-logs@sha256:58e077ba773ff5d7b6bba90771fad72217f0d10b913bb66bb0afb387c9552788 gcr.io/heptio-images/sonobuoy-plugin-systemd-logs:latest] 290890605} {[k8s.gcr.io/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e9eb2b k8s.gcr.io/node-problem-detector:v0.4.1] 286572743} {[gcr.io/stackdriver-agents/stackdriver-logging-agent@sha256:f8d5231b67b9c53f60068b535a11811d29d1b3efd53d2b79f2a2591ea338e4f2 gcr.io/stackdriver-agents/stackdriver-logging-agent:0.6-1.6.0-1] 223242132} {[k8s.gcr.io/zookeeper-install-3.5.0-alpha@sha256:60d7f3ce5ec9ff06bc82a1e42d4c66633b93ebd22a8c792a8d34f8c0078f6b68 k8s.gcr.io/zookeeper-install-3.5.0-alpha:e2e] 220145150} {[k8s.gcr.io/galera-install@sha256:7f8245935b92f170e22d7b2cdf802adc75da3a3e05120c50eaa97543e1c20b0a k8s.gcr.io/galera-install:0.1] 181241032} {[cockroachdb/cockroach@sha256:815acd11351fb5087edb0ec73896cd2baf5767dedc20ccd0bbe6d08d1e05b38f cockroachdb/cockroach:v1.0] 163225516} {[cockroachdb/cockroach-k8s-init@sha256:aa384ac9476677208acc0d0d625b0f277a7142603846cefb71f80706682c188c cockroachdb/cockroach-k8s-init:0.1] 153888353} {[k8s.gcr.io/fluentd-elasticsearch@sha256:b8c94527b489fb61d3d81ce5ad7f3ddbb7be71e9620a3a36e2bede2f2e487d73 k8s.gcr.io/fluentd-elasticsearch:v2.0.4] 135716379} {[debian@sha256:6b95a104400bb99ad60b47a48e37d5d1eb71a3f9ec8e86854e0cf64ecc5fd0e8 debian:jessie] 129072320} {[k8s.gcr.io/nginx-slim-amd64@sha256:6654db6d4028756062edac466454ee5c9cf9b20ef79e35a81e3c840031eb1e2b k8s.gcr.io/nginx-slim-amd64:0.20] 103591055} {[k8s.gcr.io/kubernetes-dashboard-amd64@sha256:dc4026c1b595435ef5527ca598e1e9c4343076926d7d62b365c44831395adbd0 k8s.gcr.io/kubernetes-dashboard-amd64:v1.8.3] 102319441} {[gcr.io/google_containers/kube-proxy:v1.11.10-gke.4 k8s.gcr.io/kube-proxy:v1.11.10-gke.4] 102279340} {[k8s.gcr.io/echoserver@sha256:cb5c1bddd1b5665e1867a7fa1b5fa843a47ee433bbb75d4293888b71def53229 k8s.gcr.io/echoserver:1.10] 95361986} {[k8s.gcr.io/nginx-slim-amd64@sha256:8ca6a9ecef3b2ef02f6e0c3d449235d9c53d532f420cc0a29a6a133aa88df256 k8s.gcr.io/nginx-slim-amd64:0.21] 95339966} {[gcr.io/heptio-images/sonobuoy@sha256:d6d530b1ede4b82e9989aa1ba7ae4cd4fac09c6f7cb6a7c4f9270fff241e72c7 gcr.io/heptio-images/sonobuoy:v0.14.3] 89896078} {[k8s.gcr.io/fluentd-gcp-scaler@sha256:a5ace7506d393c4ed65eb2cbb6312c64ab357fcea16dff76b9055bc6e498e5ff k8s.gcr.io/fluentd-gcp-scaler:0.5.1] 86637208} {[k8s.gcr.io/heapster-amd64@sha256:9fae0af136ce0cf4f88393b3670f7139ffc464692060c374d2ae748e13144521 k8s.gcr.io/heapster-amd64:v1.6.0-beta.1] 76016169} {[k8s.gcr.io/ingress-gce-glbc-amd64@sha256:31d36bbd9c44caffa135fc78cf0737266fcf25e3cf0cd1c2fcbfbc4f7309cc52 k8s.gcr.io/ingress-gce-glbc-amd64:v1.1.1] 67801919} {[k8s.gcr.io/kube-addon-manager@sha256:d53486c3a0b49ebee019932878dc44232735d5622a51dbbdcec7124199020d09 k8s.gcr.io/kube-addon-manager:v8.7] 63322109} {[k8s.gcr.io/cpvpa-amd64@sha256:cfe7b0a11c9c8e18c87b1eb34fef9a7cbb8480a8da11fc2657f78dbf4739f869 k8s.gcr.io/cpvpa-amd64:v0.6.0] 51785854} {[k8s.gcr.io/k8s-dns-kube-dns-amd64@sha256:618a82fa66cf0c75e4753369a6999032372be7308866fc9afb381789b1e5ad52 k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.13] 51157394} {[k8s.gcr.io/cluster-proportional-autoscaler-amd64@sha256:003f98d9f411ddfa6ff6d539196355e03ddd69fa4ed38c7ffb8fec6f729afe2d k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.1.2-r2] 49648481} {[k8s.gcr.io/ip-masq-agent-amd64@sha256:1ffda57d87901bc01324c82ceb2145fe6a0448d3f0dd9cb65aa76a867cd62103 k8s.gcr.io/ip-masq-agent-amd64:v2.1.1] 49612505}],VolumesInUse:[],VolumesAttached:[],Config:nil,},}&#xA;Jun 27 11:31:52.750: INFO: &#xA;Logging kubelet events for node gke-standard-cluster-1-default-pool-04796f61-sx27&#xA;Jun 27 11:31:52.759: INFO: &#xA;Logging pods the kubelet thinks is on node gke-standard-cluster-1-default-pool-04796f61-sx27&#xA;Jun 27 11:31:52.785: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-sx27 started at &lt;nil&gt; (0+0 container statuses recorded)&#xA;Jun 27 11:31:52.785: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-28cmn started at 2019-06-27 10:01:32 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:31:52.785: INFO: &#x9;Container sonobuoy-worker ready: true, restart count 1&#xA;Jun 27 11:31:52.785: INFO: &#x9;Container systemd-logs ready: true, restart count 1&#xA;Jun 27 11:31:52.785: INFO: prometheus-to-sd-2qsz9 started at 2019-06-27 09:45:46 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 11:31:52.785: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 11:31:52.785: INFO: fluentd-gcp-v3.2.0-jb9xn started at 2019-06-27 09:46:25 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:31:52.785: INFO: &#x9;Container fluentd-gcp ready: true, restart count 0&#xA;Jun 27 11:31:52.785: INFO: &#x9;Container prometheus-to-sd-exporter ready: true, restart count 0&#xA;Jun 27 11:31:52.785: INFO: kube-dns-76dbb796c5-6qg5f started at 2019-06-27 09:46:07 +0000 UTC (0+4 container statuses recorded)&#xA;Jun 27 11:31:52.785: INFO: &#x9;Container dnsmasq ready: true, restart count 0&#xA;Jun 27 11:31:52.785: INFO: &#x9;Container kubedns ready: true, restart count 0&#xA;Jun 27 11:31:52.785: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 11:31:52.785: INFO: &#x9;Container sidecar ready: true, restart count 0&#xA;Jun 27 11:31:52.894: INFO: &#xA;Latency metrics for node gke-standard-cluster-1-default-pool-04796f61-sx27&#xA;STEP: Dumping a list of prepulled images on each node to file /tmp/results/image-puller.txt&#xA;Jun 27 11:31:52.928: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready&#xA;STEP: Destroying namespace &#34;e2e-tests-stateful-upgrade-x4wng&#34; for this suite.&#xA;Jun 27 11:31:58.974: INFO: Waiting up to 30s for server preferred namespaced resources to be successfully discovered&#xA;Jun 27 11:31:59.179: INFO: namespace: e2e-tests-stateful-upgrade-x4wng, resource: bindings, ignored listing per whitelist&#xA;Jun 27 11:31:59.192: INFO: namespace e2e-tests-stateful-upgrade-x4wng deletion completed in 6.247399995s&#xA;[AfterEach] [sig-apps] stateful Upgrade [Feature:StatefulUpgrade]&#xA;  /workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:142&#xA;STEP: Collecting events from namespace &#34;e2e-tests-mysql-upgrade-w98v7&#34;.&#xA;STEP: Found 0 events.&#xA;Jun 27 11:31:59.210: INFO: POD                                                           NODE                                               PHASE    GRACE  CONDITIONS&#xA;Jun 27 11:31:59.210: INFO: sonobuoy                                                      gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:18 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:18 +0000 UTC  }]&#xA;Jun 27 11:31:59.210: INFO: sonobuoy-e2e-job-3f201e2f061345e7                             gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:02:00 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  }]&#xA;Jun 27 11:31:59.210: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-28cmn       gke-standard-cluster-1-default-pool-04796f61-sx27  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 11:01:50 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  }]&#xA;Jun 27 11:31:59.210: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-44pmg       gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 11:01:47 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  }]&#xA;Jun 27 11:31:59.210: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-rmqrw       gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 11:01:51 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  }]&#xA;Jun 27 11:31:59.210: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-xk7gb       gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 11:02:02 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  }]&#xA;Jun 27 11:31:59.210: INFO: event-exporter-v0.2.4-5c57bb7478-xtjl2                        gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:12 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 11:31:59.210: INFO: fluentd-gcp-scaler-5b5bf8b99f-vkg4s                           gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:12 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 11:31:59.210: INFO: fluentd-gcp-v3.2.0-2hkh9                                      gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:35 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  }]&#xA;Jun 27 11:31:59.210: INFO: fluentd-gcp-v3.2.0-j677d                                      gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:35 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  }]&#xA;Jun 27 11:31:59.210: INFO: fluentd-gcp-v3.2.0-jb9xn                                      gke-standard-cluster-1-default-pool-04796f61-sx27  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:35 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  }]&#xA;Jun 27 11:31:59.211: INFO: fluentd-gcp-v3.2.0-k8m8z                                      gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:36 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  }]&#xA;Jun 27 11:31:59.211: INFO: heapster-v1.6.0-beta.1-5dcd447597-kkgnc                       gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:24 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:26 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:24 +0000 UTC  }]&#xA;Jun 27 11:31:59.211: INFO: kube-dns-76dbb796c5-4ndph                                     gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:22 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 11:31:59.211: INFO: kube-dns-76dbb796c5-6qg5f                                     gke-standard-cluster-1-default-pool-04796f61-sx27  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:07 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:20 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:07 +0000 UTC  }]&#xA;Jun 27 11:31:59.211: INFO: kube-dns-autoscaler-67c97c87fb-4j4kd                          gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:12 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 11:31:59.211: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-2br3  gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:06 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 11:31:59.211: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-dmzx  gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:06 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 11:31:59.211: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-rr33  gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:04 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:12 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:04 +0000 UTC  }]&#xA;Jun 27 11:31:59.211: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-sx27  gke-standard-cluster-1-default-pool-04796f61-sx27  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:06 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 11:31:59.211: INFO: l7-default-backend-7ff48cffd7-g8pnv                           gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:20 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 11:31:59.211: INFO: metrics-server-v0.2.1-fd596d746-mnb77                         gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:11 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:14 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:11 +0000 UTC  }]&#xA;Jun 27 11:31:59.211: INFO: prometheus-to-sd-28w8p                                        gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:45 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:56 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:45 +0000 UTC  }]&#xA;Jun 27 11:31:59.211: INFO: prometheus-to-sd-2qsz9                                        gke-standard-cluster-1-default-pool-04796f61-sx27  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:46 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:55 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:46 +0000 UTC  }]&#xA;Jun 27 11:31:59.211: INFO: prometheus-to-sd-529s6                                        gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:46 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:51 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:46 +0000 UTC  }]&#xA;Jun 27 11:31:59.211: INFO: prometheus-to-sd-q6mwq                                        gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:45 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:53 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:45 +0000 UTC  }]&#xA;Jun 27 11:31:59.211: INFO: &#xA;Jun 27 11:31:59.216: INFO: &#xA;Logging node info for node gke-standard-cluster-1-default-pool-04796f61-2br3&#xA;Jun 27 11:31:59.219: INFO: Node Info: &amp;Node{ObjectMeta:k8s_io_apimachinery_pkg_apis_meta_v1.ObjectMeta{Name:gke-standard-cluster-1-default-pool-04796f61-2br3,GenerateName:,Namespace:,SelfLink:/api/v1/nodes/gke-standard-cluster-1-default-pool-04796f61-2br3,UID:55ee085e-98c0-11e9-93fd-42010a800028,ResourceVersion:32759,Generation:0,CreationTimestamp:2019-06-27 09:45:45 +0000 UTC,DeletionTimestamp:&lt;nil&gt;,DeletionGracePeriodSeconds:nil,Labels:map[string]string{beta.kubernetes.io/arch: amd64,beta.kubernetes.io/fluentd-ds-ready: true,beta.kubernetes.io/instance-type: n1-standard-4,beta.kubernetes.io/os: linux,cloud.google.com/gke-nodepool: default-pool,cloud.google.com/gke-os-distribution: cos,failure-domain.beta.kubernetes.io/region: us-central1,failure-domain.beta.kubernetes.io/zone: us-central1-a,kubernetes.io/hostname: gke-standard-cluster-1-default-pool-04796f61-2br3,},Annotations:map[string]string{container.googleapis.com/instance_id: 5263861497271497046,node.alpha.kubernetes.io/ttl: 0,volumes.kubernetes.io/controller-managed-attach-detach: true,},OwnerReferences:[],Finalizers:[],ClusterName:,Initializers:nil,},Spec:NodeSpec{PodCIDR:10.8.2.0/24,DoNotUse_ExternalID:,ProviderID:gce://sinuous-tuner-235209/us-central1-a/gke-standard-cluster-1-default-pool-04796f61-2br3,Unschedulable:false,Taints:[],ConfigSource:nil,},Status:NodeStatus{Capacity:ResourceList{cpu: {{4 0} {&lt;nil&gt;} 4 DecimalSI},ephemeral-storage: {{101241290752 0} {&lt;nil&gt;}  BinarySI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{15768948736 0} {&lt;nil&gt;} 15399364Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Allocatable:ResourceList{cpu: {{3920 -3} {&lt;nil&gt;} 3920m DecimalSI},ephemeral-storage: {{47093746742 0} {&lt;nil&gt;} 47093746742 DecimalSI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{13004902400 0} {&lt;nil&gt;} 12700100Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Phase:,Conditions:[{FrequentKubeletRestart False 2019-06-27 11:30:59 +0000 UTC 2019-06-27 09:49:03 +0000 UTC FrequentKubeletRestart kubelet is functioning properly} {FrequentDockerRestart False 2019-06-27 11:30:59 +0000 UTC 2019-06-27 09:49:04 +0000 UTC FrequentDockerRestart docker is functioning properly} {FrequentContainerdRestart False 2019-06-27 11:30:59 +0000 UTC 2019-06-27 09:49:05 +0000 UTC FrequentContainerdRestart containerd is functioning properly} {KernelDeadlock False 2019-06-27 11:30:59 +0000 UTC 2019-06-27 09:44:02 +0000 UTC KernelHasNoDeadlock kernel has no deadlock} {ReadonlyFilesystem False 2019-06-27 11:30:59 +0000 UTC 2019-06-27 09:44:02 +0000 UTC FilesystemIsNotReadOnly Filesystem is not read-only} {CorruptDockerOverlay2 False 2019-06-27 11:30:59 +0000 UTC 2019-06-27 09:49:03 +0000 UTC CorruptDockerOverlay2 docker overlay2 is functioning properly} {FrequentUnregisterNetDevice False 2019-06-27 11:30:59 +0000 UTC 2019-06-27 09:49:03 +0000 UTC UnregisterNetDevice node is functioning properly} {NetworkUnavailable False 2019-06-27 09:45:46 +0000 UTC 2019-06-27 09:45:46 +0000 UTC RouteCreated NodeController create implicit route} {OutOfDisk False 2019-06-27 11:31:56 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientDisk kubelet has sufficient disk space available} {MemoryPressure False 2019-06-27 11:31:56 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientMemory kubelet has sufficient memory available} {DiskPressure False 2019-06-27 11:31:56 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasNoDiskPressure kubelet has no disk pressure} {PIDPressure False 2019-06-27 11:31:56 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientPID kubelet has sufficient PID available} {Ready True 2019-06-27 11:31:56 +0000 UTC 2019-06-27 09:46:05 +0000 UTC KubeletReady kubelet is posting ready status. AppArmor enabled}],Addresses:[{InternalIP 10.128.0.42} {ExternalIP 35.232.42.152} {Hostname gke-standard-cluster-1-default-pool-04796f61-2br3}],DaemonEndpoints:NodeDaemonEndpoints{KubeletEndpoint:DaemonEndpoint{Port:10250,},},NodeInfo:NodeSystemInfo{MachineID:4ed4f0f644ff78a293f5a14239e1dc93,SystemUUID:4ED4F0F6-44FF-78A2-93F5-A14239E1DC93,BootID:df50bfdc-3ecb-4ada-a245-3c7fd247294f,KernelVersion:4.14.119+,OSImage:Container-Optimized OS from Google,ContainerRuntimeVersion:docker://17.3.2,KubeletVersion:v1.11.10-gke.4,KubeProxyVersion:v1.11.10-gke.4,OperatingSystem:linux,Architecture:amd64,},Images:[{[k8s.gcr.io/mysql-galera@sha256:daa2bc871bad84f4a05536fa3b0956ff8698b41e7f48c6280a6450cec6d25917 k8s.gcr.io/mysql-galera:e2e] 715149006} {[java@sha256:b91008e234402fc87e7889d6af1f36b6ece844c05989236d83d1f658a6f329b0 java:openjdk-8-jre] 311241763} {[gcr.io/heptio-images/sonobuoy-plugin-systemd-logs@sha256:58e077ba773ff5d7b6bba90771fad72217f0d10b913bb66bb0afb387c9552788 gcr.io/heptio-images/sonobuoy-plugin-systemd-logs:latest] 290890605} {[k8s.gcr.io/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e9eb2b k8s.gcr.io/node-problem-detector:v0.4.1] 286572743} {[gcr.io/stackdriver-agents/stackdriver-logging-agent@sha256:f8d5231b67b9c53f60068b535a11811d29d1b3efd53d2b79f2a2591ea338e4f2 gcr.io/stackdriver-agents/stackdriver-logging-agent:0.6-1.6.0-1] 223242132} {[k8s.gcr.io/zookeeper-install-3.5.0-alpha@sha256:60d7f3ce5ec9ff06bc82a1e42d4c66633b93ebd22a8c792a8d34f8c0078f6b68 k8s.gcr.io/zookeeper-install-3.5.0-alpha:e2e] 220145150} {[k8s.gcr.io/galera-install@sha256:7f8245935b92f170e22d7b2cdf802adc75da3a3e05120c50eaa97543e1c20b0a k8s.gcr.io/galera-install:0.1] 181241032} {[cockroachdb/cockroach@sha256:815acd11351fb5087edb0ec73896cd2baf5767dedc20ccd0bbe6d08d1e05b38f cockroachdb/cockroach:v1.0] 163225516} {[cockroachdb/cockroach-k8s-init@sha256:aa384ac9476677208acc0d0d625b0f277a7142603846cefb71f80706682c188c cockroachdb/cockroach-k8s-init:0.1] 153888353} {[k8s.gcr.io/fluentd-elasticsearch@sha256:b8c94527b489fb61d3d81ce5ad7f3ddbb7be71e9620a3a36e2bede2f2e487d73 k8s.gcr.io/fluentd-elasticsearch:v2.0.4] 135716379} {[debian@sha256:6b95a104400bb99ad60b47a48e37d5d1eb71a3f9ec8e86854e0cf64ecc5fd0e8 debian:jessie] 129072320} {[nginx@sha256:079aa93463d2566b7a81cbdf856afc6d4d2a6f9100ca3bcbecf24ade92c9a7fe nginx:latest] 109258867} {[k8s.gcr.io/nginx-slim-amd64@sha256:6654db6d4028756062edac466454ee5c9cf9b20ef79e35a81e3c840031eb1e2b k8s.gcr.io/nginx-slim-amd64:0.20] 103591055} {[k8s.gcr.io/kubernetes-dashboard-amd64@sha256:dc4026c1b595435ef5527ca598e1e9c4343076926d7d62b365c44831395adbd0 k8s.gcr.io/kubernetes-dashboard-amd64:v1.8.3] 102319441} {[gcr.io/google_containers/kube-proxy:v1.11.10-gke.4 k8s.gcr.io/kube-proxy:v1.11.10-gke.4] 102279340} {[k8s.gcr.io/echoserver@sha256:cb5c1bddd1b5665e1867a7fa1b5fa843a47ee433bbb75d4293888b71def53229 k8s.gcr.io/echoserver:1.10] 95361986} {[k8s.gcr.io/nginx-slim-amd64@sha256:8ca6a9ecef3b2ef02f6e0c3d449235d9c53d532f420cc0a29a6a133aa88df256 k8s.gcr.io/nginx-slim-amd64:0.21] 95339966} {[gcr.io/heptio-images/sonobuoy@sha256:d6d530b1ede4b82e9989aa1ba7ae4cd4fac09c6f7cb6a7c4f9270fff241e72c7 gcr.io/heptio-images/sonobuoy:v0.14.3] 89896078} {[k8s.gcr.io/fluentd-gcp-scaler@sha256:a5ace7506d393c4ed65eb2cbb6312c64ab357fcea16dff76b9055bc6e498e5ff k8s.gcr.io/fluentd-gcp-scaler:0.5.1] 86637208} {[k8s.gcr.io/heapster-amd64@sha256:9fae0af136ce0cf4f88393b3670f7139ffc464692060c374d2ae748e13144521 k8s.gcr.io/heapster-amd64:v1.6.0-beta.1] 76016169} {[k8s.gcr.io/ingress-gce-glbc-amd64@sha256:31d36bbd9c44caffa135fc78cf0737266fcf25e3cf0cd1c2fcbfbc4f7309cc52 k8s.gcr.io/ingress-gce-glbc-amd64:v1.1.1] 67801919} {[k8s.gcr.io/kube-addon-manager@sha256:d53486c3a0b49ebee019932878dc44232735d5622a51dbbdcec7124199020d09 k8s.gcr.io/kube-addon-manager:v8.7] 63322109} {[k8s.gcr.io/cpvpa-amd64@sha256:cfe7b0a11c9c8e18c87b1eb34fef9a7cbb8480a8da11fc2657f78dbf4739f869 k8s.gcr.io/cpvpa-amd64:v0.6.0] 51785854} {[k8s.gcr.io/cluster-proportional-autoscaler-amd64@sha256:003f98d9f411ddfa6ff6d539196355e03ddd69fa4ed38c7ffb8fec6f729afe2d k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.1.2-r2] 49648481} {[k8s.gcr.io/ip-masq-agent-amd64@sha256:1ffda57d87901bc01324c82ceb2145fe6a0448d3f0dd9cb65aa76a867cd62103 k8s.gcr.io/ip-masq-agent-amd64:v2.1.1] 49612505}],VolumesInUse:[kubernetes.io/gce-pd/gke-standard-cluster-1-pvc-804259ed-98c2-11e9-93fd-42010a800028],VolumesAttached:[{kubernetes.io/gce-pd/gke-standard-cluster-1-pvc-804259ed-98c2-11e9-93fd-42010a800028 /dev/disk/by-id/google-gke-standard-cluster-1-pvc-804259ed-98c2-11e9-93fd-42010a800028}],Config:nil,},}&#xA;Jun 27 11:31:59.220: INFO: &#xA;Logging kubelet events for node gke-standard-cluster-1-default-pool-04796f61-2br3&#xA;Jun 27 11:31:59.224: INFO: &#xA;Logging pods the kubelet thinks is on node gke-standard-cluster-1-default-pool-04796f61-2br3&#xA;Jun 27 11:31:59.238: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-44pmg started at 2019-06-27 10:01:32 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:31:59.238: INFO: &#x9;Container sonobuoy-worker ready: true, restart count 1&#xA;Jun 27 11:31:59.238: INFO: &#x9;Container systemd-logs ready: true, restart count 1&#xA;Jun 27 11:31:59.238: INFO: fluentd-gcp-v3.2.0-2hkh9 started at 2019-06-27 09:46:25 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:31:59.238: INFO: &#x9;Container fluentd-gcp ready: true, restart count 0&#xA;Jun 27 11:31:59.238: INFO: &#x9;Container prometheus-to-sd-exporter ready: true, restart count 0&#xA;Jun 27 11:31:59.238: INFO: sonobuoy started at 2019-06-27 10:01:18 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 11:31:59.238: INFO: &#x9;Container kube-sonobuoy ready: true, restart count 0&#xA;Jun 27 11:31:59.238: INFO: heapster-v1.6.0-beta.1-5dcd447597-kkgnc started at 2019-06-27 09:46:24 +0000 UTC (0+3 container statuses recorded)&#xA;Jun 27 11:31:59.238: INFO: &#x9;Container heapster ready: true, restart count 0&#xA;Jun 27 11:31:59.238: INFO: &#x9;Container heapster-nanny ready: true, restart count 0&#xA;Jun 27 11:31:59.238: INFO: &#x9;Container prom-to-sd ready: true, restart count 0&#xA;Jun 27 11:31:59.238: INFO: prometheus-to-sd-q6mwq started at 2019-06-27 09:45:45 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 11:31:59.238: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 11:31:59.238: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-2br3 started at &lt;nil&gt; (0+0 container statuses recorded)&#xA;Jun 27 11:31:59.284: INFO: &#xA;Latency metrics for node gke-standard-cluster-1-default-pool-04796f61-2br3&#xA;Jun 27 11:31:59.284: INFO: {Operation:stop_container Method:docker_operations_latency_microseconds Quantile:0.99 Latency:30.06882s}&#xA;Jun 27 11:31:59.284: INFO: &#xA;Logging node info for node gke-standard-cluster-1-default-pool-04796f61-dmzx&#xA;Jun 27 11:31:59.292: INFO: Node Info: &amp;Node{ObjectMeta:k8s_io_apimachinery_pkg_apis_meta_v1.ObjectMeta{Name:gke-standard-cluster-1-default-pool-04796f61-dmzx,GenerateName:,Namespace:,SelfLink:/api/v1/nodes/gke-standard-cluster-1-default-pool-04796f61-dmzx,UID:563a4f0e-98c0-11e9-93fd-42010a800028,ResourceVersion:32765,Generation:0,CreationTimestamp:2019-06-27 09:45:45 +0000 UTC,DeletionTimestamp:&lt;nil&gt;,DeletionGracePeriodSeconds:nil,Labels:map[string]string{beta.kubernetes.io/arch: amd64,beta.kubernetes.io/fluentd-ds-ready: true,beta.kubernetes.io/instance-type: n1-standard-4,beta.kubernetes.io/os: linux,cloud.google.com/gke-nodepool: default-pool,cloud.google.com/gke-os-distribution: cos,failure-domain.beta.kubernetes.io/region: us-central1,failure-domain.beta.kubernetes.io/zone: us-central1-a,kubernetes.io/hostname: gke-standard-cluster-1-default-pool-04796f61-dmzx,},Annotations:map[string]string{container.googleapis.com/instance_id: 8240935979917586774,node.alpha.kubernetes.io/ttl: 0,volumes.kubernetes.io/controller-managed-attach-detach: true,},OwnerReferences:[],Finalizers:[],ClusterName:,Initializers:nil,},Spec:NodeSpec{PodCIDR:10.8.4.0/24,DoNotUse_ExternalID:,ProviderID:gce://sinuous-tuner-235209/us-central1-a/gke-standard-cluster-1-default-pool-04796f61-dmzx,Unschedulable:false,Taints:[],ConfigSource:nil,},Status:NodeStatus{Capacity:ResourceList{cpu: {{4 0} {&lt;nil&gt;} 4 DecimalSI},ephemeral-storage: {{101241290752 0} {&lt;nil&gt;}  BinarySI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{15768940544 0} {&lt;nil&gt;} 15399356Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Allocatable:ResourceList{cpu: {{3920 -3} {&lt;nil&gt;} 3920m DecimalSI},ephemeral-storage: {{47093746742 0} {&lt;nil&gt;} 47093746742 DecimalSI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{13004894208 0} {&lt;nil&gt;} 12700092Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Phase:,Conditions:[{ReadonlyFilesystem False 2019-06-27 11:31:54 +0000 UTC 2019-06-27 09:44:03 +0000 UTC FilesystemIsNotReadOnly Filesystem is not read-only} {FrequentUnregisterNetDevice False 2019-06-27 11:31:54 +0000 UTC 2019-06-27 09:49:04 +0000 UTC UnregisterNetDevice node is functioning properly} {FrequentKubeletRestart False 2019-06-27 11:31:54 +0000 UTC 2019-06-27 09:49:04 +0000 UTC FrequentKubeletRestart kubelet is functioning properly} {FrequentDockerRestart False 2019-06-27 11:31:54 +0000 UTC 2019-06-27 09:49:05 +0000 UTC FrequentDockerRestart docker is functioning properly} {FrequentContainerdRestart False 2019-06-27 11:31:54 +0000 UTC 2019-06-27 09:49:06 +0000 UTC FrequentContainerdRestart containerd is functioning properly} {CorruptDockerOverlay2 False 2019-06-27 11:31:54 +0000 UTC 2019-06-27 09:49:04 +0000 UTC CorruptDockerOverlay2 docker overlay2 is functioning properly} {KernelDeadlock False 2019-06-27 11:31:54 +0000 UTC 2019-06-27 09:44:03 +0000 UTC KernelHasNoDeadlock kernel has no deadlock} {NetworkUnavailable False 2019-06-27 09:45:46 +0000 UTC 2019-06-27 09:45:46 +0000 UTC RouteCreated NodeController create implicit route} {OutOfDisk False 2019-06-27 11:31:57 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientDisk kubelet has sufficient disk space available} {MemoryPressure False 2019-06-27 11:31:57 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientMemory kubelet has sufficient memory available} {DiskPressure False 2019-06-27 11:31:57 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasNoDiskPressure kubelet has no disk pressure} {PIDPressure False 2019-06-27 11:31:57 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientPID kubelet has sufficient PID available} {Ready True 2019-06-27 11:31:57 +0000 UTC 2019-06-27 09:46:06 +0000 UTC KubeletReady kubelet is posting ready status. AppArmor enabled}],Addresses:[{InternalIP 10.128.0.45} {ExternalIP 34.67.69.128} {Hostname gke-standard-cluster-1-default-pool-04796f61-dmzx}],DaemonEndpoints:NodeDaemonEndpoints{KubeletEndpoint:DaemonEndpoint{Port:10250,},},NodeInfo:NodeSystemInfo{MachineID:1e2b8bee3c68760edea50ec32bebc9c7,SystemUUID:1E2B8BEE-3C68-760E-DEA5-0EC32BEBC9C7,BootID:cca2dcb1-4058-446f-b35a-be81be4bdd91,KernelVersion:4.14.119+,OSImage:Container-Optimized OS from Google,ContainerRuntimeVersion:docker://17.3.2,KubeletVersion:v1.11.10-gke.4,KubeProxyVersion:v1.11.10-gke.4,OperatingSystem:linux,Architecture:amd64,},Images:[{[k8s.gcr.io/mysql-galera@sha256:daa2bc871bad84f4a05536fa3b0956ff8698b41e7f48c6280a6450cec6d25917 k8s.gcr.io/mysql-galera:e2e] 715149006} {[gcr.io/heptio-images/kube-conformance@sha256:e208e87718fee7fe922ad69f740ca23e5843d05faa014ef23a37cdd017944946 gcr.io/heptio-images/kube-conformance:v1.11] 532217543} {[java@sha256:b91008e234402fc87e7889d6af1f36b6ece844c05989236d83d1f658a6f329b0 java:openjdk-8-jre] 311241763} {[k8s.gcr.io/redis-install-3.2.0@sha256:84305c74214f769ac3bdb3b6ceae35b8f13dd5485a6255a31776f3f3bcb2e4f3 k8s.gcr.io/redis-install-3.2.0:e2e] 294462045} {[gcr.io/heptio-images/sonobuoy-plugin-systemd-logs@sha256:58e077ba773ff5d7b6bba90771fad72217f0d10b913bb66bb0afb387c9552788 gcr.io/heptio-images/sonobuoy-plugin-systemd-logs:latest] 290890605} {[k8s.gcr.io/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e9eb2b k8s.gcr.io/node-problem-detector:v0.4.1] 286572743} {[gcr.io/stackdriver-agents/stackdriver-logging-agent@sha256:f8d5231b67b9c53f60068b535a11811d29d1b3efd53d2b79f2a2591ea338e4f2 gcr.io/stackdriver-agents/stackdriver-logging-agent:0.6-1.6.0-1] 223242132} {[k8s.gcr.io/zookeeper-install-3.5.0-alpha@sha256:60d7f3ce5ec9ff06bc82a1e42d4c66633b93ebd22a8c792a8d34f8c0078f6b68 k8s.gcr.io/zookeeper-install-3.5.0-alpha:e2e] 220145150} {[k8s.gcr.io/galera-install@sha256:7f8245935b92f170e22d7b2cdf802adc75da3a3e05120c50eaa97543e1c20b0a k8s.gcr.io/galera-install:0.1] 181241032} {[cockroachdb/cockroach@sha256:815acd11351fb5087edb0ec73896cd2baf5767dedc20ccd0bbe6d08d1e05b38f cockroachdb/cockroach:v1.0] 163225516} {[cockroachdb/cockroach-k8s-init@sha256:aa384ac9476677208acc0d0d625b0f277a7142603846cefb71f80706682c188c cockroachdb/cockroach-k8s-init:0.1] 153888353} {[k8s.gcr.io/fluentd-elasticsearch@sha256:b8c94527b489fb61d3d81ce5ad7f3ddbb7be71e9620a3a36e2bede2f2e487d73 k8s.gcr.io/fluentd-elasticsearch:v2.0.4] 135716379} {[debian@sha256:6b95a104400bb99ad60b47a48e37d5d1eb71a3f9ec8e86854e0cf64ecc5fd0e8 debian:jessie] 129072320} {[nginx@sha256:079aa93463d2566b7a81cbdf856afc6d4d2a6f9100ca3bcbecf24ade92c9a7fe nginx:latest] 109258867} {[k8s.gcr.io/nginx-slim-amd64@sha256:6654db6d4028756062edac466454ee5c9cf9b20ef79e35a81e3c840031eb1e2b k8s.gcr.io/nginx-slim-amd64:0.20] 103591055} {[k8s.gcr.io/kubernetes-dashboard-amd64@sha256:dc4026c1b595435ef5527ca598e1e9c4343076926d7d62b365c44831395adbd0 k8s.gcr.io/kubernetes-dashboard-amd64:v1.8.3] 102319441} {[gcr.io/google_containers/kube-proxy:v1.11.10-gke.4 k8s.gcr.io/kube-proxy:v1.11.10-gke.4] 102279340} {[k8s.gcr.io/echoserver@sha256:cb5c1bddd1b5665e1867a7fa1b5fa843a47ee433bbb75d4293888b71def53229 k8s.gcr.io/echoserver:1.10] 95361986} {[k8s.gcr.io/nginx-slim-amd64@sha256:8ca6a9ecef3b2ef02f6e0c3d449235d9c53d532f420cc0a29a6a133aa88df256 k8s.gcr.io/nginx-slim-amd64:0.21] 95339966} {[gcr.io/heptio-images/sonobuoy@sha256:d6d530b1ede4b82e9989aa1ba7ae4cd4fac09c6f7cb6a7c4f9270fff241e72c7 gcr.io/heptio-images/sonobuoy:v0.14.3] 89896078} {[k8s.gcr.io/fluentd-gcp-scaler@sha256:a5ace7506d393c4ed65eb2cbb6312c64ab357fcea16dff76b9055bc6e498e5ff k8s.gcr.io/fluentd-gcp-scaler:0.5.1] 86637208} {[k8s.gcr.io/heapster-amd64@sha256:9fae0af136ce0cf4f88393b3670f7139ffc464692060c374d2ae748e13144521 k8s.gcr.io/heapster-amd64:v1.6.0-beta.1] 76016169} {[k8s.gcr.io/ingress-gce-glbc-amd64@sha256:31d36bbd9c44caffa135fc78cf0737266fcf25e3cf0cd1c2fcbfbc4f7309cc52 k8s.gcr.io/ingress-gce-glbc-amd64:v1.1.1] 67801919} {[k8s.gcr.io/kube-addon-manager@sha256:d53486c3a0b49ebee019932878dc44232735d5622a51dbbdcec7124199020d09 k8s.gcr.io/kube-addon-manager:v8.7] 63322109} {[k8s.gcr.io/cpvpa-amd64@sha256:cfe7b0a11c9c8e18c87b1eb34fef9a7cbb8480a8da11fc2657f78dbf4739f869 k8s.gcr.io/cpvpa-amd64:v0.6.0] 51785854}],VolumesInUse:[],VolumesAttached:[],Config:nil,},}&#xA;Jun 27 11:31:59.292: INFO: &#xA;Logging kubelet events for node gke-standard-cluster-1-default-pool-04796f61-dmzx&#xA;Jun 27 11:31:59.297: INFO: &#xA;Logging pods the kubelet thinks is on node gke-standard-cluster-1-default-pool-04796f61-dmzx&#xA;Jun 27 11:31:59.309: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-dmzx started at &lt;nil&gt; (0+0 container statuses recorded)&#xA;Jun 27 11:31:59.309: INFO: metrics-server-v0.2.1-fd596d746-mnb77 started at 2019-06-27 09:46:11 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:31:59.309: INFO: &#x9;Container metrics-server ready: true, restart count 0&#xA;Jun 27 11:31:59.309: INFO: &#x9;Container metrics-server-nanny ready: true, restart count 0&#xA;Jun 27 11:31:59.309: INFO: fluentd-gcp-v3.2.0-j677d started at 2019-06-27 09:46:25 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:31:59.309: INFO: &#x9;Container fluentd-gcp ready: true, restart count 0&#xA;Jun 27 11:31:59.309: INFO: &#x9;Container prometheus-to-sd-exporter ready: true, restart count 0&#xA;Jun 27 11:31:59.309: INFO: sonobuoy-e2e-job-3f201e2f061345e7 started at 2019-06-27 10:01:32 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:31:59.309: INFO: &#x9;Container e2e ready: true, restart count 0&#xA;Jun 27 11:31:59.309: INFO: &#x9;Container sonobuoy-worker ready: true, restart count 0&#xA;Jun 27 11:31:59.309: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-xk7gb started at 2019-06-27 10:01:32 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:31:59.309: INFO: &#x9;Container sonobuoy-worker ready: true, restart count 1&#xA;Jun 27 11:31:59.309: INFO: &#x9;Container systemd-logs ready: true, restart count 1&#xA;Jun 27 11:31:59.309: INFO: prometheus-to-sd-529s6 started at 2019-06-27 09:45:46 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 11:31:59.309: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 11:31:59.366: INFO: &#xA;Latency metrics for node gke-standard-cluster-1-default-pool-04796f61-dmzx&#xA;Jun 27 11:31:59.366: INFO: {Operation:stop_container Method:docker_operations_latency_microseconds Quantile:0.99 Latency:30.071565s}&#xA;Jun 27 11:31:59.366: INFO: &#xA;Logging node info for node gke-standard-cluster-1-default-pool-04796f61-rr33&#xA;Jun 27 11:31:59.382: INFO: Node Info: &amp;Node{ObjectMeta:k8s_io_apimachinery_pkg_apis_meta_v1.ObjectMeta{Name:gke-standard-cluster-1-default-pool-04796f61-rr33,GenerateName:,Namespace:,SelfLink:/api/v1/nodes/gke-standard-cluster-1-default-pool-04796f61-rr33,UID:55b363e1-98c0-11e9-93fd-42010a800028,ResourceVersion:32754,Generation:0,CreationTimestamp:2019-06-27 09:45:45 +0000 UTC,DeletionTimestamp:&lt;nil&gt;,DeletionGracePeriodSeconds:nil,Labels:map[string]string{beta.kubernetes.io/arch: amd64,beta.kubernetes.io/fluentd-ds-ready: true,beta.kubernetes.io/instance-type: n1-standard-4,beta.kubernetes.io/os: linux,cloud.google.com/gke-nodepool: default-pool,cloud.google.com/gke-os-distribution: cos,failure-domain.beta.kubernetes.io/region: us-central1,failure-domain.beta.kubernetes.io/zone: us-central1-a,kubernetes.io/hostname: gke-standard-cluster-1-default-pool-04796f61-rr33,},Annotations:map[string]string{container.googleapis.com/instance_id: 4128615952046174550,node.alpha.kubernetes.io/ttl: 0,volumes.kubernetes.io/controller-managed-attach-detach: true,},OwnerReferences:[],Finalizers:[],ClusterName:,Initializers:nil,},Spec:NodeSpec{PodCIDR:10.8.1.0/24,DoNotUse_ExternalID:,ProviderID:gce://sinuous-tuner-235209/us-central1-a/gke-standard-cluster-1-default-pool-04796f61-rr33,Unschedulable:false,Taints:[],ConfigSource:nil,},Status:NodeStatus{Capacity:ResourceList{cpu: {{4 0} {&lt;nil&gt;} 4 DecimalSI},ephemeral-storage: {{101241290752 0} {&lt;nil&gt;}  BinarySI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{15768948736 0} {&lt;nil&gt;} 15399364Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Allocatable:ResourceList{cpu: {{3920 -3} {&lt;nil&gt;} 3920m DecimalSI},ephemeral-storage: {{47093746742 0} {&lt;nil&gt;} 47093746742 DecimalSI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{13004902400 0} {&lt;nil&gt;} 12700100Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Phase:,Conditions:[{FrequentUnregisterNetDevice False 2019-06-27 11:31:05 +0000 UTC 2019-06-27 09:49:03 +0000 UTC UnregisterNetDevice node is functioning properly} {KernelDeadlock False 2019-06-27 11:31:05 +0000 UTC 2019-06-27 09:44:02 +0000 UTC KernelHasNoDeadlock kernel has no deadlock} {ReadonlyFilesystem False 2019-06-27 11:31:05 +0000 UTC 2019-06-27 09:44:02 +0000 UTC FilesystemIsNotReadOnly Filesystem is not read-only} {FrequentKubeletRestart False 2019-06-27 11:31:05 +0000 UTC 2019-06-27 09:49:03 +0000 UTC FrequentKubeletRestart kubelet is functioning properly} {FrequentDockerRestart False 2019-06-27 11:31:05 +0000 UTC 2019-06-27 09:49:04 +0000 UTC FrequentDockerRestart docker is functioning properly} {FrequentContainerdRestart False 2019-06-27 11:31:05 +0000 UTC 2019-06-27 09:49:05 +0000 UTC FrequentContainerdRestart containerd is functioning properly} {CorruptDockerOverlay2 False 2019-06-27 11:31:05 +0000 UTC 2019-06-27 09:49:03 +0000 UTC CorruptDockerOverlay2 docker overlay2 is functioning properly} {NetworkUnavailable False 2019-06-27 09:45:45 +0000 UTC 2019-06-27 09:45:45 +0000 UTC RouteCreated NodeController create implicit route} {OutOfDisk False 2019-06-27 11:31:55 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientDisk kubelet has sufficient disk space available} {MemoryPressure False 2019-06-27 11:31:55 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientMemory kubelet has sufficient memory available} {DiskPressure False 2019-06-27 11:31:55 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasNoDiskPressure kubelet has no disk pressure} {PIDPressure False 2019-06-27 11:31:55 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientPID kubelet has sufficient PID available} {Ready True 2019-06-27 11:31:55 +0000 UTC 2019-06-27 09:46:05 +0000 UTC KubeletReady kubelet is posting ready status. AppArmor enabled}],Addresses:[{InternalIP 10.128.0.44} {ExternalIP 35.226.22.222} {Hostname gke-standard-cluster-1-default-pool-04796f61-rr33}],DaemonEndpoints:NodeDaemonEndpoints{KubeletEndpoint:DaemonEndpoint{Port:10250,},},NodeInfo:NodeSystemInfo{MachineID:46f905cfd94d81d48ea29f40cb3028b5,SystemUUID:46F905CF-D94D-81D4-8EA2-9F40CB3028B5,BootID:1a132385-80e1-4ef8-8613-100779f1bf54,KernelVersion:4.14.119+,OSImage:Container-Optimized OS from Google,ContainerRuntimeVersion:docker://17.3.2,KubeletVersion:v1.11.10-gke.4,KubeProxyVersion:v1.11.10-gke.4,OperatingSystem:linux,Architecture:amd64,},Images:[{[java@sha256:b91008e234402fc87e7889d6af1f36b6ece844c05989236d83d1f658a6f329b0 java:openjdk-8-jre] 311241763} {[gcr.io/heptio-images/sonobuoy-plugin-systemd-logs@sha256:58e077ba773ff5d7b6bba90771fad72217f0d10b913bb66bb0afb387c9552788 gcr.io/heptio-images/sonobuoy-plugin-systemd-logs:latest] 290890605} {[k8s.gcr.io/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e9eb2b k8s.gcr.io/node-problem-detector:v0.4.1] 286572743} {[gcr.io/stackdriver-agents/stackdriver-logging-agent@sha256:f8d5231b67b9c53f60068b535a11811d29d1b3efd53d2b79f2a2591ea338e4f2 gcr.io/stackdriver-agents/stackdriver-logging-agent:0.6-1.6.0-1] 223242132} {[k8s.gcr.io/zookeeper-install-3.5.0-alpha@sha256:60d7f3ce5ec9ff06bc82a1e42d4c66633b93ebd22a8c792a8d34f8c0078f6b68 k8s.gcr.io/zookeeper-install-3.5.0-alpha:e2e] 220145150} {[cockroachdb/cockroach@sha256:815acd11351fb5087edb0ec73896cd2baf5767dedc20ccd0bbe6d08d1e05b38f cockroachdb/cockroach:v1.0] 163225516} {[cockroachdb/cockroach-k8s-init@sha256:aa384ac9476677208acc0d0d625b0f277a7142603846cefb71f80706682c188c cockroachdb/cockroach-k8s-init:0.1] 153888353} {[k8s.gcr.io/fluentd-elasticsearch@sha256:b8c94527b489fb61d3d81ce5ad7f3ddbb7be71e9620a3a36e2bede2f2e487d73 k8s.gcr.io/fluentd-elasticsearch:v2.0.4] 135716379} {[k8s.gcr.io/nginx-slim-amd64@sha256:6654db6d4028756062edac466454ee5c9cf9b20ef79e35a81e3c840031eb1e2b k8s.gcr.io/nginx-slim-amd64:0.20] 103591055} {[k8s.gcr.io/kubernetes-dashboard-amd64@sha256:dc4026c1b595435ef5527ca598e1e9c4343076926d7d62b365c44831395adbd0 k8s.gcr.io/kubernetes-dashboard-amd64:v1.8.3] 102319441} {[gcr.io/google_containers/kube-proxy:v1.11.10-gke.4 k8s.gcr.io/kube-proxy:v1.11.10-gke.4] 102279340} {[k8s.gcr.io/echoserver@sha256:cb5c1bddd1b5665e1867a7fa1b5fa843a47ee433bbb75d4293888b71def53229 k8s.gcr.io/echoserver:1.10] 95361986} {[k8s.gcr.io/nginx-slim-amd64@sha256:8ca6a9ecef3b2ef02f6e0c3d449235d9c53d532f420cc0a29a6a133aa88df256 k8s.gcr.io/nginx-slim-amd64:0.21] 95339966} {[gcr.io/heptio-images/sonobuoy@sha256:d6d530b1ede4b82e9989aa1ba7ae4cd4fac09c6f7cb6a7c4f9270fff241e72c7 gcr.io/heptio-images/sonobuoy:v0.14.3] 89896078} {[k8s.gcr.io/fluentd-gcp-scaler@sha256:a5ace7506d393c4ed65eb2cbb6312c64ab357fcea16dff76b9055bc6e498e5ff k8s.gcr.io/fluentd-gcp-scaler:0.5.1] 86637208} {[k8s.gcr.io/heapster-amd64@sha256:9fae0af136ce0cf4f88393b3670f7139ffc464692060c374d2ae748e13144521 k8s.gcr.io/heapster-amd64:v1.6.0-beta.1] 76016169} {[k8s.gcr.io/ingress-gce-glbc-amd64@sha256:31d36bbd9c44caffa135fc78cf0737266fcf25e3cf0cd1c2fcbfbc4f7309cc52 k8s.gcr.io/ingress-gce-glbc-amd64:v1.1.1] 67801919} {[k8s.gcr.io/kube-addon-manager@sha256:d53486c3a0b49ebee019932878dc44232735d5622a51dbbdcec7124199020d09 k8s.gcr.io/kube-addon-manager:v8.7] 63322109} {[k8s.gcr.io/cpvpa-amd64@sha256:cfe7b0a11c9c8e18c87b1eb34fef9a7cbb8480a8da11fc2657f78dbf4739f869 k8s.gcr.io/cpvpa-amd64:v0.6.0] 51785854} {[k8s.gcr.io/k8s-dns-kube-dns-amd64@sha256:618a82fa66cf0c75e4753369a6999032372be7308866fc9afb381789b1e5ad52 k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.13] 51157394} {[k8s.gcr.io/cluster-proportional-autoscaler-amd64@sha256:003f98d9f411ddfa6ff6d539196355e03ddd69fa4ed38c7ffb8fec6f729afe2d k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.1.2-r2] 49648481} {[k8s.gcr.io/ip-masq-agent-amd64@sha256:1ffda57d87901bc01324c82ceb2145fe6a0448d3f0dd9cb65aa76a867cd62103 k8s.gcr.io/ip-masq-agent-amd64:v2.1.1] 49612505} {[k8s.gcr.io/k8s-dns-kube-dns-amd64@sha256:b99fc3eee2a9f052f7eb4cc00f15eb12fc405fa41019baa2d6b79847ae7284a8 k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.10] 49549457} {[k8s.gcr.io/rescheduler@sha256:156cfbfd05a5a815206fd2eeb6cbdaf1596d71ea4b415d3a6c43071dd7b99450 k8s.gcr.io/rescheduler:v0.4.0] 48973149} {[k8s.gcr.io/event-exporter@sha256:16ca66e2b5dc7a1ce6a5aafcb21d0885828b75cdfc08135430480f7ad2364adc k8s.gcr.io/event-exporter:v0.2.4] 47261019}],VolumesInUse:[],VolumesAttached:[],Config:nil,},}&#xA;Jun 27 11:31:59.383: INFO: &#xA;Logging kubelet events for node gke-standard-cluster-1-default-pool-04796f61-rr33&#xA;Jun 27 11:31:59.391: INFO: &#xA;Logging pods the kubelet thinks is on node gke-standard-cluster-1-default-pool-04796f61-rr33&#xA;Jun 27 11:31:59.405: INFO: fluentd-gcp-scaler-5b5bf8b99f-vkg4s started at 2019-06-27 09:46:05 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 11:31:59.405: INFO: &#x9;Container fluentd-gcp-scaler ready: true, restart count 0&#xA;Jun 27 11:31:59.405: INFO: prometheus-to-sd-28w8p started at 2019-06-27 09:45:45 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 11:31:59.405: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 11:31:59.405: INFO: kube-dns-autoscaler-67c97c87fb-4j4kd started at 2019-06-27 09:46:05 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 11:31:59.405: INFO: &#x9;Container autoscaler ready: true, restart count 0&#xA;Jun 27 11:31:59.405: INFO: kube-dns-76dbb796c5-4ndph started at 2019-06-27 09:46:05 +0000 UTC (0+4 container statuses recorded)&#xA;Jun 27 11:31:59.405: INFO: &#x9;Container dnsmasq ready: true, restart count 0&#xA;Jun 27 11:31:59.405: INFO: &#x9;Container kubedns ready: true, restart count 0&#xA;Jun 27 11:31:59.405: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 11:31:59.405: INFO: &#x9;Container sidecar ready: true, restart count 0&#xA;Jun 27 11:31:59.405: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-rr33 started at &lt;nil&gt; (0+0 container statuses recorded)&#xA;Jun 27 11:31:59.405: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-rmqrw started at 2019-06-27 10:01:32 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:31:59.405: INFO: &#x9;Container sonobuoy-worker ready: true, restart count 1&#xA;Jun 27 11:31:59.405: INFO: &#x9;Container systemd-logs ready: true, restart count 1&#xA;Jun 27 11:31:59.405: INFO: event-exporter-v0.2.4-5c57bb7478-xtjl2 started at 2019-06-27 09:46:05 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:31:59.405: INFO: &#x9;Container event-exporter ready: true, restart count 0&#xA;Jun 27 11:31:59.405: INFO: &#x9;Container prometheus-to-sd-exporter ready: true, restart count 0&#xA;Jun 27 11:31:59.405: INFO: l7-default-backend-7ff48cffd7-g8pnv started at 2019-06-27 09:46:05 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 11:31:59.405: INFO: &#x9;Container default-http-backend ready: true, restart count 0&#xA;Jun 27 11:31:59.405: INFO: fluentd-gcp-v3.2.0-k8m8z started at 2019-06-27 09:46:25 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:31:59.405: INFO: &#x9;Container fluentd-gcp ready: true, restart count 0&#xA;Jun 27 11:31:59.405: INFO: &#x9;Container prometheus-to-sd-exporter ready: true, restart count 0&#xA;Jun 27 11:31:59.456: INFO: &#xA;Latency metrics for node gke-standard-cluster-1-default-pool-04796f61-rr33&#xA;Jun 27 11:31:59.456: INFO: &#xA;Logging node info for node gke-standard-cluster-1-default-pool-04796f61-sx27&#xA;Jun 27 11:31:59.460: INFO: Node Info: &amp;Node{ObjectMeta:k8s_io_apimachinery_pkg_apis_meta_v1.ObjectMeta{Name:gke-standard-cluster-1-default-pool-04796f61-sx27,GenerateName:,Namespace:,SelfLink:/api/v1/nodes/gke-standard-cluster-1-default-pool-04796f61-sx27,UID:560b3037-98c0-11e9-93fd-42010a800028,ResourceVersion:32775,Generation:0,CreationTimestamp:2019-06-27 09:45:45 +0000 UTC,DeletionTimestamp:&lt;nil&gt;,DeletionGracePeriodSeconds:nil,Labels:map[string]string{beta.kubernetes.io/arch: amd64,beta.kubernetes.io/fluentd-ds-ready: true,beta.kubernetes.io/instance-type: n1-standard-4,beta.kubernetes.io/os: linux,cloud.google.com/gke-nodepool: default-pool,cloud.google.com/gke-os-distribution: cos,failure-domain.beta.kubernetes.io/region: us-central1,failure-domain.beta.kubernetes.io/zone: us-central1-a,kubernetes.io/hostname: gke-standard-cluster-1-default-pool-04796f61-sx27,},Annotations:map[string]string{container.googleapis.com/instance_id: 7591417305628225878,node.alpha.kubernetes.io/ttl: 0,volumes.kubernetes.io/controller-managed-attach-detach: true,},OwnerReferences:[],Finalizers:[],ClusterName:,Initializers:nil,},Spec:NodeSpec{PodCIDR:10.8.0.0/24,DoNotUse_ExternalID:,ProviderID:gce://sinuous-tuner-235209/us-central1-a/gke-standard-cluster-1-default-pool-04796f61-sx27,Unschedulable:false,Taints:[],ConfigSource:nil,},Status:NodeStatus{Capacity:ResourceList{cpu: {{4 0} {&lt;nil&gt;} 4 DecimalSI},ephemeral-storage: {{101241290752 0} {&lt;nil&gt;}  BinarySI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{15768948736 0} {&lt;nil&gt;} 15399364Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Allocatable:ResourceList{cpu: {{3920 -3} {&lt;nil&gt;} 3920m DecimalSI},ephemeral-storage: {{47093746742 0} {&lt;nil&gt;} 47093746742 DecimalSI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{13004902400 0} {&lt;nil&gt;} 12700100Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Phase:,Conditions:[{FrequentContainerdRestart False 2019-06-27 11:31:58 +0000 UTC 2019-06-27 09:49:05 +0000 UTC FrequentContainerdRestart containerd is functioning properly} {KernelDeadlock False 2019-06-27 11:31:58 +0000 UTC 2019-06-27 09:44:02 +0000 UTC KernelHasNoDeadlock kernel has no deadlock} {ReadonlyFilesystem False 2019-06-27 11:31:58 +0000 UTC 2019-06-27 09:44:02 +0000 UTC FilesystemIsNotReadOnly Filesystem is not read-only} {CorruptDockerOverlay2 False 2019-06-27 11:31:58 +0000 UTC 2019-06-27 09:49:03 +0000 UTC CorruptDockerOverlay2 docker overlay2 is functioning properly} {FrequentUnregisterNetDevice False 2019-06-27 11:31:58 +0000 UTC 2019-06-27 09:49:03 +0000 UTC UnregisterNetDevice node is functioning properly} {FrequentKubeletRestart False 2019-06-27 11:31:58 +0000 UTC 2019-06-27 09:49:03 +0000 UTC FrequentKubeletRestart kubelet is functioning properly} {FrequentDockerRestart False 2019-06-27 11:31:58 +0000 UTC 2019-06-27 09:49:04 +0000 UTC FrequentDockerRestart docker is functioning properly} {NetworkUnavailable False 2019-06-27 09:45:46 +0000 UTC 2019-06-27 09:45:46 +0000 UTC RouteCreated NodeController create implicit route} {OutOfDisk False 2019-06-27 11:31:57 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientDisk kubelet has sufficient disk space available} {MemoryPressure False 2019-06-27 11:31:57 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientMemory kubelet has sufficient memory available} {DiskPressure False 2019-06-27 11:31:57 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasNoDiskPressure kubelet has no disk pressure} {PIDPressure False 2019-06-27 11:31:57 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientPID kubelet has sufficient PID available} {Ready True 2019-06-27 11:31:57 +0000 UTC 2019-06-27 09:46:06 +0000 UTC KubeletReady kubelet is posting ready status. AppArmor enabled}],Addresses:[{InternalIP 10.128.0.41} {ExternalIP 34.67.223.57} {Hostname gke-standard-cluster-1-default-pool-04796f61-sx27}],DaemonEndpoints:NodeDaemonEndpoints{KubeletEndpoint:DaemonEndpoint{Port:10250,},},NodeInfo:NodeSystemInfo{MachineID:ae4216d32aefe90029e9232dc77c1eda,SystemUUID:AE4216D3-2AEF-E900-29E9-232DC77C1EDA,BootID:75bdcdda-ed72-4df2-bb2c-68fbb20cc027,KernelVersion:4.14.119+,OSImage:Container-Optimized OS from Google,ContainerRuntimeVersion:docker://17.3.2,KubeletVersion:v1.11.10-gke.4,KubeProxyVersion:v1.11.10-gke.4,OperatingSystem:linux,Architecture:amd64,},Images:[{[k8s.gcr.io/mysql-galera@sha256:daa2bc871bad84f4a05536fa3b0956ff8698b41e7f48c6280a6450cec6d25917 k8s.gcr.io/mysql-galera:e2e] 715149006} {[java@sha256:b91008e234402fc87e7889d6af1f36b6ece844c05989236d83d1f658a6f329b0 java:openjdk-8-jre] 311241763} {[gcr.io/heptio-images/sonobuoy-plugin-systemd-logs@sha256:58e077ba773ff5d7b6bba90771fad72217f0d10b913bb66bb0afb387c9552788 gcr.io/heptio-images/sonobuoy-plugin-systemd-logs:latest] 290890605} {[k8s.gcr.io/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e9eb2b k8s.gcr.io/node-problem-detector:v0.4.1] 286572743} {[gcr.io/stackdriver-agents/stackdriver-logging-agent@sha256:f8d5231b67b9c53f60068b535a11811d29d1b3efd53d2b79f2a2591ea338e4f2 gcr.io/stackdriver-agents/stackdriver-logging-agent:0.6-1.6.0-1] 223242132} {[k8s.gcr.io/zookeeper-install-3.5.0-alpha@sha256:60d7f3ce5ec9ff06bc82a1e42d4c66633b93ebd22a8c792a8d34f8c0078f6b68 k8s.gcr.io/zookeeper-install-3.5.0-alpha:e2e] 220145150} {[k8s.gcr.io/galera-install@sha256:7f8245935b92f170e22d7b2cdf802adc75da3a3e05120c50eaa97543e1c20b0a k8s.gcr.io/galera-install:0.1] 181241032} {[cockroachdb/cockroach@sha256:815acd11351fb5087edb0ec73896cd2baf5767dedc20ccd0bbe6d08d1e05b38f cockroachdb/cockroach:v1.0] 163225516} {[cockroachdb/cockroach-k8s-init@sha256:aa384ac9476677208acc0d0d625b0f277a7142603846cefb71f80706682c188c cockroachdb/cockroach-k8s-init:0.1] 153888353} {[k8s.gcr.io/fluentd-elasticsearch@sha256:b8c94527b489fb61d3d81ce5ad7f3ddbb7be71e9620a3a36e2bede2f2e487d73 k8s.gcr.io/fluentd-elasticsearch:v2.0.4] 135716379} {[debian@sha256:6b95a104400bb99ad60b47a48e37d5d1eb71a3f9ec8e86854e0cf64ecc5fd0e8 debian:jessie] 129072320} {[k8s.gcr.io/nginx-slim-amd64@sha256:6654db6d4028756062edac466454ee5c9cf9b20ef79e35a81e3c840031eb1e2b k8s.gcr.io/nginx-slim-amd64:0.20] 103591055} {[k8s.gcr.io/kubernetes-dashboard-amd64@sha256:dc4026c1b595435ef5527ca598e1e9c4343076926d7d62b365c44831395adbd0 k8s.gcr.io/kubernetes-dashboard-amd64:v1.8.3] 102319441} {[gcr.io/google_containers/kube-proxy:v1.11.10-gke.4 k8s.gcr.io/kube-proxy:v1.11.10-gke.4] 102279340} {[k8s.gcr.io/echoserver@sha256:cb5c1bddd1b5665e1867a7fa1b5fa843a47ee433bbb75d4293888b71def53229 k8s.gcr.io/echoserver:1.10] 95361986} {[k8s.gcr.io/nginx-slim-amd64@sha256:8ca6a9ecef3b2ef02f6e0c3d449235d9c53d532f420cc0a29a6a133aa88df256 k8s.gcr.io/nginx-slim-amd64:0.21] 95339966} {[gcr.io/heptio-images/sonobuoy@sha256:d6d530b1ede4b82e9989aa1ba7ae4cd4fac09c6f7cb6a7c4f9270fff241e72c7 gcr.io/heptio-images/sonobuoy:v0.14.3] 89896078} {[k8s.gcr.io/fluentd-gcp-scaler@sha256:a5ace7506d393c4ed65eb2cbb6312c64ab357fcea16dff76b9055bc6e498e5ff k8s.gcr.io/fluentd-gcp-scaler:0.5.1] 86637208} {[k8s.gcr.io/heapster-amd64@sha256:9fae0af136ce0cf4f88393b3670f7139ffc464692060c374d2ae748e13144521 k8s.gcr.io/heapster-amd64:v1.6.0-beta.1] 76016169} {[k8s.gcr.io/ingress-gce-glbc-amd64@sha256:31d36bbd9c44caffa135fc78cf0737266fcf25e3cf0cd1c2fcbfbc4f7309cc52 k8s.gcr.io/ingress-gce-glbc-amd64:v1.1.1] 67801919} {[k8s.gcr.io/kube-addon-manager@sha256:d53486c3a0b49ebee019932878dc44232735d5622a51dbbdcec7124199020d09 k8s.gcr.io/kube-addon-manager:v8.7] 63322109} {[k8s.gcr.io/cpvpa-amd64@sha256:cfe7b0a11c9c8e18c87b1eb34fef9a7cbb8480a8da11fc2657f78dbf4739f869 k8s.gcr.io/cpvpa-amd64:v0.6.0] 51785854} {[k8s.gcr.io/k8s-dns-kube-dns-amd64@sha256:618a82fa66cf0c75e4753369a6999032372be7308866fc9afb381789b1e5ad52 k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.13] 51157394} {[k8s.gcr.io/cluster-proportional-autoscaler-amd64@sha256:003f98d9f411ddfa6ff6d539196355e03ddd69fa4ed38c7ffb8fec6f729afe2d k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.1.2-r2] 49648481} {[k8s.gcr.io/ip-masq-agent-amd64@sha256:1ffda57d87901bc01324c82ceb2145fe6a0448d3f0dd9cb65aa76a867cd62103 k8s.gcr.io/ip-masq-agent-amd64:v2.1.1] 49612505}],VolumesInUse:[],VolumesAttached:[],Config:nil,},}&#xA;Jun 27 11:31:59.460: INFO: &#xA;Logging kubelet events for node gke-standard-cluster-1-default-pool-04796f61-sx27&#xA;Jun 27 11:31:59.470: INFO: &#xA;Logging pods the kubelet thinks is on node gke-standard-cluster-1-default-pool-04796f61-sx27&#xA;Jun 27 11:31:59.501: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-28cmn started at 2019-06-27 10:01:32 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:31:59.501: INFO: &#x9;Container sonobuoy-worker ready: true, restart count 1&#xA;Jun 27 11:31:59.501: INFO: &#x9;Container systemd-logs ready: true, restart count 1&#xA;Jun 27 11:31:59.501: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-sx27 started at &lt;nil&gt; (0+0 container statuses recorded)&#xA;Jun 27 11:31:59.501: INFO: fluentd-gcp-v3.2.0-jb9xn started at 2019-06-27 09:46:25 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:31:59.502: INFO: &#x9;Container fluentd-gcp ready: true, restart count 0&#xA;Jun 27 11:31:59.502: INFO: &#x9;Container prometheus-to-sd-exporter ready: true, restart count 0&#xA;Jun 27 11:31:59.502: INFO: kube-dns-76dbb796c5-6qg5f started at 2019-06-27 09:46:07 +0000 UTC (0+4 container statuses recorded)&#xA;Jun 27 11:31:59.502: INFO: &#x9;Container dnsmasq ready: true, restart count 0&#xA;Jun 27 11:31:59.502: INFO: &#x9;Container kubedns ready: true, restart count 0&#xA;Jun 27 11:31:59.502: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 11:31:59.502: INFO: &#x9;Container sidecar ready: true, restart count 0&#xA;Jun 27 11:31:59.502: INFO: prometheus-to-sd-2qsz9 started at 2019-06-27 09:45:46 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 11:31:59.502: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 11:31:59.567: INFO: &#xA;Latency metrics for node gke-standard-cluster-1-default-pool-04796f61-sx27&#xA;STEP: Dumping a list of prepulled images on each node to file /tmp/results/image-puller.txt&#xA;Jun 27 11:31:59.574: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready&#xA;STEP: Destroying namespace &#34;e2e-tests-mysql-upgrade-w98v7&#34; for this suite.&#xA;Jun 27 11:32:05.614: INFO: Waiting up to 30s for server preferred namespaced resources to be successfully discovered&#xA;Jun 27 11:32:05.654: INFO: namespace: e2e-tests-mysql-upgrade-w98v7, resource: bindings, ignored listing per whitelist&#xA;Jun 27 11:32:05.849: INFO: namespace e2e-tests-mysql-upgrade-w98v7 deletion completed in 6.270294262s&#xA;[AfterEach] [sig-apps] stateful Upgrade [Feature:StatefulUpgrade]&#xA;  /workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:142&#xA;STEP: Collecting events from namespace &#34;e2e-tests-etcd-upgrade-5kcb8&#34;.&#xA;STEP: Found 0 events.&#xA;Jun 27 11:32:05.889: INFO: POD                                                           NODE                                               PHASE    GRACE  CONDITIONS&#xA;Jun 27 11:32:05.889: INFO: sonobuoy                                                      gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:18 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:18 +0000 UTC  }]&#xA;Jun 27 11:32:05.889: INFO: sonobuoy-e2e-job-3f201e2f061345e7                             gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:02:00 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  }]&#xA;Jun 27 11:32:05.889: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-28cmn       gke-standard-cluster-1-default-pool-04796f61-sx27  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 11:01:50 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  }]&#xA;Jun 27 11:32:05.889: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-44pmg       gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 11:01:47 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  }]&#xA;Jun 27 11:32:05.889: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-rmqrw       gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 11:01:51 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  }]&#xA;Jun 27 11:32:05.889: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-xk7gb       gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 11:02:02 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  }]&#xA;Jun 27 11:32:05.889: INFO: event-exporter-v0.2.4-5c57bb7478-xtjl2                        gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:12 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 11:32:05.889: INFO: fluentd-gcp-scaler-5b5bf8b99f-vkg4s                           gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:12 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 11:32:05.889: INFO: fluentd-gcp-v3.2.0-2hkh9                                      gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:35 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  }]&#xA;Jun 27 11:32:05.889: INFO: fluentd-gcp-v3.2.0-j677d                                      gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:35 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  }]&#xA;Jun 27 11:32:05.889: INFO: fluentd-gcp-v3.2.0-jb9xn                                      gke-standard-cluster-1-default-pool-04796f61-sx27  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:35 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  }]&#xA;Jun 27 11:32:05.889: INFO: fluentd-gcp-v3.2.0-k8m8z                                      gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:36 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  }]&#xA;Jun 27 11:32:05.889: INFO: heapster-v1.6.0-beta.1-5dcd447597-kkgnc                       gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:24 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:26 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:24 +0000 UTC  }]&#xA;Jun 27 11:32:05.889: INFO: kube-dns-76dbb796c5-4ndph                                     gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:22 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 11:32:05.889: INFO: kube-dns-76dbb796c5-6qg5f                                     gke-standard-cluster-1-default-pool-04796f61-sx27  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:07 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:20 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:07 +0000 UTC  }]&#xA;Jun 27 11:32:05.889: INFO: kube-dns-autoscaler-67c97c87fb-4j4kd                          gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:12 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 11:32:05.889: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-2br3  gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:06 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 11:32:05.890: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-dmzx  gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:06 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 11:32:05.890: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-rr33  gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:04 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:12 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:04 +0000 UTC  }]&#xA;Jun 27 11:32:05.890: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-sx27  gke-standard-cluster-1-default-pool-04796f61-sx27  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:06 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 11:32:05.890: INFO: l7-default-backend-7ff48cffd7-g8pnv                           gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:20 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 11:32:05.890: INFO: metrics-server-v0.2.1-fd596d746-mnb77                         gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:11 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:14 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:11 +0000 UTC  }]&#xA;Jun 27 11:32:05.890: INFO: prometheus-to-sd-28w8p                                        gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:45 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:56 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:45 +0000 UTC  }]&#xA;Jun 27 11:32:05.890: INFO: prometheus-to-sd-2qsz9                                        gke-standard-cluster-1-default-pool-04796f61-sx27  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:46 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:55 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:46 +0000 UTC  }]&#xA;Jun 27 11:32:05.890: INFO: prometheus-to-sd-529s6                                        gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:46 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:51 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:46 +0000 UTC  }]&#xA;Jun 27 11:32:05.890: INFO: prometheus-to-sd-q6mwq                                        gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:45 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:53 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:45 +0000 UTC  }]&#xA;Jun 27 11:32:05.890: INFO: &#xA;Jun 27 11:32:05.903: INFO: &#xA;Logging node info for node gke-standard-cluster-1-default-pool-04796f61-2br3&#xA;Jun 27 11:32:05.908: INFO: Node Info: &amp;Node{ObjectMeta:k8s_io_apimachinery_pkg_apis_meta_v1.ObjectMeta{Name:gke-standard-cluster-1-default-pool-04796f61-2br3,GenerateName:,Namespace:,SelfLink:/api/v1/nodes/gke-standard-cluster-1-default-pool-04796f61-2br3,UID:55ee085e-98c0-11e9-93fd-42010a800028,ResourceVersion:32780,Generation:0,CreationTimestamp:2019-06-27 09:45:45 +0000 UTC,DeletionTimestamp:&lt;nil&gt;,DeletionGracePeriodSeconds:nil,Labels:map[string]string{beta.kubernetes.io/arch: amd64,beta.kubernetes.io/fluentd-ds-ready: true,beta.kubernetes.io/instance-type: n1-standard-4,beta.kubernetes.io/os: linux,cloud.google.com/gke-nodepool: default-pool,cloud.google.com/gke-os-distribution: cos,failure-domain.beta.kubernetes.io/region: us-central1,failure-domain.beta.kubernetes.io/zone: us-central1-a,kubernetes.io/hostname: gke-standard-cluster-1-default-pool-04796f61-2br3,},Annotations:map[string]string{container.googleapis.com/instance_id: 5263861497271497046,node.alpha.kubernetes.io/ttl: 0,volumes.kubernetes.io/controller-managed-attach-detach: true,},OwnerReferences:[],Finalizers:[],ClusterName:,Initializers:nil,},Spec:NodeSpec{PodCIDR:10.8.2.0/24,DoNotUse_ExternalID:,ProviderID:gce://sinuous-tuner-235209/us-central1-a/gke-standard-cluster-1-default-pool-04796f61-2br3,Unschedulable:false,Taints:[],ConfigSource:nil,},Status:NodeStatus{Capacity:ResourceList{cpu: {{4 0} {&lt;nil&gt;} 4 DecimalSI},ephemeral-storage: {{101241290752 0} {&lt;nil&gt;}  BinarySI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{15768948736 0} {&lt;nil&gt;} 15399364Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Allocatable:ResourceList{cpu: {{3920 -3} {&lt;nil&gt;} 3920m DecimalSI},ephemeral-storage: {{47093746742 0} {&lt;nil&gt;} 47093746742 DecimalSI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{13004902400 0} {&lt;nil&gt;} 12700100Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Phase:,Conditions:[{FrequentDockerRestart False 2019-06-27 11:31:59 +0000 UTC 2019-06-27 09:49:04 +0000 UTC FrequentDockerRestart docker is functioning properly} {FrequentContainerdRestart False 2019-06-27 11:31:59 +0000 UTC 2019-06-27 09:49:05 +0000 UTC FrequentContainerdRestart containerd is functioning properly} {KernelDeadlock False 2019-06-27 11:31:59 +0000 UTC 2019-06-27 09:44:02 +0000 UTC KernelHasNoDeadlock kernel has no deadlock} {ReadonlyFilesystem False 2019-06-27 11:31:59 +0000 UTC 2019-06-27 09:44:02 +0000 UTC FilesystemIsNotReadOnly Filesystem is not read-only} {CorruptDockerOverlay2 False 2019-06-27 11:31:59 +0000 UTC 2019-06-27 09:49:03 +0000 UTC CorruptDockerOverlay2 docker overlay2 is functioning properly} {FrequentUnregisterNetDevice False 2019-06-27 11:31:59 +0000 UTC 2019-06-27 09:49:03 +0000 UTC UnregisterNetDevice node is functioning properly} {FrequentKubeletRestart False 2019-06-27 11:31:59 +0000 UTC 2019-06-27 09:49:03 +0000 UTC FrequentKubeletRestart kubelet is functioning properly} {NetworkUnavailable False 2019-06-27 09:45:46 +0000 UTC 2019-06-27 09:45:46 +0000 UTC RouteCreated NodeController create implicit route} {OutOfDisk False 2019-06-27 11:31:56 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientDisk kubelet has sufficient disk space available} {MemoryPressure False 2019-06-27 11:31:56 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientMemory kubelet has sufficient memory available} {DiskPressure False 2019-06-27 11:31:56 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasNoDiskPressure kubelet has no disk pressure} {PIDPressure False 2019-06-27 11:31:56 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientPID kubelet has sufficient PID available} {Ready True 2019-06-27 11:31:56 +0000 UTC 2019-06-27 09:46:05 +0000 UTC KubeletReady kubelet is posting ready status. AppArmor enabled}],Addresses:[{InternalIP 10.128.0.42} {ExternalIP 35.232.42.152} {Hostname gke-standard-cluster-1-default-pool-04796f61-2br3}],DaemonEndpoints:NodeDaemonEndpoints{KubeletEndpoint:DaemonEndpoint{Port:10250,},},NodeInfo:NodeSystemInfo{MachineID:4ed4f0f644ff78a293f5a14239e1dc93,SystemUUID:4ED4F0F6-44FF-78A2-93F5-A14239E1DC93,BootID:df50bfdc-3ecb-4ada-a245-3c7fd247294f,KernelVersion:4.14.119+,OSImage:Container-Optimized OS from Google,ContainerRuntimeVersion:docker://17.3.2,KubeletVersion:v1.11.10-gke.4,KubeProxyVersion:v1.11.10-gke.4,OperatingSystem:linux,Architecture:amd64,},Images:[{[k8s.gcr.io/mysql-galera@sha256:daa2bc871bad84f4a05536fa3b0956ff8698b41e7f48c6280a6450cec6d25917 k8s.gcr.io/mysql-galera:e2e] 715149006} {[java@sha256:b91008e234402fc87e7889d6af1f36b6ece844c05989236d83d1f658a6f329b0 java:openjdk-8-jre] 311241763} {[gcr.io/heptio-images/sonobuoy-plugin-systemd-logs@sha256:58e077ba773ff5d7b6bba90771fad72217f0d10b913bb66bb0afb387c9552788 gcr.io/heptio-images/sonobuoy-plugin-systemd-logs:latest] 290890605} {[k8s.gcr.io/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e9eb2b k8s.gcr.io/node-problem-detector:v0.4.1] 286572743} {[gcr.io/stackdriver-agents/stackdriver-logging-agent@sha256:f8d5231b67b9c53f60068b535a11811d29d1b3efd53d2b79f2a2591ea338e4f2 gcr.io/stackdriver-agents/stackdriver-logging-agent:0.6-1.6.0-1] 223242132} {[k8s.gcr.io/zookeeper-install-3.5.0-alpha@sha256:60d7f3ce5ec9ff06bc82a1e42d4c66633b93ebd22a8c792a8d34f8c0078f6b68 k8s.gcr.io/zookeeper-install-3.5.0-alpha:e2e] 220145150} {[k8s.gcr.io/galera-install@sha256:7f8245935b92f170e22d7b2cdf802adc75da3a3e05120c50eaa97543e1c20b0a k8s.gcr.io/galera-install:0.1] 181241032} {[cockroachdb/cockroach@sha256:815acd11351fb5087edb0ec73896cd2baf5767dedc20ccd0bbe6d08d1e05b38f cockroachdb/cockroach:v1.0] 163225516} {[cockroachdb/cockroach-k8s-init@sha256:aa384ac9476677208acc0d0d625b0f277a7142603846cefb71f80706682c188c cockroachdb/cockroach-k8s-init:0.1] 153888353} {[k8s.gcr.io/fluentd-elasticsearch@sha256:b8c94527b489fb61d3d81ce5ad7f3ddbb7be71e9620a3a36e2bede2f2e487d73 k8s.gcr.io/fluentd-elasticsearch:v2.0.4] 135716379} {[debian@sha256:6b95a104400bb99ad60b47a48e37d5d1eb71a3f9ec8e86854e0cf64ecc5fd0e8 debian:jessie] 129072320} {[nginx@sha256:079aa93463d2566b7a81cbdf856afc6d4d2a6f9100ca3bcbecf24ade92c9a7fe nginx:latest] 109258867} {[k8s.gcr.io/nginx-slim-amd64@sha256:6654db6d4028756062edac466454ee5c9cf9b20ef79e35a81e3c840031eb1e2b k8s.gcr.io/nginx-slim-amd64:0.20] 103591055} {[k8s.gcr.io/kubernetes-dashboard-amd64@sha256:dc4026c1b595435ef5527ca598e1e9c4343076926d7d62b365c44831395adbd0 k8s.gcr.io/kubernetes-dashboard-amd64:v1.8.3] 102319441} {[gcr.io/google_containers/kube-proxy:v1.11.10-gke.4 k8s.gcr.io/kube-proxy:v1.11.10-gke.4] 102279340} {[k8s.gcr.io/echoserver@sha256:cb5c1bddd1b5665e1867a7fa1b5fa843a47ee433bbb75d4293888b71def53229 k8s.gcr.io/echoserver:1.10] 95361986} {[k8s.gcr.io/nginx-slim-amd64@sha256:8ca6a9ecef3b2ef02f6e0c3d449235d9c53d532f420cc0a29a6a133aa88df256 k8s.gcr.io/nginx-slim-amd64:0.21] 95339966} {[gcr.io/heptio-images/sonobuoy@sha256:d6d530b1ede4b82e9989aa1ba7ae4cd4fac09c6f7cb6a7c4f9270fff241e72c7 gcr.io/heptio-images/sonobuoy:v0.14.3] 89896078} {[k8s.gcr.io/fluentd-gcp-scaler@sha256:a5ace7506d393c4ed65eb2cbb6312c64ab357fcea16dff76b9055bc6e498e5ff k8s.gcr.io/fluentd-gcp-scaler:0.5.1] 86637208} {[k8s.gcr.io/heapster-amd64@sha256:9fae0af136ce0cf4f88393b3670f7139ffc464692060c374d2ae748e13144521 k8s.gcr.io/heapster-amd64:v1.6.0-beta.1] 76016169} {[k8s.gcr.io/ingress-gce-glbc-amd64@sha256:31d36bbd9c44caffa135fc78cf0737266fcf25e3cf0cd1c2fcbfbc4f7309cc52 k8s.gcr.io/ingress-gce-glbc-amd64:v1.1.1] 67801919} {[k8s.gcr.io/kube-addon-manager@sha256:d53486c3a0b49ebee019932878dc44232735d5622a51dbbdcec7124199020d09 k8s.gcr.io/kube-addon-manager:v8.7] 63322109} {[k8s.gcr.io/cpvpa-amd64@sha256:cfe7b0a11c9c8e18c87b1eb34fef9a7cbb8480a8da11fc2657f78dbf4739f869 k8s.gcr.io/cpvpa-amd64:v0.6.0] 51785854} {[k8s.gcr.io/cluster-proportional-autoscaler-amd64@sha256:003f98d9f411ddfa6ff6d539196355e03ddd69fa4ed38c7ffb8fec6f729afe2d k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.1.2-r2] 49648481} {[k8s.gcr.io/ip-masq-agent-amd64@sha256:1ffda57d87901bc01324c82ceb2145fe6a0448d3f0dd9cb65aa76a867cd62103 k8s.gcr.io/ip-masq-agent-amd64:v2.1.1] 49612505}],VolumesInUse:[kubernetes.io/gce-pd/gke-standard-cluster-1-pvc-804259ed-98c2-11e9-93fd-42010a800028],VolumesAttached:[{kubernetes.io/gce-pd/gke-standard-cluster-1-pvc-804259ed-98c2-11e9-93fd-42010a800028 /dev/disk/by-id/google-gke-standard-cluster-1-pvc-804259ed-98c2-11e9-93fd-42010a800028}],Config:nil,},}&#xA;Jun 27 11:32:05.908: INFO: &#xA;Logging kubelet events for node gke-standard-cluster-1-default-pool-04796f61-2br3&#xA;Jun 27 11:32:05.912: INFO: &#xA;Logging pods the kubelet thinks is on node gke-standard-cluster-1-default-pool-04796f61-2br3&#xA;Jun 27 11:32:05.924: INFO: fluentd-gcp-v3.2.0-2hkh9 started at 2019-06-27 09:46:25 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:32:05.924: INFO: &#x9;Container fluentd-gcp ready: true, restart count 0&#xA;Jun 27 11:32:05.924: INFO: &#x9;Container prometheus-to-sd-exporter ready: true, restart count 0&#xA;Jun 27 11:32:05.924: INFO: sonobuoy started at 2019-06-27 10:01:18 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 11:32:05.924: INFO: &#x9;Container kube-sonobuoy ready: true, restart count 0&#xA;Jun 27 11:32:05.924: INFO: heapster-v1.6.0-beta.1-5dcd447597-kkgnc started at 2019-06-27 09:46:24 +0000 UTC (0+3 container statuses recorded)&#xA;Jun 27 11:32:05.924: INFO: &#x9;Container heapster ready: true, restart count 0&#xA;Jun 27 11:32:05.924: INFO: &#x9;Container heapster-nanny ready: true, restart count 0&#xA;Jun 27 11:32:05.924: INFO: &#x9;Container prom-to-sd ready: true, restart count 0&#xA;Jun 27 11:32:05.924: INFO: prometheus-to-sd-q6mwq started at 2019-06-27 09:45:45 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 11:32:05.924: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 11:32:05.924: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-2br3 started at &lt;nil&gt; (0+0 container statuses recorded)&#xA;Jun 27 11:32:05.924: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-44pmg started at 2019-06-27 10:01:32 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:32:05.924: INFO: &#x9;Container sonobuoy-worker ready: true, restart count 1&#xA;Jun 27 11:32:05.924: INFO: &#x9;Container systemd-logs ready: true, restart count 1&#xA;Jun 27 11:32:05.960: INFO: &#xA;Latency metrics for node gke-standard-cluster-1-default-pool-04796f61-2br3&#xA;Jun 27 11:32:05.960: INFO: {Operation:stop_container Method:docker_operations_latency_microseconds Quantile:0.99 Latency:30.06882s}&#xA;Jun 27 11:32:05.960: INFO: &#xA;Logging node info for node gke-standard-cluster-1-default-pool-04796f61-dmzx&#xA;Jun 27 11:32:05.968: INFO: Node Info: &amp;Node{ObjectMeta:k8s_io_apimachinery_pkg_apis_meta_v1.ObjectMeta{Name:gke-standard-cluster-1-default-pool-04796f61-dmzx,GenerateName:,Namespace:,SelfLink:/api/v1/nodes/gke-standard-cluster-1-default-pool-04796f61-dmzx,UID:563a4f0e-98c0-11e9-93fd-42010a800028,ResourceVersion:32765,Generation:0,CreationTimestamp:2019-06-27 09:45:45 +0000 UTC,DeletionTimestamp:&lt;nil&gt;,DeletionGracePeriodSeconds:nil,Labels:map[string]string{beta.kubernetes.io/arch: amd64,beta.kubernetes.io/fluentd-ds-ready: true,beta.kubernetes.io/instance-type: n1-standard-4,beta.kubernetes.io/os: linux,cloud.google.com/gke-nodepool: default-pool,cloud.google.com/gke-os-distribution: cos,failure-domain.beta.kubernetes.io/region: us-central1,failure-domain.beta.kubernetes.io/zone: us-central1-a,kubernetes.io/hostname: gke-standard-cluster-1-default-pool-04796f61-dmzx,},Annotations:map[string]string{container.googleapis.com/instance_id: 8240935979917586774,node.alpha.kubernetes.io/ttl: 0,volumes.kubernetes.io/controller-managed-attach-detach: true,},OwnerReferences:[],Finalizers:[],ClusterName:,Initializers:nil,},Spec:NodeSpec{PodCIDR:10.8.4.0/24,DoNotUse_ExternalID:,ProviderID:gce://sinuous-tuner-235209/us-central1-a/gke-standard-cluster-1-default-pool-04796f61-dmzx,Unschedulable:false,Taints:[],ConfigSource:nil,},Status:NodeStatus{Capacity:ResourceList{cpu: {{4 0} {&lt;nil&gt;} 4 DecimalSI},ephemeral-storage: {{101241290752 0} {&lt;nil&gt;}  BinarySI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{15768940544 0} {&lt;nil&gt;} 15399356Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Allocatable:ResourceList{cpu: {{3920 -3} {&lt;nil&gt;} 3920m DecimalSI},ephemeral-storage: {{47093746742 0} {&lt;nil&gt;} 47093746742 DecimalSI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{13004894208 0} {&lt;nil&gt;} 12700092Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Phase:,Conditions:[{ReadonlyFilesystem False 2019-06-27 11:31:54 +0000 UTC 2019-06-27 09:44:03 +0000 UTC FilesystemIsNotReadOnly Filesystem is not read-only} {FrequentUnregisterNetDevice False 2019-06-27 11:31:54 +0000 UTC 2019-06-27 09:49:04 +0000 UTC UnregisterNetDevice node is functioning properly} {FrequentKubeletRestart False 2019-06-27 11:31:54 +0000 UTC 2019-06-27 09:49:04 +0000 UTC FrequentKubeletRestart kubelet is functioning properly} {FrequentDockerRestart False 2019-06-27 11:31:54 +0000 UTC 2019-06-27 09:49:05 +0000 UTC FrequentDockerRestart docker is functioning properly} {FrequentContainerdRestart False 2019-06-27 11:31:54 +0000 UTC 2019-06-27 09:49:06 +0000 UTC FrequentContainerdRestart containerd is functioning properly} {CorruptDockerOverlay2 False 2019-06-27 11:31:54 +0000 UTC 2019-06-27 09:49:04 +0000 UTC CorruptDockerOverlay2 docker overlay2 is functioning properly} {KernelDeadlock False 2019-06-27 11:31:54 +0000 UTC 2019-06-27 09:44:03 +0000 UTC KernelHasNoDeadlock kernel has no deadlock} {NetworkUnavailable False 2019-06-27 09:45:46 +0000 UTC 2019-06-27 09:45:46 +0000 UTC RouteCreated NodeController create implicit route} {OutOfDisk False 2019-06-27 11:31:57 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientDisk kubelet has sufficient disk space available} {MemoryPressure False 2019-06-27 11:31:57 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientMemory kubelet has sufficient memory available} {DiskPressure False 2019-06-27 11:31:57 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasNoDiskPressure kubelet has no disk pressure} {PIDPressure False 2019-06-27 11:31:57 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientPID kubelet has sufficient PID available} {Ready True 2019-06-27 11:31:57 +0000 UTC 2019-06-27 09:46:06 +0000 UTC KubeletReady kubelet is posting ready status. AppArmor enabled}],Addresses:[{InternalIP 10.128.0.45} {ExternalIP 34.67.69.128} {Hostname gke-standard-cluster-1-default-pool-04796f61-dmzx}],DaemonEndpoints:NodeDaemonEndpoints{KubeletEndpoint:DaemonEndpoint{Port:10250,},},NodeInfo:NodeSystemInfo{MachineID:1e2b8bee3c68760edea50ec32bebc9c7,SystemUUID:1E2B8BEE-3C68-760E-DEA5-0EC32BEBC9C7,BootID:cca2dcb1-4058-446f-b35a-be81be4bdd91,KernelVersion:4.14.119+,OSImage:Container-Optimized OS from Google,ContainerRuntimeVersion:docker://17.3.2,KubeletVersion:v1.11.10-gke.4,KubeProxyVersion:v1.11.10-gke.4,OperatingSystem:linux,Architecture:amd64,},Images:[{[k8s.gcr.io/mysql-galera@sha256:daa2bc871bad84f4a05536fa3b0956ff8698b41e7f48c6280a6450cec6d25917 k8s.gcr.io/mysql-galera:e2e] 715149006} {[gcr.io/heptio-images/kube-conformance@sha256:e208e87718fee7fe922ad69f740ca23e5843d05faa014ef23a37cdd017944946 gcr.io/heptio-images/kube-conformance:v1.11] 532217543} {[java@sha256:b91008e234402fc87e7889d6af1f36b6ece844c05989236d83d1f658a6f329b0 java:openjdk-8-jre] 311241763} {[k8s.gcr.io/redis-install-3.2.0@sha256:84305c74214f769ac3bdb3b6ceae35b8f13dd5485a6255a31776f3f3bcb2e4f3 k8s.gcr.io/redis-install-3.2.0:e2e] 294462045} {[gcr.io/heptio-images/sonobuoy-plugin-systemd-logs@sha256:58e077ba773ff5d7b6bba90771fad72217f0d10b913bb66bb0afb387c9552788 gcr.io/heptio-images/sonobuoy-plugin-systemd-logs:latest] 290890605} {[k8s.gcr.io/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e9eb2b k8s.gcr.io/node-problem-detector:v0.4.1] 286572743} {[gcr.io/stackdriver-agents/stackdriver-logging-agent@sha256:f8d5231b67b9c53f60068b535a11811d29d1b3efd53d2b79f2a2591ea338e4f2 gcr.io/stackdriver-agents/stackdriver-logging-agent:0.6-1.6.0-1] 223242132} {[k8s.gcr.io/zookeeper-install-3.5.0-alpha@sha256:60d7f3ce5ec9ff06bc82a1e42d4c66633b93ebd22a8c792a8d34f8c0078f6b68 k8s.gcr.io/zookeeper-install-3.5.0-alpha:e2e] 220145150} {[k8s.gcr.io/galera-install@sha256:7f8245935b92f170e22d7b2cdf802adc75da3a3e05120c50eaa97543e1c20b0a k8s.gcr.io/galera-install:0.1] 181241032} {[cockroachdb/cockroach@sha256:815acd11351fb5087edb0ec73896cd2baf5767dedc20ccd0bbe6d08d1e05b38f cockroachdb/cockroach:v1.0] 163225516} {[cockroachdb/cockroach-k8s-init@sha256:aa384ac9476677208acc0d0d625b0f277a7142603846cefb71f80706682c188c cockroachdb/cockroach-k8s-init:0.1] 153888353} {[k8s.gcr.io/fluentd-elasticsearch@sha256:b8c94527b489fb61d3d81ce5ad7f3ddbb7be71e9620a3a36e2bede2f2e487d73 k8s.gcr.io/fluentd-elasticsearch:v2.0.4] 135716379} {[debian@sha256:6b95a104400bb99ad60b47a48e37d5d1eb71a3f9ec8e86854e0cf64ecc5fd0e8 debian:jessie] 129072320} {[nginx@sha256:079aa93463d2566b7a81cbdf856afc6d4d2a6f9100ca3bcbecf24ade92c9a7fe nginx:latest] 109258867} {[k8s.gcr.io/nginx-slim-amd64@sha256:6654db6d4028756062edac466454ee5c9cf9b20ef79e35a81e3c840031eb1e2b k8s.gcr.io/nginx-slim-amd64:0.20] 103591055} {[k8s.gcr.io/kubernetes-dashboard-amd64@sha256:dc4026c1b595435ef5527ca598e1e9c4343076926d7d62b365c44831395adbd0 k8s.gcr.io/kubernetes-dashboard-amd64:v1.8.3] 102319441} {[gcr.io/google_containers/kube-proxy:v1.11.10-gke.4 k8s.gcr.io/kube-proxy:v1.11.10-gke.4] 102279340} {[k8s.gcr.io/echoserver@sha256:cb5c1bddd1b5665e1867a7fa1b5fa843a47ee433bbb75d4293888b71def53229 k8s.gcr.io/echoserver:1.10] 95361986} {[k8s.gcr.io/nginx-slim-amd64@sha256:8ca6a9ecef3b2ef02f6e0c3d449235d9c53d532f420cc0a29a6a133aa88df256 k8s.gcr.io/nginx-slim-amd64:0.21] 95339966} {[gcr.io/heptio-images/sonobuoy@sha256:d6d530b1ede4b82e9989aa1ba7ae4cd4fac09c6f7cb6a7c4f9270fff241e72c7 gcr.io/heptio-images/sonobuoy:v0.14.3] 89896078} {[k8s.gcr.io/fluentd-gcp-scaler@sha256:a5ace7506d393c4ed65eb2cbb6312c64ab357fcea16dff76b9055bc6e498e5ff k8s.gcr.io/fluentd-gcp-scaler:0.5.1] 86637208} {[k8s.gcr.io/heapster-amd64@sha256:9fae0af136ce0cf4f88393b3670f7139ffc464692060c374d2ae748e13144521 k8s.gcr.io/heapster-amd64:v1.6.0-beta.1] 76016169} {[k8s.gcr.io/ingress-gce-glbc-amd64@sha256:31d36bbd9c44caffa135fc78cf0737266fcf25e3cf0cd1c2fcbfbc4f7309cc52 k8s.gcr.io/ingress-gce-glbc-amd64:v1.1.1] 67801919} {[k8s.gcr.io/kube-addon-manager@sha256:d53486c3a0b49ebee019932878dc44232735d5622a51dbbdcec7124199020d09 k8s.gcr.io/kube-addon-manager:v8.7] 63322109} {[k8s.gcr.io/cpvpa-amd64@sha256:cfe7b0a11c9c8e18c87b1eb34fef9a7cbb8480a8da11fc2657f78dbf4739f869 k8s.gcr.io/cpvpa-amd64:v0.6.0] 51785854}],VolumesInUse:[],VolumesAttached:[],Config:nil,},}&#xA;Jun 27 11:32:05.969: INFO: &#xA;Logging kubelet events for node gke-standard-cluster-1-default-pool-04796f61-dmzx&#xA;Jun 27 11:32:05.977: INFO: &#xA;Logging pods the kubelet thinks is on node gke-standard-cluster-1-default-pool-04796f61-dmzx&#xA;Jun 27 11:32:06.002: INFO: metrics-server-v0.2.1-fd596d746-mnb77 started at 2019-06-27 09:46:11 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:32:06.003: INFO: &#x9;Container metrics-server ready: true, restart count 0&#xA;Jun 27 11:32:06.003: INFO: &#x9;Container metrics-server-nanny ready: true, restart count 0&#xA;Jun 27 11:32:06.003: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-dmzx started at &lt;nil&gt; (0+0 container statuses recorded)&#xA;Jun 27 11:32:06.003: INFO: prometheus-to-sd-529s6 started at 2019-06-27 09:45:46 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 11:32:06.003: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 11:32:06.003: INFO: fluentd-gcp-v3.2.0-j677d started at 2019-06-27 09:46:25 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:32:06.003: INFO: &#x9;Container fluentd-gcp ready: true, restart count 0&#xA;Jun 27 11:32:06.003: INFO: &#x9;Container prometheus-to-sd-exporter ready: true, restart count 0&#xA;Jun 27 11:32:06.003: INFO: sonobuoy-e2e-job-3f201e2f061345e7 started at 2019-06-27 10:01:32 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:32:06.003: INFO: &#x9;Container e2e ready: true, restart count 0&#xA;Jun 27 11:32:06.003: INFO: &#x9;Container sonobuoy-worker ready: true, restart count 0&#xA;Jun 27 11:32:06.003: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-xk7gb started at 2019-06-27 10:01:32 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:32:06.003: INFO: &#x9;Container sonobuoy-worker ready: true, restart count 1&#xA;Jun 27 11:32:06.003: INFO: &#x9;Container systemd-logs ready: true, restart count 1&#xA;Jun 27 11:32:06.092: INFO: &#xA;Latency metrics for node gke-standard-cluster-1-default-pool-04796f61-dmzx&#xA;Jun 27 11:32:06.092: INFO: {Operation:stop_container Method:docker_operations_latency_microseconds Quantile:0.99 Latency:30.071565s}&#xA;Jun 27 11:32:06.092: INFO: &#xA;Logging node info for node gke-standard-cluster-1-default-pool-04796f61-rr33&#xA;Jun 27 11:32:06.097: INFO: Node Info: &amp;Node{ObjectMeta:k8s_io_apimachinery_pkg_apis_meta_v1.ObjectMeta{Name:gke-standard-cluster-1-default-pool-04796f61-rr33,GenerateName:,Namespace:,SelfLink:/api/v1/nodes/gke-standard-cluster-1-default-pool-04796f61-rr33,UID:55b363e1-98c0-11e9-93fd-42010a800028,ResourceVersion:32812,Generation:0,CreationTimestamp:2019-06-27 09:45:45 +0000 UTC,DeletionTimestamp:&lt;nil&gt;,DeletionGracePeriodSeconds:nil,Labels:map[string]string{beta.kubernetes.io/arch: amd64,beta.kubernetes.io/fluentd-ds-ready: true,beta.kubernetes.io/instance-type: n1-standard-4,beta.kubernetes.io/os: linux,cloud.google.com/gke-nodepool: default-pool,cloud.google.com/gke-os-distribution: cos,failure-domain.beta.kubernetes.io/region: us-central1,failure-domain.beta.kubernetes.io/zone: us-central1-a,kubernetes.io/hostname: gke-standard-cluster-1-default-pool-04796f61-rr33,},Annotations:map[string]string{container.googleapis.com/instance_id: 4128615952046174550,node.alpha.kubernetes.io/ttl: 0,volumes.kubernetes.io/controller-managed-attach-detach: true,},OwnerReferences:[],Finalizers:[],ClusterName:,Initializers:nil,},Spec:NodeSpec{PodCIDR:10.8.1.0/24,DoNotUse_ExternalID:,ProviderID:gce://sinuous-tuner-235209/us-central1-a/gke-standard-cluster-1-default-pool-04796f61-rr33,Unschedulable:false,Taints:[],ConfigSource:nil,},Status:NodeStatus{Capacity:ResourceList{cpu: {{4 0} {&lt;nil&gt;} 4 DecimalSI},ephemeral-storage: {{101241290752 0} {&lt;nil&gt;}  BinarySI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{15768948736 0} {&lt;nil&gt;} 15399364Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Allocatable:ResourceList{cpu: {{3920 -3} {&lt;nil&gt;} 3920m DecimalSI},ephemeral-storage: {{47093746742 0} {&lt;nil&gt;} 47093746742 DecimalSI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{13004902400 0} {&lt;nil&gt;} 12700100Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Phase:,Conditions:[{CorruptDockerOverlay2 False 2019-06-27 11:32:06 +0000 UTC 2019-06-27 09:49:03 +0000 UTC CorruptDockerOverlay2 docker overlay2 is functioning properly} {FrequentUnregisterNetDevice False 2019-06-27 11:32:06 +0000 UTC 2019-06-27 09:49:03 +0000 UTC UnregisterNetDevice node is functioning properly} {KernelDeadlock False 2019-06-27 11:32:06 +0000 UTC 2019-06-27 09:44:02 +0000 UTC KernelHasNoDeadlock kernel has no deadlock} {ReadonlyFilesystem False 2019-06-27 11:32:06 +0000 UTC 2019-06-27 09:44:02 +0000 UTC FilesystemIsNotReadOnly Filesystem is not read-only} {FrequentKubeletRestart False 2019-06-27 11:32:06 +0000 UTC 2019-06-27 09:49:03 +0000 UTC FrequentKubeletRestart kubelet is functioning properly} {FrequentDockerRestart False 2019-06-27 11:32:06 +0000 UTC 2019-06-27 09:49:04 +0000 UTC FrequentDockerRestart docker is functioning properly} {FrequentContainerdRestart False 2019-06-27 11:32:06 +0000 UTC 2019-06-27 09:49:05 +0000 UTC FrequentContainerdRestart containerd is functioning properly} {NetworkUnavailable False 2019-06-27 09:45:45 +0000 UTC 2019-06-27 09:45:45 +0000 UTC RouteCreated NodeController create implicit route} {OutOfDisk False 2019-06-27 11:32:05 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientDisk kubelet has sufficient disk space available} {MemoryPressure False 2019-06-27 11:32:05 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientMemory kubelet has sufficient memory available} {DiskPressure False 2019-06-27 11:32:05 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasNoDiskPressure kubelet has no disk pressure} {PIDPressure False 2019-06-27 11:32:05 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientPID kubelet has sufficient PID available} {Ready True 2019-06-27 11:32:05 +0000 UTC 2019-06-27 09:46:05 +0000 UTC KubeletReady kubelet is posting ready status. AppArmor enabled}],Addresses:[{InternalIP 10.128.0.44} {ExternalIP 35.226.22.222} {Hostname gke-standard-cluster-1-default-pool-04796f61-rr33}],DaemonEndpoints:NodeDaemonEndpoints{KubeletEndpoint:DaemonEndpoint{Port:10250,},},NodeInfo:NodeSystemInfo{MachineID:46f905cfd94d81d48ea29f40cb3028b5,SystemUUID:46F905CF-D94D-81D4-8EA2-9F40CB3028B5,BootID:1a132385-80e1-4ef8-8613-100779f1bf54,KernelVersion:4.14.119+,OSImage:Container-Optimized OS from Google,ContainerRuntimeVersion:docker://17.3.2,KubeletVersion:v1.11.10-gke.4,KubeProxyVersion:v1.11.10-gke.4,OperatingSystem:linux,Architecture:amd64,},Images:[{[java@sha256:b91008e234402fc87e7889d6af1f36b6ece844c05989236d83d1f658a6f329b0 java:openjdk-8-jre] 311241763} {[gcr.io/heptio-images/sonobuoy-plugin-systemd-logs@sha256:58e077ba773ff5d7b6bba90771fad72217f0d10b913bb66bb0afb387c9552788 gcr.io/heptio-images/sonobuoy-plugin-systemd-logs:latest] 290890605} {[k8s.gcr.io/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e9eb2b k8s.gcr.io/node-problem-detector:v0.4.1] 286572743} {[gcr.io/stackdriver-agents/stackdriver-logging-agent@sha256:f8d5231b67b9c53f60068b535a11811d29d1b3efd53d2b79f2a2591ea338e4f2 gcr.io/stackdriver-agents/stackdriver-logging-agent:0.6-1.6.0-1] 223242132} {[k8s.gcr.io/zookeeper-install-3.5.0-alpha@sha256:60d7f3ce5ec9ff06bc82a1e42d4c66633b93ebd22a8c792a8d34f8c0078f6b68 k8s.gcr.io/zookeeper-install-3.5.0-alpha:e2e] 220145150} {[cockroachdb/cockroach@sha256:815acd11351fb5087edb0ec73896cd2baf5767dedc20ccd0bbe6d08d1e05b38f cockroachdb/cockroach:v1.0] 163225516} {[cockroachdb/cockroach-k8s-init@sha256:aa384ac9476677208acc0d0d625b0f277a7142603846cefb71f80706682c188c cockroachdb/cockroach-k8s-init:0.1] 153888353} {[k8s.gcr.io/fluentd-elasticsearch@sha256:b8c94527b489fb61d3d81ce5ad7f3ddbb7be71e9620a3a36e2bede2f2e487d73 k8s.gcr.io/fluentd-elasticsearch:v2.0.4] 135716379} {[k8s.gcr.io/nginx-slim-amd64@sha256:6654db6d4028756062edac466454ee5c9cf9b20ef79e35a81e3c840031eb1e2b k8s.gcr.io/nginx-slim-amd64:0.20] 103591055} {[k8s.gcr.io/kubernetes-dashboard-amd64@sha256:dc4026c1b595435ef5527ca598e1e9c4343076926d7d62b365c44831395adbd0 k8s.gcr.io/kubernetes-dashboard-amd64:v1.8.3] 102319441} {[gcr.io/google_containers/kube-proxy:v1.11.10-gke.4 k8s.gcr.io/kube-proxy:v1.11.10-gke.4] 102279340} {[k8s.gcr.io/echoserver@sha256:cb5c1bddd1b5665e1867a7fa1b5fa843a47ee433bbb75d4293888b71def53229 k8s.gcr.io/echoserver:1.10] 95361986} {[k8s.gcr.io/nginx-slim-amd64@sha256:8ca6a9ecef3b2ef02f6e0c3d449235d9c53d532f420cc0a29a6a133aa88df256 k8s.gcr.io/nginx-slim-amd64:0.21] 95339966} {[gcr.io/heptio-images/sonobuoy@sha256:d6d530b1ede4b82e9989aa1ba7ae4cd4fac09c6f7cb6a7c4f9270fff241e72c7 gcr.io/heptio-images/sonobuoy:v0.14.3] 89896078} {[k8s.gcr.io/fluentd-gcp-scaler@sha256:a5ace7506d393c4ed65eb2cbb6312c64ab357fcea16dff76b9055bc6e498e5ff k8s.gcr.io/fluentd-gcp-scaler:0.5.1] 86637208} {[k8s.gcr.io/heapster-amd64@sha256:9fae0af136ce0cf4f88393b3670f7139ffc464692060c374d2ae748e13144521 k8s.gcr.io/heapster-amd64:v1.6.0-beta.1] 76016169} {[k8s.gcr.io/ingress-gce-glbc-amd64@sha256:31d36bbd9c44caffa135fc78cf0737266fcf25e3cf0cd1c2fcbfbc4f7309cc52 k8s.gcr.io/ingress-gce-glbc-amd64:v1.1.1] 67801919} {[k8s.gcr.io/kube-addon-manager@sha256:d53486c3a0b49ebee019932878dc44232735d5622a51dbbdcec7124199020d09 k8s.gcr.io/kube-addon-manager:v8.7] 63322109} {[k8s.gcr.io/cpvpa-amd64@sha256:cfe7b0a11c9c8e18c87b1eb34fef9a7cbb8480a8da11fc2657f78dbf4739f869 k8s.gcr.io/cpvpa-amd64:v0.6.0] 51785854} {[k8s.gcr.io/k8s-dns-kube-dns-amd64@sha256:618a82fa66cf0c75e4753369a6999032372be7308866fc9afb381789b1e5ad52 k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.13] 51157394} {[k8s.gcr.io/cluster-proportional-autoscaler-amd64@sha256:003f98d9f411ddfa6ff6d539196355e03ddd69fa4ed38c7ffb8fec6f729afe2d k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.1.2-r2] 49648481} {[k8s.gcr.io/ip-masq-agent-amd64@sha256:1ffda57d87901bc01324c82ceb2145fe6a0448d3f0dd9cb65aa76a867cd62103 k8s.gcr.io/ip-masq-agent-amd64:v2.1.1] 49612505} {[k8s.gcr.io/k8s-dns-kube-dns-amd64@sha256:b99fc3eee2a9f052f7eb4cc00f15eb12fc405fa41019baa2d6b79847ae7284a8 k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.10] 49549457} {[k8s.gcr.io/rescheduler@sha256:156cfbfd05a5a815206fd2eeb6cbdaf1596d71ea4b415d3a6c43071dd7b99450 k8s.gcr.io/rescheduler:v0.4.0] 48973149} {[k8s.gcr.io/event-exporter@sha256:16ca66e2b5dc7a1ce6a5aafcb21d0885828b75cdfc08135430480f7ad2364adc k8s.gcr.io/event-exporter:v0.2.4] 47261019}],VolumesInUse:[],VolumesAttached:[],Config:nil,},}&#xA;Jun 27 11:32:06.098: INFO: &#xA;Logging kubelet events for node gke-standard-cluster-1-default-pool-04796f61-rr33&#xA;Jun 27 11:32:06.102: INFO: &#xA;Logging pods the kubelet thinks is on node gke-standard-cluster-1-default-pool-04796f61-rr33&#xA;Jun 27 11:32:06.114: INFO: fluentd-gcp-v3.2.0-k8m8z started at 2019-06-27 09:46:25 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:32:06.114: INFO: &#x9;Container fluentd-gcp ready: true, restart count 0&#xA;Jun 27 11:32:06.114: INFO: &#x9;Container prometheus-to-sd-exporter ready: true, restart count 0&#xA;Jun 27 11:32:06.114: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-rr33 started at &lt;nil&gt; (0+0 container statuses recorded)&#xA;Jun 27 11:32:06.114: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-rmqrw started at 2019-06-27 10:01:32 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:32:06.114: INFO: &#x9;Container sonobuoy-worker ready: true, restart count 1&#xA;Jun 27 11:32:06.114: INFO: &#x9;Container systemd-logs ready: true, restart count 1&#xA;Jun 27 11:32:06.114: INFO: event-exporter-v0.2.4-5c57bb7478-xtjl2 started at 2019-06-27 09:46:05 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:32:06.114: INFO: &#x9;Container event-exporter ready: true, restart count 0&#xA;Jun 27 11:32:06.114: INFO: &#x9;Container prometheus-to-sd-exporter ready: true, restart count 0&#xA;Jun 27 11:32:06.114: INFO: l7-default-backend-7ff48cffd7-g8pnv started at 2019-06-27 09:46:05 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 11:32:06.114: INFO: &#x9;Container default-http-backend ready: true, restart count 0&#xA;Jun 27 11:32:06.114: INFO: kube-dns-76dbb796c5-4ndph started at 2019-06-27 09:46:05 +0000 UTC (0+4 container statuses recorded)&#xA;Jun 27 11:32:06.114: INFO: &#x9;Container dnsmasq ready: true, restart count 0&#xA;Jun 27 11:32:06.114: INFO: &#x9;Container kubedns ready: true, restart count 0&#xA;Jun 27 11:32:06.114: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 11:32:06.114: INFO: &#x9;Container sidecar ready: true, restart count 0&#xA;Jun 27 11:32:06.114: INFO: fluentd-gcp-scaler-5b5bf8b99f-vkg4s started at 2019-06-27 09:46:05 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 11:32:06.114: INFO: &#x9;Container fluentd-gcp-scaler ready: true, restart count 0&#xA;Jun 27 11:32:06.114: INFO: prometheus-to-sd-28w8p started at 2019-06-27 09:45:45 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 11:32:06.114: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 11:32:06.114: INFO: kube-dns-autoscaler-67c97c87fb-4j4kd started at 2019-06-27 09:46:05 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 11:32:06.114: INFO: &#x9;Container autoscaler ready: true, restart count 0&#xA;Jun 27 11:32:06.146: INFO: &#xA;Latency metrics for node gke-standard-cluster-1-default-pool-04796f61-rr33&#xA;Jun 27 11:32:06.146: INFO: &#xA;Logging node info for node gke-standard-cluster-1-default-pool-04796f61-sx27&#xA;Jun 27 11:32:06.151: INFO: Node Info: &amp;Node{ObjectMeta:k8s_io_apimachinery_pkg_apis_meta_v1.ObjectMeta{Name:gke-standard-cluster-1-default-pool-04796f61-sx27,GenerateName:,Namespace:,SelfLink:/api/v1/nodes/gke-standard-cluster-1-default-pool-04796f61-sx27,UID:560b3037-98c0-11e9-93fd-42010a800028,ResourceVersion:32775,Generation:0,CreationTimestamp:2019-06-27 09:45:45 +0000 UTC,DeletionTimestamp:&lt;nil&gt;,DeletionGracePeriodSeconds:nil,Labels:map[string]string{beta.kubernetes.io/arch: amd64,beta.kubernetes.io/fluentd-ds-ready: true,beta.kubernetes.io/instance-type: n1-standard-4,beta.kubernetes.io/os: linux,cloud.google.com/gke-nodepool: default-pool,cloud.google.com/gke-os-distribution: cos,failure-domain.beta.kubernetes.io/region: us-central1,failure-domain.beta.kubernetes.io/zone: us-central1-a,kubernetes.io/hostname: gke-standard-cluster-1-default-pool-04796f61-sx27,},Annotations:map[string]string{container.googleapis.com/instance_id: 7591417305628225878,node.alpha.kubernetes.io/ttl: 0,volumes.kubernetes.io/controller-managed-attach-detach: true,},OwnerReferences:[],Finalizers:[],ClusterName:,Initializers:nil,},Spec:NodeSpec{PodCIDR:10.8.0.0/24,DoNotUse_ExternalID:,ProviderID:gce://sinuous-tuner-235209/us-central1-a/gke-standard-cluster-1-default-pool-04796f61-sx27,Unschedulable:false,Taints:[],ConfigSource:nil,},Status:NodeStatus{Capacity:ResourceList{cpu: {{4 0} {&lt;nil&gt;} 4 DecimalSI},ephemeral-storage: {{101241290752 0} {&lt;nil&gt;}  BinarySI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{15768948736 0} {&lt;nil&gt;} 15399364Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Allocatable:ResourceList{cpu: {{3920 -3} {&lt;nil&gt;} 3920m DecimalSI},ephemeral-storage: {{47093746742 0} {&lt;nil&gt;} 47093746742 DecimalSI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{13004902400 0} {&lt;nil&gt;} 12700100Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Phase:,Conditions:[{FrequentContainerdRestart False 2019-06-27 11:31:58 +0000 UTC 2019-06-27 09:49:05 +0000 UTC FrequentContainerdRestart containerd is functioning properly} {KernelDeadlock False 2019-06-27 11:31:58 +0000 UTC 2019-06-27 09:44:02 +0000 UTC KernelHasNoDeadlock kernel has no deadlock} {ReadonlyFilesystem False 2019-06-27 11:31:58 +0000 UTC 2019-06-27 09:44:02 +0000 UTC FilesystemIsNotReadOnly Filesystem is not read-only} {CorruptDockerOverlay2 False 2019-06-27 11:31:58 +0000 UTC 2019-06-27 09:49:03 +0000 UTC CorruptDockerOverlay2 docker overlay2 is functioning properly} {FrequentUnregisterNetDevice False 2019-06-27 11:31:58 +0000 UTC 2019-06-27 09:49:03 +0000 UTC UnregisterNetDevice node is functioning properly} {FrequentKubeletRestart False 2019-06-27 11:31:58 +0000 UTC 2019-06-27 09:49:03 +0000 UTC FrequentKubeletRestart kubelet is functioning properly} {FrequentDockerRestart False 2019-06-27 11:31:58 +0000 UTC 2019-06-27 09:49:04 +0000 UTC FrequentDockerRestart docker is functioning properly} {NetworkUnavailable False 2019-06-27 09:45:46 +0000 UTC 2019-06-27 09:45:46 +0000 UTC RouteCreated NodeController create implicit route} {OutOfDisk False 2019-06-27 11:31:57 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientDisk kubelet has sufficient disk space available} {MemoryPressure False 2019-06-27 11:31:57 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientMemory kubelet has sufficient memory available} {DiskPressure False 2019-06-27 11:31:57 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasNoDiskPressure kubelet has no disk pressure} {PIDPressure False 2019-06-27 11:31:57 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientPID kubelet has sufficient PID available} {Ready True 2019-06-27 11:31:57 +0000 UTC 2019-06-27 09:46:06 +0000 UTC KubeletReady kubelet is posting ready status. AppArmor enabled}],Addresses:[{InternalIP 10.128.0.41} {ExternalIP 34.67.223.57} {Hostname gke-standard-cluster-1-default-pool-04796f61-sx27}],DaemonEndpoints:NodeDaemonEndpoints{KubeletEndpoint:DaemonEndpoint{Port:10250,},},NodeInfo:NodeSystemInfo{MachineID:ae4216d32aefe90029e9232dc77c1eda,SystemUUID:AE4216D3-2AEF-E900-29E9-232DC77C1EDA,BootID:75bdcdda-ed72-4df2-bb2c-68fbb20cc027,KernelVersion:4.14.119+,OSImage:Container-Optimized OS from Google,ContainerRuntimeVersion:docker://17.3.2,KubeletVersion:v1.11.10-gke.4,KubeProxyVersion:v1.11.10-gke.4,OperatingSystem:linux,Architecture:amd64,},Images:[{[k8s.gcr.io/mysql-galera@sha256:daa2bc871bad84f4a05536fa3b0956ff8698b41e7f48c6280a6450cec6d25917 k8s.gcr.io/mysql-galera:e2e] 715149006} {[java@sha256:b91008e234402fc87e7889d6af1f36b6ece844c05989236d83d1f658a6f329b0 java:openjdk-8-jre] 311241763} {[gcr.io/heptio-images/sonobuoy-plugin-systemd-logs@sha256:58e077ba773ff5d7b6bba90771fad72217f0d10b913bb66bb0afb387c9552788 gcr.io/heptio-images/sonobuoy-plugin-systemd-logs:latest] 290890605} {[k8s.gcr.io/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e9eb2b k8s.gcr.io/node-problem-detector:v0.4.1] 286572743} {[gcr.io/stackdriver-agents/stackdriver-logging-agent@sha256:f8d5231b67b9c53f60068b535a11811d29d1b3efd53d2b79f2a2591ea338e4f2 gcr.io/stackdriver-agents/stackdriver-logging-agent:0.6-1.6.0-1] 223242132} {[k8s.gcr.io/zookeeper-install-3.5.0-alpha@sha256:60d7f3ce5ec9ff06bc82a1e42d4c66633b93ebd22a8c792a8d34f8c0078f6b68 k8s.gcr.io/zookeeper-install-3.5.0-alpha:e2e] 220145150} {[k8s.gcr.io/galera-install@sha256:7f8245935b92f170e22d7b2cdf802adc75da3a3e05120c50eaa97543e1c20b0a k8s.gcr.io/galera-install:0.1] 181241032} {[cockroachdb/cockroach@sha256:815acd11351fb5087edb0ec73896cd2baf5767dedc20ccd0bbe6d08d1e05b38f cockroachdb/cockroach:v1.0] 163225516} {[cockroachdb/cockroach-k8s-init@sha256:aa384ac9476677208acc0d0d625b0f277a7142603846cefb71f80706682c188c cockroachdb/cockroach-k8s-init:0.1] 153888353} {[k8s.gcr.io/fluentd-elasticsearch@sha256:b8c94527b489fb61d3d81ce5ad7f3ddbb7be71e9620a3a36e2bede2f2e487d73 k8s.gcr.io/fluentd-elasticsearch:v2.0.4] 135716379} {[debian@sha256:6b95a104400bb99ad60b47a48e37d5d1eb71a3f9ec8e86854e0cf64ecc5fd0e8 debian:jessie] 129072320} {[k8s.gcr.io/nginx-slim-amd64@sha256:6654db6d4028756062edac466454ee5c9cf9b20ef79e35a81e3c840031eb1e2b k8s.gcr.io/nginx-slim-amd64:0.20] 103591055} {[k8s.gcr.io/kubernetes-dashboard-amd64@sha256:dc4026c1b595435ef5527ca598e1e9c4343076926d7d62b365c44831395adbd0 k8s.gcr.io/kubernetes-dashboard-amd64:v1.8.3] 102319441} {[gcr.io/google_containers/kube-proxy:v1.11.10-gke.4 k8s.gcr.io/kube-proxy:v1.11.10-gke.4] 102279340} {[k8s.gcr.io/echoserver@sha256:cb5c1bddd1b5665e1867a7fa1b5fa843a47ee433bbb75d4293888b71def53229 k8s.gcr.io/echoserver:1.10] 95361986} {[k8s.gcr.io/nginx-slim-amd64@sha256:8ca6a9ecef3b2ef02f6e0c3d449235d9c53d532f420cc0a29a6a133aa88df256 k8s.gcr.io/nginx-slim-amd64:0.21] 95339966} {[gcr.io/heptio-images/sonobuoy@sha256:d6d530b1ede4b82e9989aa1ba7ae4cd4fac09c6f7cb6a7c4f9270fff241e72c7 gcr.io/heptio-images/sonobuoy:v0.14.3] 89896078} {[k8s.gcr.io/fluentd-gcp-scaler@sha256:a5ace7506d393c4ed65eb2cbb6312c64ab357fcea16dff76b9055bc6e498e5ff k8s.gcr.io/fluentd-gcp-scaler:0.5.1] 86637208} {[k8s.gcr.io/heapster-amd64@sha256:9fae0af136ce0cf4f88393b3670f7139ffc464692060c374d2ae748e13144521 k8s.gcr.io/heapster-amd64:v1.6.0-beta.1] 76016169} {[k8s.gcr.io/ingress-gce-glbc-amd64@sha256:31d36bbd9c44caffa135fc78cf0737266fcf25e3cf0cd1c2fcbfbc4f7309cc52 k8s.gcr.io/ingress-gce-glbc-amd64:v1.1.1] 67801919} {[k8s.gcr.io/kube-addon-manager@sha256:d53486c3a0b49ebee019932878dc44232735d5622a51dbbdcec7124199020d09 k8s.gcr.io/kube-addon-manager:v8.7] 63322109} {[k8s.gcr.io/cpvpa-amd64@sha256:cfe7b0a11c9c8e18c87b1eb34fef9a7cbb8480a8da11fc2657f78dbf4739f869 k8s.gcr.io/cpvpa-amd64:v0.6.0] 51785854} {[k8s.gcr.io/k8s-dns-kube-dns-amd64@sha256:618a82fa66cf0c75e4753369a6999032372be7308866fc9afb381789b1e5ad52 k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.13] 51157394} {[k8s.gcr.io/cluster-proportional-autoscaler-amd64@sha256:003f98d9f411ddfa6ff6d539196355e03ddd69fa4ed38c7ffb8fec6f729afe2d k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.1.2-r2] 49648481} {[k8s.gcr.io/ip-masq-agent-amd64@sha256:1ffda57d87901bc01324c82ceb2145fe6a0448d3f0dd9cb65aa76a867cd62103 k8s.gcr.io/ip-masq-agent-amd64:v2.1.1] 49612505}],VolumesInUse:[],VolumesAttached:[],Config:nil,},}&#xA;Jun 27 11:32:06.152: INFO: &#xA;Logging kubelet events for node gke-standard-cluster-1-default-pool-04796f61-sx27&#xA;Jun 27 11:32:06.157: INFO: &#xA;Logging pods the kubelet thinks is on node gke-standard-cluster-1-default-pool-04796f61-sx27&#xA;Jun 27 11:32:06.169: INFO: prometheus-to-sd-2qsz9 started at 2019-06-27 09:45:46 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 11:32:06.169: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 11:32:06.169: INFO: fluentd-gcp-v3.2.0-jb9xn started at 2019-06-27 09:46:25 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:32:06.169: INFO: &#x9;Container fluentd-gcp ready: true, restart count 0&#xA;Jun 27 11:32:06.169: INFO: &#x9;Container prometheus-to-sd-exporter ready: true, restart count 0&#xA;Jun 27 11:32:06.169: INFO: kube-dns-76dbb796c5-6qg5f started at 2019-06-27 09:46:07 +0000 UTC (0+4 container statuses recorded)&#xA;Jun 27 11:32:06.169: INFO: &#x9;Container dnsmasq ready: true, restart count 0&#xA;Jun 27 11:32:06.169: INFO: &#x9;Container kubedns ready: true, restart count 0&#xA;Jun 27 11:32:06.169: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 11:32:06.169: INFO: &#x9;Container sidecar ready: true, restart count 0&#xA;Jun 27 11:32:06.169: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-sx27 started at &lt;nil&gt; (0+0 container statuses recorded)&#xA;Jun 27 11:32:06.169: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-28cmn started at 2019-06-27 10:01:32 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:32:06.169: INFO: &#x9;Container sonobuoy-worker ready: true, restart count 1&#xA;Jun 27 11:32:06.169: INFO: &#x9;Container systemd-logs ready: true, restart count 1&#xA;Jun 27 11:32:06.203: INFO: &#xA;Latency metrics for node gke-standard-cluster-1-default-pool-04796f61-sx27&#xA;STEP: Dumping a list of prepulled images on each node to file /tmp/results/image-puller.txt&#xA;Jun 27 11:32:06.216: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready&#xA;STEP: Destroying namespace &#34;e2e-tests-etcd-upgrade-5kcb8&#34; for this suite.&#xA;Jun 27 11:32:12.243: INFO: Waiting up to 30s for server preferred namespaced resources to be successfully discovered&#xA;Jun 27 11:32:12.405: INFO: namespace: e2e-tests-etcd-upgrade-5kcb8, resource: bindings, ignored listing per whitelist&#xA;Jun 27 11:32:12.471: INFO: namespace e2e-tests-etcd-upgrade-5kcb8 deletion completed in 6.247904936s&#xA;[AfterEach] [sig-apps] stateful Upgrade [Feature:StatefulUpgrade]&#xA;  /workspace/anago-v1.11.3-beta.0.71+a4529464e4629c/src/k8s.io/kubernetes/_output/dockerized/go/src/k8s.io/kubernetes/test/e2e/framework/framework.go:142&#xA;STEP: Collecting events from namespace &#34;e2e-tests-cassandra-upgrade-g4xjl&#34;.&#xA;STEP: Found 0 events.&#xA;Jun 27 11:32:12.494: INFO: POD                                                           NODE                                               PHASE    GRACE  CONDITIONS&#xA;Jun 27 11:32:12.494: INFO: sonobuoy                                                      gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:18 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:18 +0000 UTC  }]&#xA;Jun 27 11:32:12.494: INFO: sonobuoy-e2e-job-3f201e2f061345e7                             gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:02:00 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  }]&#xA;Jun 27 11:32:12.494: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-28cmn       gke-standard-cluster-1-default-pool-04796f61-sx27  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 11:01:50 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  }]&#xA;Jun 27 11:32:12.494: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-44pmg       gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 11:01:47 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  }]&#xA;Jun 27 11:32:12.494: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-rmqrw       gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 11:01:51 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  }]&#xA;Jun 27 11:32:12.494: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-xk7gb       gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 11:02:02 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 10:01:32 +0000 UTC  }]&#xA;Jun 27 11:32:12.494: INFO: event-exporter-v0.2.4-5c57bb7478-xtjl2                        gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:12 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 11:32:12.494: INFO: fluentd-gcp-scaler-5b5bf8b99f-vkg4s                           gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:12 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 11:32:12.494: INFO: fluentd-gcp-v3.2.0-2hkh9                                      gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:35 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  }]&#xA;Jun 27 11:32:12.494: INFO: fluentd-gcp-v3.2.0-j677d                                      gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:35 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  }]&#xA;Jun 27 11:32:12.494: INFO: fluentd-gcp-v3.2.0-jb9xn                                      gke-standard-cluster-1-default-pool-04796f61-sx27  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:35 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  }]&#xA;Jun 27 11:32:12.494: INFO: fluentd-gcp-v3.2.0-k8m8z                                      gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:36 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:25 +0000 UTC  }]&#xA;Jun 27 11:32:12.494: INFO: heapster-v1.6.0-beta.1-5dcd447597-kkgnc                       gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:24 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:26 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:24 +0000 UTC  }]&#xA;Jun 27 11:32:12.494: INFO: kube-dns-76dbb796c5-4ndph                                     gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:22 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 11:32:12.494: INFO: kube-dns-76dbb796c5-6qg5f                                     gke-standard-cluster-1-default-pool-04796f61-sx27  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:07 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:20 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:07 +0000 UTC  }]&#xA;Jun 27 11:32:12.494: INFO: kube-dns-autoscaler-67c97c87fb-4j4kd                          gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:12 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 11:32:12.494: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-2br3  gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:06 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 11:32:12.494: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-dmzx  gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:06 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 11:32:12.494: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-rr33  gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:04 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:12 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:04 +0000 UTC  }]&#xA;Jun 27 11:32:12.495: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-sx27  gke-standard-cluster-1-default-pool-04796f61-sx27  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:06 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 11:32:12.495: INFO: l7-default-backend-7ff48cffd7-g8pnv                           gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:20 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:05 +0000 UTC  }]&#xA;Jun 27 11:32:12.495: INFO: metrics-server-v0.2.1-fd596d746-mnb77                         gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:11 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:14 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:46:11 +0000 UTC  }]&#xA;Jun 27 11:32:12.495: INFO: prometheus-to-sd-28w8p                                        gke-standard-cluster-1-default-pool-04796f61-rr33  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:45 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:56 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:45 +0000 UTC  }]&#xA;Jun 27 11:32:12.495: INFO: prometheus-to-sd-2qsz9                                        gke-standard-cluster-1-default-pool-04796f61-sx27  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:46 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:55 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:46 +0000 UTC  }]&#xA;Jun 27 11:32:12.495: INFO: prometheus-to-sd-529s6                                        gke-standard-cluster-1-default-pool-04796f61-dmzx  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:46 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:51 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:46 +0000 UTC  }]&#xA;Jun 27 11:32:12.495: INFO: prometheus-to-sd-q6mwq                                        gke-standard-cluster-1-default-pool-04796f61-2br3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:45 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:53 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2019-06-27 09:45:45 +0000 UTC  }]&#xA;Jun 27 11:32:12.495: INFO: &#xA;Jun 27 11:32:12.500: INFO: &#xA;Logging node info for node gke-standard-cluster-1-default-pool-04796f61-2br3&#xA;Jun 27 11:32:12.505: INFO: Node Info: &amp;Node{ObjectMeta:k8s_io_apimachinery_pkg_apis_meta_v1.ObjectMeta{Name:gke-standard-cluster-1-default-pool-04796f61-2br3,GenerateName:,Namespace:,SelfLink:/api/v1/nodes/gke-standard-cluster-1-default-pool-04796f61-2br3,UID:55ee085e-98c0-11e9-93fd-42010a800028,ResourceVersion:32816,Generation:0,CreationTimestamp:2019-06-27 09:45:45 +0000 UTC,DeletionTimestamp:&lt;nil&gt;,DeletionGracePeriodSeconds:nil,Labels:map[string]string{beta.kubernetes.io/arch: amd64,beta.kubernetes.io/fluentd-ds-ready: true,beta.kubernetes.io/instance-type: n1-standard-4,beta.kubernetes.io/os: linux,cloud.google.com/gke-nodepool: default-pool,cloud.google.com/gke-os-distribution: cos,failure-domain.beta.kubernetes.io/region: us-central1,failure-domain.beta.kubernetes.io/zone: us-central1-a,kubernetes.io/hostname: gke-standard-cluster-1-default-pool-04796f61-2br3,},Annotations:map[string]string{container.googleapis.com/instance_id: 5263861497271497046,node.alpha.kubernetes.io/ttl: 0,volumes.kubernetes.io/controller-managed-attach-detach: true,},OwnerReferences:[],Finalizers:[],ClusterName:,Initializers:nil,},Spec:NodeSpec{PodCIDR:10.8.2.0/24,DoNotUse_ExternalID:,ProviderID:gce://sinuous-tuner-235209/us-central1-a/gke-standard-cluster-1-default-pool-04796f61-2br3,Unschedulable:false,Taints:[],ConfigSource:nil,},Status:NodeStatus{Capacity:ResourceList{cpu: {{4 0} {&lt;nil&gt;} 4 DecimalSI},ephemeral-storage: {{101241290752 0} {&lt;nil&gt;}  BinarySI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{15768948736 0} {&lt;nil&gt;} 15399364Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Allocatable:ResourceList{cpu: {{3920 -3} {&lt;nil&gt;} 3920m DecimalSI},ephemeral-storage: {{47093746742 0} {&lt;nil&gt;} 47093746742 DecimalSI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{13004902400 0} {&lt;nil&gt;} 12700100Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Phase:,Conditions:[{FrequentDockerRestart False 2019-06-27 11:31:59 +0000 UTC 2019-06-27 09:49:04 +0000 UTC FrequentDockerRestart docker is functioning properly} {FrequentContainerdRestart False 2019-06-27 11:31:59 +0000 UTC 2019-06-27 09:49:05 +0000 UTC FrequentContainerdRestart containerd is functioning properly} {KernelDeadlock False 2019-06-27 11:31:59 +0000 UTC 2019-06-27 09:44:02 +0000 UTC KernelHasNoDeadlock kernel has no deadlock} {ReadonlyFilesystem False 2019-06-27 11:31:59 +0000 UTC 2019-06-27 09:44:02 +0000 UTC FilesystemIsNotReadOnly Filesystem is not read-only} {CorruptDockerOverlay2 False 2019-06-27 11:31:59 +0000 UTC 2019-06-27 09:49:03 +0000 UTC CorruptDockerOverlay2 docker overlay2 is functioning properly} {FrequentUnregisterNetDevice False 2019-06-27 11:31:59 +0000 UTC 2019-06-27 09:49:03 +0000 UTC UnregisterNetDevice node is functioning properly} {FrequentKubeletRestart False 2019-06-27 11:31:59 +0000 UTC 2019-06-27 09:49:03 +0000 UTC FrequentKubeletRestart kubelet is functioning properly} {NetworkUnavailable False 2019-06-27 09:45:46 +0000 UTC 2019-06-27 09:45:46 +0000 UTC RouteCreated NodeController create implicit route} {OutOfDisk False 2019-06-27 11:32:06 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientDisk kubelet has sufficient disk space available} {MemoryPressure False 2019-06-27 11:32:06 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientMemory kubelet has sufficient memory available} {DiskPressure False 2019-06-27 11:32:06 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasNoDiskPressure kubelet has no disk pressure} {PIDPressure False 2019-06-27 11:32:06 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientPID kubelet has sufficient PID available} {Ready True 2019-06-27 11:32:06 +0000 UTC 2019-06-27 09:46:05 +0000 UTC KubeletReady kubelet is posting ready status. AppArmor enabled}],Addresses:[{InternalIP 10.128.0.42} {ExternalIP 35.232.42.152} {Hostname gke-standard-cluster-1-default-pool-04796f61-2br3}],DaemonEndpoints:NodeDaemonEndpoints{KubeletEndpoint:DaemonEndpoint{Port:10250,},},NodeInfo:NodeSystemInfo{MachineID:4ed4f0f644ff78a293f5a14239e1dc93,SystemUUID:4ED4F0F6-44FF-78A2-93F5-A14239E1DC93,BootID:df50bfdc-3ecb-4ada-a245-3c7fd247294f,KernelVersion:4.14.119+,OSImage:Container-Optimized OS from Google,ContainerRuntimeVersion:docker://17.3.2,KubeletVersion:v1.11.10-gke.4,KubeProxyVersion:v1.11.10-gke.4,OperatingSystem:linux,Architecture:amd64,},Images:[{[k8s.gcr.io/mysql-galera@sha256:daa2bc871bad84f4a05536fa3b0956ff8698b41e7f48c6280a6450cec6d25917 k8s.gcr.io/mysql-galera:e2e] 715149006} {[java@sha256:b91008e234402fc87e7889d6af1f36b6ece844c05989236d83d1f658a6f329b0 java:openjdk-8-jre] 311241763} {[gcr.io/heptio-images/sonobuoy-plugin-systemd-logs@sha256:58e077ba773ff5d7b6bba90771fad72217f0d10b913bb66bb0afb387c9552788 gcr.io/heptio-images/sonobuoy-plugin-systemd-logs:latest] 290890605} {[k8s.gcr.io/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e9eb2b k8s.gcr.io/node-problem-detector:v0.4.1] 286572743} {[gcr.io/stackdriver-agents/stackdriver-logging-agent@sha256:f8d5231b67b9c53f60068b535a11811d29d1b3efd53d2b79f2a2591ea338e4f2 gcr.io/stackdriver-agents/stackdriver-logging-agent:0.6-1.6.0-1] 223242132} {[k8s.gcr.io/zookeeper-install-3.5.0-alpha@sha256:60d7f3ce5ec9ff06bc82a1e42d4c66633b93ebd22a8c792a8d34f8c0078f6b68 k8s.gcr.io/zookeeper-install-3.5.0-alpha:e2e] 220145150} {[k8s.gcr.io/galera-install@sha256:7f8245935b92f170e22d7b2cdf802adc75da3a3e05120c50eaa97543e1c20b0a k8s.gcr.io/galera-install:0.1] 181241032} {[cockroachdb/cockroach@sha256:815acd11351fb5087edb0ec73896cd2baf5767dedc20ccd0bbe6d08d1e05b38f cockroachdb/cockroach:v1.0] 163225516} {[cockroachdb/cockroach-k8s-init@sha256:aa384ac9476677208acc0d0d625b0f277a7142603846cefb71f80706682c188c cockroachdb/cockroach-k8s-init:0.1] 153888353} {[k8s.gcr.io/fluentd-elasticsearch@sha256:b8c94527b489fb61d3d81ce5ad7f3ddbb7be71e9620a3a36e2bede2f2e487d73 k8s.gcr.io/fluentd-elasticsearch:v2.0.4] 135716379} {[debian@sha256:6b95a104400bb99ad60b47a48e37d5d1eb71a3f9ec8e86854e0cf64ecc5fd0e8 debian:jessie] 129072320} {[nginx@sha256:079aa93463d2566b7a81cbdf856afc6d4d2a6f9100ca3bcbecf24ade92c9a7fe nginx:latest] 109258867} {[k8s.gcr.io/nginx-slim-amd64@sha256:6654db6d4028756062edac466454ee5c9cf9b20ef79e35a81e3c840031eb1e2b k8s.gcr.io/nginx-slim-amd64:0.20] 103591055} {[k8s.gcr.io/kubernetes-dashboard-amd64@sha256:dc4026c1b595435ef5527ca598e1e9c4343076926d7d62b365c44831395adbd0 k8s.gcr.io/kubernetes-dashboard-amd64:v1.8.3] 102319441} {[gcr.io/google_containers/kube-proxy:v1.11.10-gke.4 k8s.gcr.io/kube-proxy:v1.11.10-gke.4] 102279340} {[k8s.gcr.io/echoserver@sha256:cb5c1bddd1b5665e1867a7fa1b5fa843a47ee433bbb75d4293888b71def53229 k8s.gcr.io/echoserver:1.10] 95361986} {[k8s.gcr.io/nginx-slim-amd64@sha256:8ca6a9ecef3b2ef02f6e0c3d449235d9c53d532f420cc0a29a6a133aa88df256 k8s.gcr.io/nginx-slim-amd64:0.21] 95339966} {[gcr.io/heptio-images/sonobuoy@sha256:d6d530b1ede4b82e9989aa1ba7ae4cd4fac09c6f7cb6a7c4f9270fff241e72c7 gcr.io/heptio-images/sonobuoy:v0.14.3] 89896078} {[k8s.gcr.io/fluentd-gcp-scaler@sha256:a5ace7506d393c4ed65eb2cbb6312c64ab357fcea16dff76b9055bc6e498e5ff k8s.gcr.io/fluentd-gcp-scaler:0.5.1] 86637208} {[k8s.gcr.io/heapster-amd64@sha256:9fae0af136ce0cf4f88393b3670f7139ffc464692060c374d2ae748e13144521 k8s.gcr.io/heapster-amd64:v1.6.0-beta.1] 76016169} {[k8s.gcr.io/ingress-gce-glbc-amd64@sha256:31d36bbd9c44caffa135fc78cf0737266fcf25e3cf0cd1c2fcbfbc4f7309cc52 k8s.gcr.io/ingress-gce-glbc-amd64:v1.1.1] 67801919} {[k8s.gcr.io/kube-addon-manager@sha256:d53486c3a0b49ebee019932878dc44232735d5622a51dbbdcec7124199020d09 k8s.gcr.io/kube-addon-manager:v8.7] 63322109} {[k8s.gcr.io/cpvpa-amd64@sha256:cfe7b0a11c9c8e18c87b1eb34fef9a7cbb8480a8da11fc2657f78dbf4739f869 k8s.gcr.io/cpvpa-amd64:v0.6.0] 51785854} {[k8s.gcr.io/cluster-proportional-autoscaler-amd64@sha256:003f98d9f411ddfa6ff6d539196355e03ddd69fa4ed38c7ffb8fec6f729afe2d k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.1.2-r2] 49648481} {[k8s.gcr.io/ip-masq-agent-amd64@sha256:1ffda57d87901bc01324c82ceb2145fe6a0448d3f0dd9cb65aa76a867cd62103 k8s.gcr.io/ip-masq-agent-amd64:v2.1.1] 49612505}],VolumesInUse:[kubernetes.io/gce-pd/gke-standard-cluster-1-pvc-804259ed-98c2-11e9-93fd-42010a800028],VolumesAttached:[{kubernetes.io/gce-pd/gke-standard-cluster-1-pvc-804259ed-98c2-11e9-93fd-42010a800028 /dev/disk/by-id/google-gke-standard-cluster-1-pvc-804259ed-98c2-11e9-93fd-42010a800028}],Config:nil,},}&#xA;Jun 27 11:32:12.505: INFO: &#xA;Logging kubelet events for node gke-standard-cluster-1-default-pool-04796f61-2br3&#xA;Jun 27 11:32:12.510: INFO: &#xA;Logging pods the kubelet thinks is on node gke-standard-cluster-1-default-pool-04796f61-2br3&#xA;Jun 27 11:32:12.522: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-44pmg started at 2019-06-27 10:01:32 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:32:12.522: INFO: &#x9;Container sonobuoy-worker ready: true, restart count 1&#xA;Jun 27 11:32:12.523: INFO: &#x9;Container systemd-logs ready: true, restart count 1&#xA;Jun 27 11:32:12.523: INFO: heapster-v1.6.0-beta.1-5dcd447597-kkgnc started at 2019-06-27 09:46:24 +0000 UTC (0+3 container statuses recorded)&#xA;Jun 27 11:32:12.523: INFO: &#x9;Container heapster ready: true, restart count 0&#xA;Jun 27 11:32:12.523: INFO: &#x9;Container heapster-nanny ready: true, restart count 0&#xA;Jun 27 11:32:12.523: INFO: &#x9;Container prom-to-sd ready: true, restart count 0&#xA;Jun 27 11:32:12.523: INFO: prometheus-to-sd-q6mwq started at 2019-06-27 09:45:45 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 11:32:12.523: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 11:32:12.523: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-2br3 started at &lt;nil&gt; (0+0 container statuses recorded)&#xA;Jun 27 11:32:12.523: INFO: fluentd-gcp-v3.2.0-2hkh9 started at 2019-06-27 09:46:25 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:32:12.523: INFO: &#x9;Container fluentd-gcp ready: true, restart count 0&#xA;Jun 27 11:32:12.523: INFO: &#x9;Container prometheus-to-sd-exporter ready: true, restart count 0&#xA;Jun 27 11:32:12.523: INFO: sonobuoy started at 2019-06-27 10:01:18 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 11:32:12.523: INFO: &#x9;Container kube-sonobuoy ready: true, restart count 0&#xA;Jun 27 11:32:12.548: INFO: &#xA;Latency metrics for node gke-standard-cluster-1-default-pool-04796f61-2br3&#xA;Jun 27 11:32:12.548: INFO: {Operation:stop_container Method:docker_operations_latency_microseconds Quantile:0.99 Latency:30.06882s}&#xA;Jun 27 11:32:12.548: INFO: &#xA;Logging node info for node gke-standard-cluster-1-default-pool-04796f61-dmzx&#xA;Jun 27 11:32:12.553: INFO: Node Info: &amp;Node{ObjectMeta:k8s_io_apimachinery_pkg_apis_meta_v1.ObjectMeta{Name:gke-standard-cluster-1-default-pool-04796f61-dmzx,GenerateName:,Namespace:,SelfLink:/api/v1/nodes/gke-standard-cluster-1-default-pool-04796f61-dmzx,UID:563a4f0e-98c0-11e9-93fd-42010a800028,ResourceVersion:32821,Generation:0,CreationTimestamp:2019-06-27 09:45:45 +0000 UTC,DeletionTimestamp:&lt;nil&gt;,DeletionGracePeriodSeconds:nil,Labels:map[string]string{beta.kubernetes.io/arch: amd64,beta.kubernetes.io/fluentd-ds-ready: true,beta.kubernetes.io/instance-type: n1-standard-4,beta.kubernetes.io/os: linux,cloud.google.com/gke-nodepool: default-pool,cloud.google.com/gke-os-distribution: cos,failure-domain.beta.kubernetes.io/region: us-central1,failure-domain.beta.kubernetes.io/zone: us-central1-a,kubernetes.io/hostname: gke-standard-cluster-1-default-pool-04796f61-dmzx,},Annotations:map[string]string{container.googleapis.com/instance_id: 8240935979917586774,node.alpha.kubernetes.io/ttl: 0,volumes.kubernetes.io/controller-managed-attach-detach: true,},OwnerReferences:[],Finalizers:[],ClusterName:,Initializers:nil,},Spec:NodeSpec{PodCIDR:10.8.4.0/24,DoNotUse_ExternalID:,ProviderID:gce://sinuous-tuner-235209/us-central1-a/gke-standard-cluster-1-default-pool-04796f61-dmzx,Unschedulable:false,Taints:[],ConfigSource:nil,},Status:NodeStatus{Capacity:ResourceList{cpu: {{4 0} {&lt;nil&gt;} 4 DecimalSI},ephemeral-storage: {{101241290752 0} {&lt;nil&gt;}  BinarySI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{15768940544 0} {&lt;nil&gt;} 15399356Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Allocatable:ResourceList{cpu: {{3920 -3} {&lt;nil&gt;} 3920m DecimalSI},ephemeral-storage: {{47093746742 0} {&lt;nil&gt;} 47093746742 DecimalSI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{13004894208 0} {&lt;nil&gt;} 12700092Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Phase:,Conditions:[{ReadonlyFilesystem False 2019-06-27 11:31:54 +0000 UTC 2019-06-27 09:44:03 +0000 UTC FilesystemIsNotReadOnly Filesystem is not read-only} {FrequentUnregisterNetDevice False 2019-06-27 11:31:54 +0000 UTC 2019-06-27 09:49:04 +0000 UTC UnregisterNetDevice node is functioning properly} {FrequentKubeletRestart False 2019-06-27 11:31:54 +0000 UTC 2019-06-27 09:49:04 +0000 UTC FrequentKubeletRestart kubelet is functioning properly} {FrequentDockerRestart False 2019-06-27 11:31:54 +0000 UTC 2019-06-27 09:49:05 +0000 UTC FrequentDockerRestart docker is functioning properly} {FrequentContainerdRestart False 2019-06-27 11:31:54 +0000 UTC 2019-06-27 09:49:06 +0000 UTC FrequentContainerdRestart containerd is functioning properly} {CorruptDockerOverlay2 False 2019-06-27 11:31:54 +0000 UTC 2019-06-27 09:49:04 +0000 UTC CorruptDockerOverlay2 docker overlay2 is functioning properly} {KernelDeadlock False 2019-06-27 11:31:54 +0000 UTC 2019-06-27 09:44:03 +0000 UTC KernelHasNoDeadlock kernel has no deadlock} {NetworkUnavailable False 2019-06-27 09:45:46 +0000 UTC 2019-06-27 09:45:46 +0000 UTC RouteCreated NodeController create implicit route} {OutOfDisk False 2019-06-27 11:32:07 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientDisk kubelet has sufficient disk space available} {MemoryPressure False 2019-06-27 11:32:07 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientMemory kubelet has sufficient memory available} {DiskPressure False 2019-06-27 11:32:07 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasNoDiskPressure kubelet has no disk pressure} {PIDPressure False 2019-06-27 11:32:07 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientPID kubelet has sufficient PID available} {Ready True 2019-06-27 11:32:07 +0000 UTC 2019-06-27 09:46:06 +0000 UTC KubeletReady kubelet is posting ready status. AppArmor enabled}],Addresses:[{InternalIP 10.128.0.45} {ExternalIP 34.67.69.128} {Hostname gke-standard-cluster-1-default-pool-04796f61-dmzx}],DaemonEndpoints:NodeDaemonEndpoints{KubeletEndpoint:DaemonEndpoint{Port:10250,},},NodeInfo:NodeSystemInfo{MachineID:1e2b8bee3c68760edea50ec32bebc9c7,SystemUUID:1E2B8BEE-3C68-760E-DEA5-0EC32BEBC9C7,BootID:cca2dcb1-4058-446f-b35a-be81be4bdd91,KernelVersion:4.14.119+,OSImage:Container-Optimized OS from Google,ContainerRuntimeVersion:docker://17.3.2,KubeletVersion:v1.11.10-gke.4,KubeProxyVersion:v1.11.10-gke.4,OperatingSystem:linux,Architecture:amd64,},Images:[{[k8s.gcr.io/mysql-galera@sha256:daa2bc871bad84f4a05536fa3b0956ff8698b41e7f48c6280a6450cec6d25917 k8s.gcr.io/mysql-galera:e2e] 715149006} {[gcr.io/heptio-images/kube-conformance@sha256:e208e87718fee7fe922ad69f740ca23e5843d05faa014ef23a37cdd017944946 gcr.io/heptio-images/kube-conformance:v1.11] 532217543} {[java@sha256:b91008e234402fc87e7889d6af1f36b6ece844c05989236d83d1f658a6f329b0 java:openjdk-8-jre] 311241763} {[k8s.gcr.io/redis-install-3.2.0@sha256:84305c74214f769ac3bdb3b6ceae35b8f13dd5485a6255a31776f3f3bcb2e4f3 k8s.gcr.io/redis-install-3.2.0:e2e] 294462045} {[gcr.io/heptio-images/sonobuoy-plugin-systemd-logs@sha256:58e077ba773ff5d7b6bba90771fad72217f0d10b913bb66bb0afb387c9552788 gcr.io/heptio-images/sonobuoy-plugin-systemd-logs:latest] 290890605} {[k8s.gcr.io/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e9eb2b k8s.gcr.io/node-problem-detector:v0.4.1] 286572743} {[gcr.io/stackdriver-agents/stackdriver-logging-agent@sha256:f8d5231b67b9c53f60068b535a11811d29d1b3efd53d2b79f2a2591ea338e4f2 gcr.io/stackdriver-agents/stackdriver-logging-agent:0.6-1.6.0-1] 223242132} {[k8s.gcr.io/zookeeper-install-3.5.0-alpha@sha256:60d7f3ce5ec9ff06bc82a1e42d4c66633b93ebd22a8c792a8d34f8c0078f6b68 k8s.gcr.io/zookeeper-install-3.5.0-alpha:e2e] 220145150} {[k8s.gcr.io/galera-install@sha256:7f8245935b92f170e22d7b2cdf802adc75da3a3e05120c50eaa97543e1c20b0a k8s.gcr.io/galera-install:0.1] 181241032} {[cockroachdb/cockroach@sha256:815acd11351fb5087edb0ec73896cd2baf5767dedc20ccd0bbe6d08d1e05b38f cockroachdb/cockroach:v1.0] 163225516} {[cockroachdb/cockroach-k8s-init@sha256:aa384ac9476677208acc0d0d625b0f277a7142603846cefb71f80706682c188c cockroachdb/cockroach-k8s-init:0.1] 153888353} {[k8s.gcr.io/fluentd-elasticsearch@sha256:b8c94527b489fb61d3d81ce5ad7f3ddbb7be71e9620a3a36e2bede2f2e487d73 k8s.gcr.io/fluentd-elasticsearch:v2.0.4] 135716379} {[debian@sha256:6b95a104400bb99ad60b47a48e37d5d1eb71a3f9ec8e86854e0cf64ecc5fd0e8 debian:jessie] 129072320} {[nginx@sha256:079aa93463d2566b7a81cbdf856afc6d4d2a6f9100ca3bcbecf24ade92c9a7fe nginx:latest] 109258867} {[k8s.gcr.io/nginx-slim-amd64@sha256:6654db6d4028756062edac466454ee5c9cf9b20ef79e35a81e3c840031eb1e2b k8s.gcr.io/nginx-slim-amd64:0.20] 103591055} {[k8s.gcr.io/kubernetes-dashboard-amd64@sha256:dc4026c1b595435ef5527ca598e1e9c4343076926d7d62b365c44831395adbd0 k8s.gcr.io/kubernetes-dashboard-amd64:v1.8.3] 102319441} {[gcr.io/google_containers/kube-proxy:v1.11.10-gke.4 k8s.gcr.io/kube-proxy:v1.11.10-gke.4] 102279340} {[k8s.gcr.io/echoserver@sha256:cb5c1bddd1b5665e1867a7fa1b5fa843a47ee433bbb75d4293888b71def53229 k8s.gcr.io/echoserver:1.10] 95361986} {[k8s.gcr.io/nginx-slim-amd64@sha256:8ca6a9ecef3b2ef02f6e0c3d449235d9c53d532f420cc0a29a6a133aa88df256 k8s.gcr.io/nginx-slim-amd64:0.21] 95339966} {[gcr.io/heptio-images/sonobuoy@sha256:d6d530b1ede4b82e9989aa1ba7ae4cd4fac09c6f7cb6a7c4f9270fff241e72c7 gcr.io/heptio-images/sonobuoy:v0.14.3] 89896078} {[k8s.gcr.io/fluentd-gcp-scaler@sha256:a5ace7506d393c4ed65eb2cbb6312c64ab357fcea16dff76b9055bc6e498e5ff k8s.gcr.io/fluentd-gcp-scaler:0.5.1] 86637208} {[k8s.gcr.io/heapster-amd64@sha256:9fae0af136ce0cf4f88393b3670f7139ffc464692060c374d2ae748e13144521 k8s.gcr.io/heapster-amd64:v1.6.0-beta.1] 76016169} {[k8s.gcr.io/ingress-gce-glbc-amd64@sha256:31d36bbd9c44caffa135fc78cf0737266fcf25e3cf0cd1c2fcbfbc4f7309cc52 k8s.gcr.io/ingress-gce-glbc-amd64:v1.1.1] 67801919} {[k8s.gcr.io/kube-addon-manager@sha256:d53486c3a0b49ebee019932878dc44232735d5622a51dbbdcec7124199020d09 k8s.gcr.io/kube-addon-manager:v8.7] 63322109} {[k8s.gcr.io/cpvpa-amd64@sha256:cfe7b0a11c9c8e18c87b1eb34fef9a7cbb8480a8da11fc2657f78dbf4739f869 k8s.gcr.io/cpvpa-amd64:v0.6.0] 51785854}],VolumesInUse:[],VolumesAttached:[],Config:nil,},}&#xA;Jun 27 11:32:12.553: INFO: &#xA;Logging kubelet events for node gke-standard-cluster-1-default-pool-04796f61-dmzx&#xA;Jun 27 11:32:12.557: INFO: &#xA;Logging pods the kubelet thinks is on node gke-standard-cluster-1-default-pool-04796f61-dmzx&#xA;Jun 27 11:32:12.570: INFO: metrics-server-v0.2.1-fd596d746-mnb77 started at 2019-06-27 09:46:11 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:32:12.570: INFO: &#x9;Container metrics-server ready: true, restart count 0&#xA;Jun 27 11:32:12.570: INFO: &#x9;Container metrics-server-nanny ready: true, restart count 0&#xA;Jun 27 11:32:12.570: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-dmzx started at &lt;nil&gt; (0+0 container statuses recorded)&#xA;Jun 27 11:32:12.570: INFO: prometheus-to-sd-529s6 started at 2019-06-27 09:45:46 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 11:32:12.570: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 11:32:12.570: INFO: fluentd-gcp-v3.2.0-j677d started at 2019-06-27 09:46:25 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:32:12.570: INFO: &#x9;Container fluentd-gcp ready: true, restart count 0&#xA;Jun 27 11:32:12.570: INFO: &#x9;Container prometheus-to-sd-exporter ready: true, restart count 0&#xA;Jun 27 11:32:12.570: INFO: sonobuoy-e2e-job-3f201e2f061345e7 started at 2019-06-27 10:01:32 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:32:12.570: INFO: &#x9;Container e2e ready: true, restart count 0&#xA;Jun 27 11:32:12.570: INFO: &#x9;Container sonobuoy-worker ready: true, restart count 0&#xA;Jun 27 11:32:12.570: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-xk7gb started at 2019-06-27 10:01:32 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:32:12.570: INFO: &#x9;Container sonobuoy-worker ready: true, restart count 1&#xA;Jun 27 11:32:12.570: INFO: &#x9;Container systemd-logs ready: true, restart count 1&#xA;Jun 27 11:32:12.618: INFO: &#xA;Latency metrics for node gke-standard-cluster-1-default-pool-04796f61-dmzx&#xA;Jun 27 11:32:12.618: INFO: {Operation:stop_container Method:docker_operations_latency_microseconds Quantile:0.99 Latency:30.071565s}&#xA;Jun 27 11:32:12.618: INFO: &#xA;Logging node info for node gke-standard-cluster-1-default-pool-04796f61-rr33&#xA;Jun 27 11:32:12.622: INFO: Node Info: &amp;Node{ObjectMeta:k8s_io_apimachinery_pkg_apis_meta_v1.ObjectMeta{Name:gke-standard-cluster-1-default-pool-04796f61-rr33,GenerateName:,Namespace:,SelfLink:/api/v1/nodes/gke-standard-cluster-1-default-pool-04796f61-rr33,UID:55b363e1-98c0-11e9-93fd-42010a800028,ResourceVersion:32812,Generation:0,CreationTimestamp:2019-06-27 09:45:45 +0000 UTC,DeletionTimestamp:&lt;nil&gt;,DeletionGracePeriodSeconds:nil,Labels:map[string]string{beta.kubernetes.io/arch: amd64,beta.kubernetes.io/fluentd-ds-ready: true,beta.kubernetes.io/instance-type: n1-standard-4,beta.kubernetes.io/os: linux,cloud.google.com/gke-nodepool: default-pool,cloud.google.com/gke-os-distribution: cos,failure-domain.beta.kubernetes.io/region: us-central1,failure-domain.beta.kubernetes.io/zone: us-central1-a,kubernetes.io/hostname: gke-standard-cluster-1-default-pool-04796f61-rr33,},Annotations:map[string]string{container.googleapis.com/instance_id: 4128615952046174550,node.alpha.kubernetes.io/ttl: 0,volumes.kubernetes.io/controller-managed-attach-detach: true,},OwnerReferences:[],Finalizers:[],ClusterName:,Initializers:nil,},Spec:NodeSpec{PodCIDR:10.8.1.0/24,DoNotUse_ExternalID:,ProviderID:gce://sinuous-tuner-235209/us-central1-a/gke-standard-cluster-1-default-pool-04796f61-rr33,Unschedulable:false,Taints:[],ConfigSource:nil,},Status:NodeStatus{Capacity:ResourceList{cpu: {{4 0} {&lt;nil&gt;} 4 DecimalSI},ephemeral-storage: {{101241290752 0} {&lt;nil&gt;}  BinarySI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{15768948736 0} {&lt;nil&gt;} 15399364Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Allocatable:ResourceList{cpu: {{3920 -3} {&lt;nil&gt;} 3920m DecimalSI},ephemeral-storage: {{47093746742 0} {&lt;nil&gt;} 47093746742 DecimalSI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{13004902400 0} {&lt;nil&gt;} 12700100Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Phase:,Conditions:[{CorruptDockerOverlay2 False 2019-06-27 11:32:06 +0000 UTC 2019-06-27 09:49:03 +0000 UTC CorruptDockerOverlay2 docker overlay2 is functioning properly} {FrequentUnregisterNetDevice False 2019-06-27 11:32:06 +0000 UTC 2019-06-27 09:49:03 +0000 UTC UnregisterNetDevice node is functioning properly} {KernelDeadlock False 2019-06-27 11:32:06 +0000 UTC 2019-06-27 09:44:02 +0000 UTC KernelHasNoDeadlock kernel has no deadlock} {ReadonlyFilesystem False 2019-06-27 11:32:06 +0000 UTC 2019-06-27 09:44:02 +0000 UTC FilesystemIsNotReadOnly Filesystem is not read-only} {FrequentKubeletRestart False 2019-06-27 11:32:06 +0000 UTC 2019-06-27 09:49:03 +0000 UTC FrequentKubeletRestart kubelet is functioning properly} {FrequentDockerRestart False 2019-06-27 11:32:06 +0000 UTC 2019-06-27 09:49:04 +0000 UTC FrequentDockerRestart docker is functioning properly} {FrequentContainerdRestart False 2019-06-27 11:32:06 +0000 UTC 2019-06-27 09:49:05 +0000 UTC FrequentContainerdRestart containerd is functioning properly} {NetworkUnavailable False 2019-06-27 09:45:45 +0000 UTC 2019-06-27 09:45:45 +0000 UTC RouteCreated NodeController create implicit route} {OutOfDisk False 2019-06-27 11:32:05 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientDisk kubelet has sufficient disk space available} {MemoryPressure False 2019-06-27 11:32:05 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientMemory kubelet has sufficient memory available} {DiskPressure False 2019-06-27 11:32:05 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasNoDiskPressure kubelet has no disk pressure} {PIDPressure False 2019-06-27 11:32:05 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientPID kubelet has sufficient PID available} {Ready True 2019-06-27 11:32:05 +0000 UTC 2019-06-27 09:46:05 +0000 UTC KubeletReady kubelet is posting ready status. AppArmor enabled}],Addresses:[{InternalIP 10.128.0.44} {ExternalIP 35.226.22.222} {Hostname gke-standard-cluster-1-default-pool-04796f61-rr33}],DaemonEndpoints:NodeDaemonEndpoints{KubeletEndpoint:DaemonEndpoint{Port:10250,},},NodeInfo:NodeSystemInfo{MachineID:46f905cfd94d81d48ea29f40cb3028b5,SystemUUID:46F905CF-D94D-81D4-8EA2-9F40CB3028B5,BootID:1a132385-80e1-4ef8-8613-100779f1bf54,KernelVersion:4.14.119+,OSImage:Container-Optimized OS from Google,ContainerRuntimeVersion:docker://17.3.2,KubeletVersion:v1.11.10-gke.4,KubeProxyVersion:v1.11.10-gke.4,OperatingSystem:linux,Architecture:amd64,},Images:[{[java@sha256:b91008e234402fc87e7889d6af1f36b6ece844c05989236d83d1f658a6f329b0 java:openjdk-8-jre] 311241763} {[gcr.io/heptio-images/sonobuoy-plugin-systemd-logs@sha256:58e077ba773ff5d7b6bba90771fad72217f0d10b913bb66bb0afb387c9552788 gcr.io/heptio-images/sonobuoy-plugin-systemd-logs:latest] 290890605} {[k8s.gcr.io/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e9eb2b k8s.gcr.io/node-problem-detector:v0.4.1] 286572743} {[gcr.io/stackdriver-agents/stackdriver-logging-agent@sha256:f8d5231b67b9c53f60068b535a11811d29d1b3efd53d2b79f2a2591ea338e4f2 gcr.io/stackdriver-agents/stackdriver-logging-agent:0.6-1.6.0-1] 223242132} {[k8s.gcr.io/zookeeper-install-3.5.0-alpha@sha256:60d7f3ce5ec9ff06bc82a1e42d4c66633b93ebd22a8c792a8d34f8c0078f6b68 k8s.gcr.io/zookeeper-install-3.5.0-alpha:e2e] 220145150} {[cockroachdb/cockroach@sha256:815acd11351fb5087edb0ec73896cd2baf5767dedc20ccd0bbe6d08d1e05b38f cockroachdb/cockroach:v1.0] 163225516} {[cockroachdb/cockroach-k8s-init@sha256:aa384ac9476677208acc0d0d625b0f277a7142603846cefb71f80706682c188c cockroachdb/cockroach-k8s-init:0.1] 153888353} {[k8s.gcr.io/fluentd-elasticsearch@sha256:b8c94527b489fb61d3d81ce5ad7f3ddbb7be71e9620a3a36e2bede2f2e487d73 k8s.gcr.io/fluentd-elasticsearch:v2.0.4] 135716379} {[k8s.gcr.io/nginx-slim-amd64@sha256:6654db6d4028756062edac466454ee5c9cf9b20ef79e35a81e3c840031eb1e2b k8s.gcr.io/nginx-slim-amd64:0.20] 103591055} {[k8s.gcr.io/kubernetes-dashboard-amd64@sha256:dc4026c1b595435ef5527ca598e1e9c4343076926d7d62b365c44831395adbd0 k8s.gcr.io/kubernetes-dashboard-amd64:v1.8.3] 102319441} {[gcr.io/google_containers/kube-proxy:v1.11.10-gke.4 k8s.gcr.io/kube-proxy:v1.11.10-gke.4] 102279340} {[k8s.gcr.io/echoserver@sha256:cb5c1bddd1b5665e1867a7fa1b5fa843a47ee433bbb75d4293888b71def53229 k8s.gcr.io/echoserver:1.10] 95361986} {[k8s.gcr.io/nginx-slim-amd64@sha256:8ca6a9ecef3b2ef02f6e0c3d449235d9c53d532f420cc0a29a6a133aa88df256 k8s.gcr.io/nginx-slim-amd64:0.21] 95339966} {[gcr.io/heptio-images/sonobuoy@sha256:d6d530b1ede4b82e9989aa1ba7ae4cd4fac09c6f7cb6a7c4f9270fff241e72c7 gcr.io/heptio-images/sonobuoy:v0.14.3] 89896078} {[k8s.gcr.io/fluentd-gcp-scaler@sha256:a5ace7506d393c4ed65eb2cbb6312c64ab357fcea16dff76b9055bc6e498e5ff k8s.gcr.io/fluentd-gcp-scaler:0.5.1] 86637208} {[k8s.gcr.io/heapster-amd64@sha256:9fae0af136ce0cf4f88393b3670f7139ffc464692060c374d2ae748e13144521 k8s.gcr.io/heapster-amd64:v1.6.0-beta.1] 76016169} {[k8s.gcr.io/ingress-gce-glbc-amd64@sha256:31d36bbd9c44caffa135fc78cf0737266fcf25e3cf0cd1c2fcbfbc4f7309cc52 k8s.gcr.io/ingress-gce-glbc-amd64:v1.1.1] 67801919} {[k8s.gcr.io/kube-addon-manager@sha256:d53486c3a0b49ebee019932878dc44232735d5622a51dbbdcec7124199020d09 k8s.gcr.io/kube-addon-manager:v8.7] 63322109} {[k8s.gcr.io/cpvpa-amd64@sha256:cfe7b0a11c9c8e18c87b1eb34fef9a7cbb8480a8da11fc2657f78dbf4739f869 k8s.gcr.io/cpvpa-amd64:v0.6.0] 51785854} {[k8s.gcr.io/k8s-dns-kube-dns-amd64@sha256:618a82fa66cf0c75e4753369a6999032372be7308866fc9afb381789b1e5ad52 k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.13] 51157394} {[k8s.gcr.io/cluster-proportional-autoscaler-amd64@sha256:003f98d9f411ddfa6ff6d539196355e03ddd69fa4ed38c7ffb8fec6f729afe2d k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.1.2-r2] 49648481} {[k8s.gcr.io/ip-masq-agent-amd64@sha256:1ffda57d87901bc01324c82ceb2145fe6a0448d3f0dd9cb65aa76a867cd62103 k8s.gcr.io/ip-masq-agent-amd64:v2.1.1] 49612505} {[k8s.gcr.io/k8s-dns-kube-dns-amd64@sha256:b99fc3eee2a9f052f7eb4cc00f15eb12fc405fa41019baa2d6b79847ae7284a8 k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.10] 49549457} {[k8s.gcr.io/rescheduler@sha256:156cfbfd05a5a815206fd2eeb6cbdaf1596d71ea4b415d3a6c43071dd7b99450 k8s.gcr.io/rescheduler:v0.4.0] 48973149} {[k8s.gcr.io/event-exporter@sha256:16ca66e2b5dc7a1ce6a5aafcb21d0885828b75cdfc08135430480f7ad2364adc k8s.gcr.io/event-exporter:v0.2.4] 47261019}],VolumesInUse:[],VolumesAttached:[],Config:nil,},}&#xA;Jun 27 11:32:12.623: INFO: &#xA;Logging kubelet events for node gke-standard-cluster-1-default-pool-04796f61-rr33&#xA;Jun 27 11:32:12.628: INFO: &#xA;Logging pods the kubelet thinks is on node gke-standard-cluster-1-default-pool-04796f61-rr33&#xA;Jun 27 11:32:12.643: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-rr33 started at &lt;nil&gt; (0+0 container statuses recorded)&#xA;Jun 27 11:32:12.643: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-rmqrw started at 2019-06-27 10:01:32 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:32:12.643: INFO: &#x9;Container sonobuoy-worker ready: true, restart count 1&#xA;Jun 27 11:32:12.643: INFO: &#x9;Container systemd-logs ready: true, restart count 1&#xA;Jun 27 11:32:12.643: INFO: event-exporter-v0.2.4-5c57bb7478-xtjl2 started at 2019-06-27 09:46:05 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:32:12.643: INFO: &#x9;Container event-exporter ready: true, restart count 0&#xA;Jun 27 11:32:12.643: INFO: &#x9;Container prometheus-to-sd-exporter ready: true, restart count 0&#xA;Jun 27 11:32:12.643: INFO: l7-default-backend-7ff48cffd7-g8pnv started at 2019-06-27 09:46:05 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 11:32:12.643: INFO: &#x9;Container default-http-backend ready: true, restart count 0&#xA;Jun 27 11:32:12.643: INFO: fluentd-gcp-v3.2.0-k8m8z started at 2019-06-27 09:46:25 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:32:12.643: INFO: &#x9;Container fluentd-gcp ready: true, restart count 0&#xA;Jun 27 11:32:12.643: INFO: &#x9;Container prometheus-to-sd-exporter ready: true, restart count 0&#xA;Jun 27 11:32:12.643: INFO: prometheus-to-sd-28w8p started at 2019-06-27 09:45:45 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 11:32:12.643: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 11:32:12.643: INFO: kube-dns-autoscaler-67c97c87fb-4j4kd started at 2019-06-27 09:46:05 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 11:32:12.643: INFO: &#x9;Container autoscaler ready: true, restart count 0&#xA;Jun 27 11:32:12.643: INFO: kube-dns-76dbb796c5-4ndph started at 2019-06-27 09:46:05 +0000 UTC (0+4 container statuses recorded)&#xA;Jun 27 11:32:12.643: INFO: &#x9;Container dnsmasq ready: true, restart count 0&#xA;Jun 27 11:32:12.643: INFO: &#x9;Container kubedns ready: true, restart count 0&#xA;Jun 27 11:32:12.643: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 11:32:12.643: INFO: &#x9;Container sidecar ready: true, restart count 0&#xA;Jun 27 11:32:12.643: INFO: fluentd-gcp-scaler-5b5bf8b99f-vkg4s started at 2019-06-27 09:46:05 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 11:32:12.643: INFO: &#x9;Container fluentd-gcp-scaler ready: true, restart count 0&#xA;Jun 27 11:32:12.689: INFO: &#xA;Latency metrics for node gke-standard-cluster-1-default-pool-04796f61-rr33&#xA;Jun 27 11:32:12.689: INFO: &#xA;Logging node info for node gke-standard-cluster-1-default-pool-04796f61-sx27&#xA;Jun 27 11:32:12.694: INFO: Node Info: &amp;Node{ObjectMeta:k8s_io_apimachinery_pkg_apis_meta_v1.ObjectMeta{Name:gke-standard-cluster-1-default-pool-04796f61-sx27,GenerateName:,Namespace:,SelfLink:/api/v1/nodes/gke-standard-cluster-1-default-pool-04796f61-sx27,UID:560b3037-98c0-11e9-93fd-42010a800028,ResourceVersion:32818,Generation:0,CreationTimestamp:2019-06-27 09:45:45 +0000 UTC,DeletionTimestamp:&lt;nil&gt;,DeletionGracePeriodSeconds:nil,Labels:map[string]string{beta.kubernetes.io/arch: amd64,beta.kubernetes.io/fluentd-ds-ready: true,beta.kubernetes.io/instance-type: n1-standard-4,beta.kubernetes.io/os: linux,cloud.google.com/gke-nodepool: default-pool,cloud.google.com/gke-os-distribution: cos,failure-domain.beta.kubernetes.io/region: us-central1,failure-domain.beta.kubernetes.io/zone: us-central1-a,kubernetes.io/hostname: gke-standard-cluster-1-default-pool-04796f61-sx27,},Annotations:map[string]string{container.googleapis.com/instance_id: 7591417305628225878,node.alpha.kubernetes.io/ttl: 0,volumes.kubernetes.io/controller-managed-attach-detach: true,},OwnerReferences:[],Finalizers:[],ClusterName:,Initializers:nil,},Spec:NodeSpec{PodCIDR:10.8.0.0/24,DoNotUse_ExternalID:,ProviderID:gce://sinuous-tuner-235209/us-central1-a/gke-standard-cluster-1-default-pool-04796f61-sx27,Unschedulable:false,Taints:[],ConfigSource:nil,},Status:NodeStatus{Capacity:ResourceList{cpu: {{4 0} {&lt;nil&gt;} 4 DecimalSI},ephemeral-storage: {{101241290752 0} {&lt;nil&gt;}  BinarySI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{15768948736 0} {&lt;nil&gt;} 15399364Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Allocatable:ResourceList{cpu: {{3920 -3} {&lt;nil&gt;} 3920m DecimalSI},ephemeral-storage: {{47093746742 0} {&lt;nil&gt;} 47093746742 DecimalSI},hugepages-2Mi: {{0 0} {&lt;nil&gt;} 0 DecimalSI},memory: {{13004902400 0} {&lt;nil&gt;} 12700100Ki BinarySI},pods: {{110 0} {&lt;nil&gt;} 110 DecimalSI},},Phase:,Conditions:[{FrequentContainerdRestart False 2019-06-27 11:31:58 +0000 UTC 2019-06-27 09:49:05 +0000 UTC FrequentContainerdRestart containerd is functioning properly} {KernelDeadlock False 2019-06-27 11:31:58 +0000 UTC 2019-06-27 09:44:02 +0000 UTC KernelHasNoDeadlock kernel has no deadlock} {ReadonlyFilesystem False 2019-06-27 11:31:58 +0000 UTC 2019-06-27 09:44:02 +0000 UTC FilesystemIsNotReadOnly Filesystem is not read-only} {CorruptDockerOverlay2 False 2019-06-27 11:31:58 +0000 UTC 2019-06-27 09:49:03 +0000 UTC CorruptDockerOverlay2 docker overlay2 is functioning properly} {FrequentUnregisterNetDevice False 2019-06-27 11:31:58 +0000 UTC 2019-06-27 09:49:03 +0000 UTC UnregisterNetDevice node is functioning properly} {FrequentKubeletRestart False 2019-06-27 11:31:58 +0000 UTC 2019-06-27 09:49:03 +0000 UTC FrequentKubeletRestart kubelet is functioning properly} {FrequentDockerRestart False 2019-06-27 11:31:58 +0000 UTC 2019-06-27 09:49:04 +0000 UTC FrequentDockerRestart docker is functioning properly} {NetworkUnavailable False 2019-06-27 09:45:46 +0000 UTC 2019-06-27 09:45:46 +0000 UTC RouteCreated NodeController create implicit route} {OutOfDisk False 2019-06-27 11:32:07 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientDisk kubelet has sufficient disk space available} {MemoryPressure False 2019-06-27 11:32:07 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientMemory kubelet has sufficient memory available} {DiskPressure False 2019-06-27 11:32:07 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasNoDiskPressure kubelet has no disk pressure} {PIDPressure False 2019-06-27 11:32:07 +0000 UTC 2019-06-27 09:45:45 +0000 UTC KubeletHasSufficientPID kubelet has sufficient PID available} {Ready True 2019-06-27 11:32:07 +0000 UTC 2019-06-27 09:46:06 +0000 UTC KubeletReady kubelet is posting ready status. AppArmor enabled}],Addresses:[{InternalIP 10.128.0.41} {ExternalIP 34.67.223.57} {Hostname gke-standard-cluster-1-default-pool-04796f61-sx27}],DaemonEndpoints:NodeDaemonEndpoints{KubeletEndpoint:DaemonEndpoint{Port:10250,},},NodeInfo:NodeSystemInfo{MachineID:ae4216d32aefe90029e9232dc77c1eda,SystemUUID:AE4216D3-2AEF-E900-29E9-232DC77C1EDA,BootID:75bdcdda-ed72-4df2-bb2c-68fbb20cc027,KernelVersion:4.14.119+,OSImage:Container-Optimized OS from Google,ContainerRuntimeVersion:docker://17.3.2,KubeletVersion:v1.11.10-gke.4,KubeProxyVersion:v1.11.10-gke.4,OperatingSystem:linux,Architecture:amd64,},Images:[{[k8s.gcr.io/mysql-galera@sha256:daa2bc871bad84f4a05536fa3b0956ff8698b41e7f48c6280a6450cec6d25917 k8s.gcr.io/mysql-galera:e2e] 715149006} {[java@sha256:b91008e234402fc87e7889d6af1f36b6ece844c05989236d83d1f658a6f329b0 java:openjdk-8-jre] 311241763} {[gcr.io/heptio-images/sonobuoy-plugin-systemd-logs@sha256:58e077ba773ff5d7b6bba90771fad72217f0d10b913bb66bb0afb387c9552788 gcr.io/heptio-images/sonobuoy-plugin-systemd-logs:latest] 290890605} {[k8s.gcr.io/node-problem-detector@sha256:f95cab985c26b2f46e9bd43283e0bfa88860c14e0fb0649266babe8b65e9eb2b k8s.gcr.io/node-problem-detector:v0.4.1] 286572743} {[gcr.io/stackdriver-agents/stackdriver-logging-agent@sha256:f8d5231b67b9c53f60068b535a11811d29d1b3efd53d2b79f2a2591ea338e4f2 gcr.io/stackdriver-agents/stackdriver-logging-agent:0.6-1.6.0-1] 223242132} {[k8s.gcr.io/zookeeper-install-3.5.0-alpha@sha256:60d7f3ce5ec9ff06bc82a1e42d4c66633b93ebd22a8c792a8d34f8c0078f6b68 k8s.gcr.io/zookeeper-install-3.5.0-alpha:e2e] 220145150} {[k8s.gcr.io/galera-install@sha256:7f8245935b92f170e22d7b2cdf802adc75da3a3e05120c50eaa97543e1c20b0a k8s.gcr.io/galera-install:0.1] 181241032} {[cockroachdb/cockroach@sha256:815acd11351fb5087edb0ec73896cd2baf5767dedc20ccd0bbe6d08d1e05b38f cockroachdb/cockroach:v1.0] 163225516} {[cockroachdb/cockroach-k8s-init@sha256:aa384ac9476677208acc0d0d625b0f277a7142603846cefb71f80706682c188c cockroachdb/cockroach-k8s-init:0.1] 153888353} {[k8s.gcr.io/fluentd-elasticsearch@sha256:b8c94527b489fb61d3d81ce5ad7f3ddbb7be71e9620a3a36e2bede2f2e487d73 k8s.gcr.io/fluentd-elasticsearch:v2.0.4] 135716379} {[debian@sha256:6b95a104400bb99ad60b47a48e37d5d1eb71a3f9ec8e86854e0cf64ecc5fd0e8 debian:jessie] 129072320} {[k8s.gcr.io/nginx-slim-amd64@sha256:6654db6d4028756062edac466454ee5c9cf9b20ef79e35a81e3c840031eb1e2b k8s.gcr.io/nginx-slim-amd64:0.20] 103591055} {[k8s.gcr.io/kubernetes-dashboard-amd64@sha256:dc4026c1b595435ef5527ca598e1e9c4343076926d7d62b365c44831395adbd0 k8s.gcr.io/kubernetes-dashboard-amd64:v1.8.3] 102319441} {[gcr.io/google_containers/kube-proxy:v1.11.10-gke.4 k8s.gcr.io/kube-proxy:v1.11.10-gke.4] 102279340} {[k8s.gcr.io/echoserver@sha256:cb5c1bddd1b5665e1867a7fa1b5fa843a47ee433bbb75d4293888b71def53229 k8s.gcr.io/echoserver:1.10] 95361986} {[k8s.gcr.io/nginx-slim-amd64@sha256:8ca6a9ecef3b2ef02f6e0c3d449235d9c53d532f420cc0a29a6a133aa88df256 k8s.gcr.io/nginx-slim-amd64:0.21] 95339966} {[gcr.io/heptio-images/sonobuoy@sha256:d6d530b1ede4b82e9989aa1ba7ae4cd4fac09c6f7cb6a7c4f9270fff241e72c7 gcr.io/heptio-images/sonobuoy:v0.14.3] 89896078} {[k8s.gcr.io/fluentd-gcp-scaler@sha256:a5ace7506d393c4ed65eb2cbb6312c64ab357fcea16dff76b9055bc6e498e5ff k8s.gcr.io/fluentd-gcp-scaler:0.5.1] 86637208} {[k8s.gcr.io/heapster-amd64@sha256:9fae0af136ce0cf4f88393b3670f7139ffc464692060c374d2ae748e13144521 k8s.gcr.io/heapster-amd64:v1.6.0-beta.1] 76016169} {[k8s.gcr.io/ingress-gce-glbc-amd64@sha256:31d36bbd9c44caffa135fc78cf0737266fcf25e3cf0cd1c2fcbfbc4f7309cc52 k8s.gcr.io/ingress-gce-glbc-amd64:v1.1.1] 67801919} {[k8s.gcr.io/kube-addon-manager@sha256:d53486c3a0b49ebee019932878dc44232735d5622a51dbbdcec7124199020d09 k8s.gcr.io/kube-addon-manager:v8.7] 63322109} {[k8s.gcr.io/cpvpa-amd64@sha256:cfe7b0a11c9c8e18c87b1eb34fef9a7cbb8480a8da11fc2657f78dbf4739f869 k8s.gcr.io/cpvpa-amd64:v0.6.0] 51785854} {[k8s.gcr.io/k8s-dns-kube-dns-amd64@sha256:618a82fa66cf0c75e4753369a6999032372be7308866fc9afb381789b1e5ad52 k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.13] 51157394} {[k8s.gcr.io/cluster-proportional-autoscaler-amd64@sha256:003f98d9f411ddfa6ff6d539196355e03ddd69fa4ed38c7ffb8fec6f729afe2d k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.1.2-r2] 49648481} {[k8s.gcr.io/ip-masq-agent-amd64@sha256:1ffda57d87901bc01324c82ceb2145fe6a0448d3f0dd9cb65aa76a867cd62103 k8s.gcr.io/ip-masq-agent-amd64:v2.1.1] 49612505}],VolumesInUse:[],VolumesAttached:[],Config:nil,},}&#xA;Jun 27 11:32:12.694: INFO: &#xA;Logging kubelet events for node gke-standard-cluster-1-default-pool-04796f61-sx27&#xA;Jun 27 11:32:12.699: INFO: &#xA;Logging pods the kubelet thinks is on node gke-standard-cluster-1-default-pool-04796f61-sx27&#xA;Jun 27 11:32:12.712: INFO: prometheus-to-sd-2qsz9 started at 2019-06-27 09:45:46 +0000 UTC (0+1 container statuses recorded)&#xA;Jun 27 11:32:12.712: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 11:32:12.712: INFO: fluentd-gcp-v3.2.0-jb9xn started at 2019-06-27 09:46:25 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:32:12.712: INFO: &#x9;Container fluentd-gcp ready: true, restart count 0&#xA;Jun 27 11:32:12.712: INFO: &#x9;Container prometheus-to-sd-exporter ready: true, restart count 0&#xA;Jun 27 11:32:12.712: INFO: kube-dns-76dbb796c5-6qg5f started at 2019-06-27 09:46:07 +0000 UTC (0+4 container statuses recorded)&#xA;Jun 27 11:32:12.712: INFO: &#x9;Container dnsmasq ready: true, restart count 0&#xA;Jun 27 11:32:12.712: INFO: &#x9;Container kubedns ready: true, restart count 0&#xA;Jun 27 11:32:12.712: INFO: &#x9;Container prometheus-to-sd ready: true, restart count 0&#xA;Jun 27 11:32:12.712: INFO: &#x9;Container sidecar ready: true, restart count 0&#xA;Jun 27 11:32:12.712: INFO: kube-proxy-gke-standard-cluster-1-default-pool-04796f61-sx27 started at &lt;nil&gt; (0+0 container statuses recorded)&#xA;Jun 27 11:32:12.712: INFO: sonobuoy-systemd-logs-daemon-set-887c578ef8c54f54-28cmn started at 2019-06-27 10:01:32 +0000 UTC (0+2 container statuses recorded)&#xA;Jun 27 11:32:12.712: INFO: &#x9;Container sonobuoy-worker ready: true, restart count 1&#xA;Jun 27 11:32:12.712: INFO: &#x9;Container systemd-logs ready: true, restart count 1&#xA;Jun 27 11:32:12.743: INFO: &#xA;Latency metrics for node gke-standard-cluster-1-default-pool-04796f61-sx27&#xA;STEP: Dumping a list of prepulled images on each node to file /tmp/results/image-puller.txt&#xA;Jun 27 11:32:12.750: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready&#xA;STEP: Destroying namespace &#34;e2e-tests-cassandra-upgrade-g4xjl&#34; for this suite.&#xA;Jun 27 11:32:18.775: INFO: Waiting up to 30s for server preferred namespaced resources to be successfully discovered&#xA;Jun 27 11:32:19.055: INFO: namespace: e2e-tests-cassandra-upgrade-g4xjl, resource: bindings, ignored listing per whitelist&#xA;Jun 27 11:32:19.101: INFO: namespace e2e-tests-cassandra-upgrade-g4xjl deletion completed in 6.344750219s&#xA;</system-out>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: hostPath] should support file as subpath" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[k8s.io] Cluster size autoscaler scalability [Slow] shouldn&#39;t scale down with underutilized nodes due to host port conflicts [Feature:ClusterAutoscalerScalability5]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Subpath [Volume type: gcePDPartitioned] should support restarting containers using file as subpath [Slow]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] Network Partition [Disruptive] [Slow] [k8s.io] Pods should return to running and ready state after network partition is healed All pods on the unreachable node should be marked as NotReady upon the node turn NotReady AND all pods should be mark back to Ready when the node get back to Ready before pod eviction timeout" classname="Kubernetes e2e suite" time="6.503799004">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-apps] Deployment deployment should support rollback" classname="Kubernetes e2e suite" time="15.038513327"></testcase>
      <testcase name="[sig-cluster-lifecycle] Restart [Disruptive] should restart all nodes and ensure all nodes and pods recover" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] Projected should provide podname as non-root with fsgroup and defaultMode [NodeFeature:FSGroup]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] EmptyDir volumes when FSGroup is specified [NodeFeature:FSGroup] files with FSGroup ownership should support (root,0644,tmpfs)" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-storage] PersistentVolumes-local  [Volume type: tmpfs] One pod requesting one prebound PVC should be able to mount volume and read from pod1" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-network] NetworkPolicy NetworkPolicy between server and client should support allow-all policy [Feature:NetworkPolicy]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
      <testcase name="[sig-api-machinery] CustomResourceDefinition resources Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]" classname="Kubernetes e2e suite" time="0">
          <skipped></skipped>
      </testcase>
  </testsuite>